<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/main/java/com/cliniquedigitale/cliniquedigitale/util/JPAUtil.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/cliniquedigitale/cliniquedigitale/util/JPAUtil.java" />
              <option name="originalContent" value="&#10;" />
              <option name="updatedContent" value="package com.cliniquedigitale.cliniquedigitale.util;&#10;&#10;// Squelette utilitaire JPA (laisser vide pour l'instant)&#10;public final class JPAUtil {&#10;    private JPAUtil() {}&#10;    // TODO: ajouter EntityManagerFactory et méthodes plus tard&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/com/cliniquedigitale/controllers/PatientDoctorServlet.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/cliniquedigitale/controllers/PatientDoctorServlet.java" />
              <option name="originalContent" value="package com.cliniquedigitale.controllers;&#10;&#10;import com.cliniquedigitale.DTO.AvailabilityDTO;&#10;import com.cliniquedigitale.Enums.Jour;&#10;import com.cliniquedigitale.Enums.StatutDispo;&#10;import com.cliniquedigitale.entities.Appointment;&#10;import com.cliniquedigitale.entities.Availability;&#10;import com.cliniquedigitale.entities.Doctor;&#10;import com.cliniquedigitale.repository.AppointmentRepository;&#10;import com.cliniquedigitale.repository.AvailabilityRepository;&#10;import com.google.gson.Gson;&#10;import com.cliniquedigitale.service.AvailabilityService;&#10;import com.cliniquedigitale.service.DoctorSevice;&#10;import jakarta.inject.Inject;&#10;import jakarta.servlet.ServletException;&#10;import jakarta.servlet.annotation.WebServlet;&#10;import jakarta.servlet.http.HttpServlet;&#10;import jakarta.servlet.http.HttpServletRequest;&#10;import jakarta.servlet.http.HttpServletResponse;&#10;&#10;import java.io.IOException;&#10;import java.io.PrintWriter;&#10;import java.time.DayOfWeek;&#10;import java.time.LocalDate;&#10;import java.time.LocalTime;&#10;import java.time.YearMonth;&#10;import java.time.format.DateTimeFormatter;&#10;import java.time.format.TextStyle;&#10;import java.util.*;&#10;&#10;@WebServlet(&quot;/patient/doctor&quot;)&#10;public class PatientDoctorServlet extends HttpServlet {&#10;&#10;    @Inject&#10;    private DoctorSevice doctorService;&#10;&#10;    @Inject&#10;    private AvailabilityService availabilityService;&#10;&#10;    @Inject&#10;    private AvailabilityRepository availabilityRepository;&#10;&#10;    @Inject&#10;    private AppointmentRepository appointmentRepository;&#10;&#10;    private static final DateTimeFormatter TIME_FMT = DateTimeFormatter.ofPattern(&quot;HH:mm&quot;);&#10;&#10;    @Override&#10;    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {&#10;        // Branche JSON pour les créneaux&#10;        String action = request.getParameter(&quot;action&quot;);&#10;        if (&quot;slots&quot;.equalsIgnoreCase(action)) {&#10;            handleSlots(request, response);&#10;            return;&#10;        }&#10;&#10;        String idParam = request.getParameter(&quot;id&quot;);&#10;        if (idParam == null || idParam.isBlank()) {&#10;            response.sendRedirect(request.getContextPath() + &quot;/patient&quot;);&#10;            return;&#10;        }&#10;        UUID doctorId;&#10;        try {&#10;            doctorId = UUID.fromString(idParam);&#10;        } catch (IllegalArgumentException e) {&#10;            response.sendRedirect(request.getContextPath() + &quot;/patient&quot;);&#10;            return;&#10;        }&#10;&#10;        Doctor doctor = doctorService.getDoctorById(doctorId);&#10;        if (doctor == null) {&#10;            response.sendRedirect(request.getContextPath() + &quot;/patient&quot;);&#10;            return;&#10;        }&#10;&#10;        int year;&#10;        int month;&#10;        try {&#10;            year = Integer.parseInt(Optional.ofNullable(request.getParameter(&quot;year&quot;)).orElse(String.valueOf(LocalDate.now().getYear())));&#10;            month = Integer.parseInt(Optional.ofNullable(request.getParameter(&quot;month&quot;)).orElse(String.valueOf(LocalDate.now().getMonthValue())));&#10;        } catch (NumberFormatException ex) {&#10;            year = LocalDate.now().getYear();&#10;            month = LocalDate.now().getMonthValue();&#10;        }&#10;        YearMonth ym;&#10;        try {&#10;            ym = YearMonth.of(year, month);&#10;        } catch (Exception e) {&#10;            ym = YearMonth.now();&#10;            year = ym.getYear();&#10;            month = ym.getMonthValue();&#10;        }&#10;&#10;        List&lt;AvailabilityDTO&gt; slots = availabilityService.getAvailabilityByDoctorId(doctorId);&#10;        Map&lt;Jour, List&lt;String&gt;&gt; weekly = new EnumMap&lt;&gt;(Jour.class);&#10;        for (AvailabilityDTO dto : slots) {&#10;            if (dto.getJour() == null) continue;&#10;            String label;&#10;            if (dto.getHeureDebut() != null &amp;&amp; dto.getHeureFin() != null) {&#10;                label = String.format(&quot;%s - %s&quot;, dto.getHeureDebut(), dto.getHeureFin());&#10;            } else {&#10;                label = &quot;Disponible&quot;;&#10;            }&#10;            weekly.computeIfAbsent(dto.getJour(), k -&gt; new ArrayList&lt;&gt;()).add(label);&#10;        }&#10;&#10;        Set&lt;DayOfWeek&gt; availableDows = new HashSet&lt;&gt;();&#10;        for (Jour j : weekly.keySet()) {&#10;            availableDows.add(mapJourToDayOfWeek(j));&#10;        }&#10;&#10;        List&lt;Map&lt;String, Object&gt;&gt; dayCells = new ArrayList&lt;&gt;();&#10;        LocalDate firstDay = ym.atDay(1);&#10;        int daysInMonth = ym.lengthOfMonth();&#10;        for (int d = 1; d &lt;= daysInMonth; d++) {&#10;            LocalDate date = ym.atDay(d);&#10;            DayOfWeek dow = date.getDayOfWeek();&#10;            boolean isAvailable = availableDows.contains(dow);&#10;            Map&lt;String, Object&gt; cell = new HashMap&lt;&gt;();&#10;            cell.put(&quot;day&quot;, d);&#10;            cell.put(&quot;dow&quot;, dow.getValue()); // 1=Monday..7=Sunday&#10;            cell.put(&quot;available&quot;, isAvailable);&#10;            dayCells.add(cell);&#10;        }&#10;&#10;        String monthLabel = ym.getMonth().getDisplayName(TextStyle.FULL, Locale.FRENCH);&#10;        LocalDate today = LocalDate.now();&#10;        YearMonth prev = ym.minusMonths(1);&#10;        YearMonth next = ym.plusMonths(1);&#10;&#10;        request.setAttribute(&quot;doctor&quot;, doctor);&#10;        request.setAttribute(&quot;weekly&quot;, weekly);&#10;        request.setAttribute(&quot;year&quot;, year);&#10;        request.setAttribute(&quot;month&quot;, month);&#10;        request.setAttribute(&quot;monthLabel&quot;, monthLabel);&#10;        request.setAttribute(&quot;daysInMonth&quot;, daysInMonth);&#10;        request.setAttribute(&quot;firstDow&quot;, firstDay.getDayOfWeek().getValue());&#10;        request.setAttribute(&quot;dayCells&quot;, dayCells);&#10;        request.setAttribute(&quot;today&quot;, today);&#10;        request.setAttribute(&quot;prevYear&quot;, prev.getYear());&#10;        request.setAttribute(&quot;prevMonth&quot;, prev.getMonthValue());&#10;        request.setAttribute(&quot;nextYear&quot;, next.getYear());&#10;        request.setAttribute(&quot;nextMonth&quot;, next.getMonthValue());&#10;&#10;        request.getRequestDispatcher(&quot;/WEB-INF/view/patient/doctor-availability.jsp&quot;).forward(request, response);&#10;    }&#10;&#10;    private void handleSlots(HttpServletRequest request, HttpServletResponse response) throws IOException {&#10;        String idParam = request.getParameter(&quot;id&quot;);&#10;        String dateParam = request.getParameter(&quot;date&quot;);&#10;        if (idParam == null || idParam.isBlank() || dateParam == null || dateParam.isBlank()) {&#10;            response.setStatus(HttpServletResponse.SC_BAD_REQUEST);&#10;            writeJson(response, Map.of(&quot;error&quot;, &quot;Paramètres manquants (id, date)&quot;));&#10;            return;&#10;        }&#10;        UUID doctorId;&#10;        LocalDate date;&#10;        try {&#10;            doctorId = UUID.fromString(idParam);&#10;            date = LocalDate.parse(dateParam);&#10;        } catch (Exception e) {&#10;            response.setStatus(HttpServletResponse.SC_BAD_REQUEST);&#10;            writeJson(response, Map.of(&quot;error&quot;, &quot;Paramètres invalides&quot;));&#10;            return;&#10;        }&#10;&#10;        Doctor doctor = doctorService.getDoctorById(doctorId);&#10;        if (doctor == null) {&#10;            response.setStatus(HttpServletResponse.SC_NOT_FOUND);&#10;            writeJson(response, Map.of(&quot;error&quot;, &quot;Médecin introuvable&quot;));&#10;            return;&#10;        }&#10;&#10;        Jour jour = mapToJour(date.getDayOfWeek());&#10;        List&lt;Availability&gt; raw = availabilityRepository.findByDoctorAndJour(doctor, jour);&#10;        List&lt;Availability&gt; availabilities = new ArrayList&lt;&gt;();&#10;        for (Availability a : raw) {&#10;            if (a.getStatut() == StatutDispo.AVAILABLE &amp;&amp; a.getHeureDebut() != null &amp;&amp; a.getHeureFin() != null &amp;&amp; a.getHeureFin().isAfter(a.getHeureDebut())) {&#10;                availabilities.add(a);&#10;            }&#10;        }&#10;&#10;        Set&lt;LocalTime&gt; slots = new TreeSet&lt;&gt;();&#10;        for (Availability a : availabilities) {&#10;            LocalTime t = a.getHeureDebut();&#10;            while (!t.plusMinutes(30).isAfter(a.getHeureFin())) {&#10;                slots.add(t);&#10;                t = t.plusMinutes(30);&#10;            }&#10;        }&#10;&#10;        List&lt;Appointment&gt; appointments = appointmentRepository.findByDoctorAndDate(doctor, date);&#10;        Set&lt;LocalTime&gt; reserved = new HashSet&lt;&gt;();&#10;        for (Appointment ap : appointments) if (ap.getHour() != null) reserved.add(ap.getHour());&#10;        slots.removeAll(reserved);&#10;&#10;        if (date.isEqual(LocalDate.now())) {&#10;            LocalTime now = LocalTime.now().withSecond(0).withNano(0);&#10;            slots.removeIf(t -&gt; !t.isAfter(now));&#10;        }&#10;&#10;        List&lt;String&gt; out = new ArrayList&lt;&gt;();&#10;        for (LocalTime t : slots) out.add(t.format(TIME_FMT));&#10;        writeJson(response, out);&#10;    }&#10;&#10;    private void writeJson(HttpServletResponse response, Object payload) throws IOException {&#10;        response.setContentType(&quot;application/json;charset=UTF-8&quot;);&#10;        try (PrintWriter w = response.getWriter()) {&#10;            w.write(new Gson().toJson(payload));&#10;        }&#10;    }&#10;&#10;    private DayOfWeek mapJourToDayOfWeek(Jour jour) {&#10;        return switch (jour) {&#10;            case LUNDI -&gt; DayOfWeek.MONDAY;&#10;            case MARDI -&gt; DayOfWeek.TUESDAY;&#10;            case MERCREDI -&gt; DayOfWeek.WEDNESDAY;&#10;            case JEUDI -&gt; DayOfWeek.THURSDAY;&#10;            case VENDREDI -&gt; DayOfWeek.FRIDAY;&#10;            case SAMEDI -&gt; DayOfWeek.SATURDAY;&#10;            case DIMANCHE -&gt; DayOfWeek.SUNDAY;&#10;        };&#10;    }&#10;&#10;    private Jour mapToJour(DayOfWeek dow) {&#10;        return switch (dow) {&#10;            case MONDAY -&gt; Jour.LUNDI;&#10;            case TUESDAY -&gt; Jour.MARDI;&#10;            case WEDNESDAY -&gt; Jour.MERCREDI;&#10;            case THURSDAY -&gt; Jour.JEUDI;&#10;            case FRIDAY -&gt; Jour.VENDREDI;&#10;            case SATURDAY -&gt; Jour.SAMEDI;&#10;            case SUNDAY -&gt; Jour.DIMANCHE;&#10;        };&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.cliniquedigitale.controllers;&#10;&#10;import com.cliniquedigitale.DTO.AvailabilityDTO;&#10;import com.cliniquedigitale.Enums.Jour;&#10;import com.cliniquedigitale.entities.Doctor;&#10;import com.cliniquedigitale.service.AvailabilityService;&#10;import com.cliniquedigitale.service.DoctorSevice;&#10;import jakarta.inject.Inject;&#10;import jakarta.servlet.ServletException;&#10;import jakarta.servlet.annotation.WebServlet;&#10;import jakarta.servlet.http.HttpServlet;&#10;import jakarta.servlet.http.HttpServletRequest;&#10;import jakarta.servlet.http.HttpServletResponse;&#10;&#10;import java.io.IOException;&#10;import java.time.DayOfWeek;&#10;import java.time.LocalDate;&#10;import java.time.YearMonth;&#10;import java.time.format.TextStyle;&#10;import java.util.*;&#10;&#10;@WebServlet(&quot;/patient/doctor&quot;)&#10;public class PatientDoctorServlet extends HttpServlet {&#10;&#10;    @Inject&#10;    private DoctorSevice doctorService;&#10;&#10;    @Inject&#10;    private AvailabilityService availabilityService;&#10;&#10;    @Override&#10;    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {&#10;        String idParam = request.getParameter(&quot;id&quot;);&#10;        if (idParam == null || idParam.isBlank()) {&#10;            response.sendRedirect(request.getContextPath() + &quot;/patient&quot;);&#10;            return;&#10;        }&#10;        UUID doctorId;&#10;        try {&#10;            doctorId = UUID.fromString(idParam);&#10;        } catch (IllegalArgumentException e) {&#10;            response.sendRedirect(request.getContextPath() + &quot;/patient&quot;);&#10;            return;&#10;        }&#10;&#10;        Doctor doctor = doctorService.getDoctorById(doctorId);&#10;        if (doctor == null) {&#10;            response.sendRedirect(request.getContextPath() + &quot;/patient&quot;);&#10;            return;&#10;        }&#10;&#10;        int year;&#10;        int month;&#10;        try {&#10;            year = Integer.parseInt(Optional.ofNullable(request.getParameter(&quot;year&quot;)).orElse(String.valueOf(LocalDate.now().getYear())));&#10;            month = Integer.parseInt(Optional.ofNullable(request.getParameter(&quot;month&quot;)).orElse(String.valueOf(LocalDate.now().getMonthValue())));&#10;        } catch (NumberFormatException ex) {&#10;            year = LocalDate.now().getYear();&#10;            month = LocalDate.now().getMonthValue();&#10;        }&#10;        YearMonth ym;&#10;        try {&#10;            ym = YearMonth.of(year, month);&#10;        } catch (Exception e) {&#10;            ym = YearMonth.now();&#10;            year = ym.getYear();&#10;            month = ym.getMonthValue();&#10;        }&#10;&#10;        List&lt;AvailabilityDTO&gt; slots = availabilityService.getAvailabilityByDoctorId(doctorId.toString());&#10;        Map&lt;Jour, List&lt;String&gt;&gt; weekly = new EnumMap&lt;&gt;(Jour.class);&#10;        for (AvailabilityDTO dto : slots) {&#10;            if (dto.getJour() == null) continue;&#10;            String label;&#10;            if (dto.getHeureDebut() != null &amp;&amp; dto.getHeureFin() != null) {&#10;                label = String.format(&quot;%s - %s&quot;, dto.getHeureDebut(), dto.getHeureFin());&#10;            } else {&#10;                label = &quot;Disponible&quot;;&#10;            }&#10;            weekly.computeIfAbsent(dto.getJour(), k -&gt; new ArrayList&lt;&gt;()).add(label);&#10;        }&#10;&#10;        Set&lt;DayOfWeek&gt; availableDows = new HashSet&lt;&gt;();&#10;        for (Jour j : weekly.keySet()) {&#10;            availableDows.add(mapJourToDayOfWeek(j));&#10;        }&#10;&#10;        List&lt;Map&lt;String, Object&gt;&gt; dayCells = new ArrayList&lt;&gt;();&#10;        LocalDate firstDay = ym.atDay(1);&#10;        int daysInMonth = ym.lengthOfMonth();&#10;        for (int d = 1; d &lt;= daysInMonth; d++) {&#10;            LocalDate date = ym.atDay(d);&#10;            DayOfWeek dow = date.getDayOfWeek();&#10;            boolean isAvailable = availableDows.contains(dow);&#10;            Map&lt;String, Object&gt; cell = new HashMap&lt;&gt;();&#10;            cell.put(&quot;day&quot;, d);&#10;            cell.put(&quot;dow&quot;, dow.getValue()); // 1=Monday..7=Sunday&#10;            cell.put(&quot;available&quot;, isAvailable);&#10;            dayCells.add(cell);&#10;        }&#10;&#10;        String monthLabel = ym.getMonth().getDisplayName(TextStyle.FULL, Locale.FRENCH);&#10;        LocalDate today = LocalDate.now();&#10;        YearMonth prev = ym.minusMonths(1);&#10;        YearMonth next = ym.plusMonths(1);&#10;&#10;        request.setAttribute(&quot;doctor&quot;, doctor);&#10;        request.setAttribute(&quot;weekly&quot;, weekly);&#10;        request.setAttribute(&quot;year&quot;, year);&#10;        request.setAttribute(&quot;month&quot;, month);&#10;        request.setAttribute(&quot;monthLabel&quot;, monthLabel);&#10;        request.setAttribute(&quot;daysInMonth&quot;, daysInMonth);&#10;        request.setAttribute(&quot;firstDow&quot;, firstDay.getDayOfWeek().getValue());&#10;        request.setAttribute(&quot;dayCells&quot;, dayCells);&#10;        request.setAttribute(&quot;today&quot;, today);&#10;        request.setAttribute(&quot;prevYear&quot;, prev.getYear());&#10;        request.setAttribute(&quot;prevMonth&quot;, prev.getMonthValue());&#10;        request.setAttribute(&quot;nextYear&quot;, next.getYear());&#10;        request.setAttribute(&quot;nextMonth&quot;, next.getMonthValue());&#10;&#10;        request.getRequestDispatcher(&quot;/WEB-INF/view/patient/doctor-availability.jsp&quot;).forward(request, response);&#10;    }&#10;&#10;    private DayOfWeek mapJourToDayOfWeek(Jour jour) {&#10;        return switch (jour) {&#10;            case LUNDI -&gt; DayOfWeek.MONDAY;&#10;            case MARDI -&gt; DayOfWeek.TUESDAY;&#10;            case MERCREDI -&gt; DayOfWeek.WEDNESDAY;&#10;            case JEUDI -&gt; DayOfWeek.THURSDAY;&#10;            case VENDREDI -&gt; DayOfWeek.FRIDAY;&#10;            case SAMEDI -&gt; DayOfWeek.SATURDAY;&#10;            case DIMANCHE -&gt; DayOfWeek.SUNDAY;&#10;        };&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/com/cliniquedigitale/service/AvailabilityService.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/cliniquedigitale/service/AvailabilityService.java" />
              <option name="originalContent" value="package com.cliniquedigitale.service;&#10;&#10;import com.cliniquedigitale.DTO.AvailabilityDTO;&#10;import com.cliniquedigitale.Enums.Jour;&#10;import com.cliniquedigitale.Enums.StatutDispo;&#10;import com.cliniquedigitale.entities.Availability;&#10;import com.cliniquedigitale.entities.Doctor;&#10;import com.cliniquedigitale.mapper.AvailabilityMapper;&#10;import com.cliniquedigitale.repository.AvailabilityRepository;&#10;import com.cliniquedigitale.repository.DoctorRepository;&#10;import jakarta.enterprise.context.ApplicationScoped;&#10;import jakarta.inject.Inject;&#10;&#10;import java.time.DayOfWeek;&#10;import java.time.LocalDate;&#10;import java.time.LocalTime;&#10;import java.util.*;&#10;&#10;@ApplicationScoped&#10;public class AvailabilityService {&#10;&#10;    @Inject&#10;    private AvailabilityRepository availabilityRepository;&#10;&#10;    @Inject&#10;    private DoctorRepository doctorRepository;&#10;&#10;    @Inject&#10;    private AvailabilityMapper availabilityMapper;&#10;&#10;    @SuppressWarnings(&quot;unused&quot;)&#10;    public List&lt;Availability&gt; getAvailability(String doctorId){&#10;        List&lt;Availability&gt; availabilityList = new ArrayList&lt;&gt;();&#10;        List&lt;Availability&gt; availabilities = availabilityRepository.findByDoctor(UUID.fromString(doctorId));&#10;        for (Availability a : availabilities){&#10;            if (a.getStatut() == StatutDispo.AVAILABLE){&#10;                availabilityList.add(a);&#10;            }&#10;        }&#10;        return availabilityList;&#10;    }&#10;&#10;    public List&lt;AvailabilityDTO&gt; getAvailabilityByEmail(String userEmail) {&#10;        if (userEmail == null || userEmail.isBlank()) return Collections.emptyList();&#10;        Doctor doctor = doctorRepository.findByUserEmail(userEmail);&#10;        if (doctor == null) return Collections.emptyList();&#10;        List&lt;Availability&gt; all = availabilityRepository.findByDoctor(doctor.getId());&#10;        List&lt;Availability&gt; availables = new ArrayList&lt;&gt;();&#10;        for (Availability a : all) if (a.getStatut() == StatutDispo.AVAILABLE) availables.add(a);&#10;        return availabilityMapper.toDTOList(availables);&#10;    }&#10;&#10;    public List&lt;AvailabilityDTO&gt; getTodayAvailabilityByEmail(String userEmail) {&#10;        if (userEmail == null || userEmail.isBlank()) return Collections.emptyList();&#10;        Doctor doctor = doctorRepository.findByUserEmail(userEmail);&#10;        if (doctor == null) return Collections.emptyList();&#10;        Jour todayJour = mapToJour(LocalDate.now().getDayOfWeek());&#10;        List&lt;Availability&gt; list = availabilityRepository.findByDoctorAndJour(doctor, todayJour);&#10;        List&lt;Availability&gt; availables = new ArrayList&lt;&gt;();&#10;        for (Availability a : list) if (a.getStatut() == StatutDispo.AVAILABLE) availables.add(a);&#10;        availables.sort(Comparator.comparing(Availability::getHeureDebut, Comparator.nullsLast(Comparator.naturalOrder())));&#10;        return availabilityMapper.toDTOList(availables);&#10;    }&#10;&#10;    private Jour mapToJour(DayOfWeek dow) {&#10;        return switch (dow) {&#10;            case MONDAY -&gt; Jour.LUNDI;&#10;            case TUESDAY -&gt; Jour.MARDI;&#10;            case WEDNESDAY -&gt; Jour.MERCREDI;&#10;            case THURSDAY -&gt; Jour.JEUDI;&#10;            case FRIDAY -&gt; Jour.VENDREDI;&#10;            case SATURDAY -&gt; Jour.SAMEDI;&#10;            case SUNDAY -&gt; Jour.DIMANCHE;&#10;        };&#10;    }&#10;&#10;    @SuppressWarnings(&quot;unused&quot;)&#10;    public void saveWeekly(String userEmail, List&lt;Jour&gt; jours, List&lt;LocalTime[]&gt; slots) {&#10;        if (userEmail == null || userEmail.isBlank()) throw new IllegalArgumentException(&quot;email requis&quot;);&#10;        if (jours == null || jours.isEmpty()) return;&#10;        if (slots == null || slots.isEmpty()) return;&#10;&#10;        Doctor doctor = doctorRepository.findByUserEmail(userEmail);&#10;        if (doctor == null) throw new IllegalStateException(&quot;Médecin introuvable pour l'utilisateur: &quot; + userEmail);&#10;&#10;        for (Jour jour : jours) {&#10;            availabilityRepository.deleteByDoctorAndJour(doctor, jour);&#10;            List&lt;Availability&gt; toSave = new ArrayList&lt;&gt;();&#10;            for (LocalTime[] tr : slots) {&#10;                LocalTime start = tr[0];&#10;                LocalTime end = tr[1];&#10;                if (start == null || end == null || !end.isAfter(start)) continue;&#10;                Availability a = new Availability();&#10;                a.setDoctor(doctor);&#10;                a.setJour(jour);&#10;                a.setHeureDebut(start);&#10;                a.setHeureFin(end);&#10;                a.setStatut(StatutDispo.ON_LEAVE);&#10;                a.setValide(true);&#10;                toSave.add(a);&#10;            }&#10;            availabilityRepository.saveAll(toSave);&#10;        }&#10;    }&#10;&#10;    public void saveDaily(String userEmail, Map&lt;Jour, List&lt;LocalTime[]&gt;&gt; daySlots) {&#10;        if (userEmail == null || userEmail.isBlank()) throw new IllegalArgumentException(&quot;email requis&quot;);&#10;        if (daySlots == null || daySlots.isEmpty()) return;&#10;&#10;        Doctor doctor = doctorRepository.findByUserEmail(userEmail);&#10;        if (doctor == null) throw new IllegalStateException(&quot;Médecin introuvable pour l'utilisateur: &quot; + userEmail);&#10;&#10;        for (Map.Entry&lt;Jour, List&lt;LocalTime[]&gt;&gt; entry : daySlots.entrySet()) {&#10;            Jour jour = entry.getKey();&#10;            List&lt;LocalTime[]&gt; slots = entry.getValue();&#10;            availabilityRepository.deleteByDoctorAndJour(doctor, jour);&#10;            List&lt;Availability&gt; toSave = new ArrayList&lt;&gt;();&#10;            for (LocalTime[] tr : slots) {&#10;                LocalTime start = tr[0];&#10;                LocalTime end = tr[1];&#10;                if (start == null || end == null || !end.isAfter(start)) continue;&#10;                Availability a = new Availability();&#10;                a.setDoctor(doctor);&#10;                a.setJour(jour);&#10;                a.setHeureDebut(start);&#10;                a.setHeureFin(end);&#10;                a.setStatut(StatutDispo.AVAILABLE);&#10;                a.setValide(true);&#10;                toSave.add(a);&#10;            }&#10;            availabilityRepository.saveAll(toSave);&#10;        }&#10;    }&#10;&#10;    public void saveDaily(String userEmail, List&lt;AvailabilityDTO&gt; availabilityDTOs) {&#10;        if (userEmail == null || userEmail.isBlank()) throw new IllegalArgumentException(&quot;email requis&quot;);&#10;        if (availabilityDTOs == null || availabilityDTOs.isEmpty()) return;&#10;        Doctor doctor = doctorRepository.findByUserEmail(userEmail);&#10;        if (doctor == null) throw new IllegalStateException(&quot;Médecin introuvable pour l'utilisateur: &quot; + userEmail);&#10;&#10;        Map&lt;Jour, List&lt;AvailabilityDTO&gt;&gt; grouped = new EnumMap&lt;&gt;(Jour.class);&#10;        for (AvailabilityDTO dto : availabilityDTOs) {&#10;            if (dto == null || dto.getJour() == null) continue;&#10;            if (dto.getHeureDebut() == null || dto.getHeureFin() == null) continue;&#10;            if (!dto.getHeureFin().isAfter(dto.getHeureDebut())) continue;&#10;            grouped.computeIfAbsent(dto.getJour(), k -&gt; new ArrayList&lt;&gt;()).add(dto);&#10;        }&#10;        for (Map.Entry&lt;Jour, List&lt;AvailabilityDTO&gt;&gt; e : grouped.entrySet()) {&#10;            Jour jour = e.getKey();&#10;            List&lt;AvailabilityDTO&gt; list = e.getValue();&#10;            availabilityRepository.deleteByDoctorAndJour(doctor, jour);&#10;            List&lt;Availability&gt; toSave = new ArrayList&lt;&gt;();&#10;            for (AvailabilityDTO dto : list) {&#10;                Availability a = availabilityMapper.toEntity(dto);&#10;                a.setDoctor(doctor);&#10;                if (a.getStatut() == null) a.setStatut(StatutDispo.AVAILABLE);&#10;                a.setValide(true);&#10;                toSave.add(a);&#10;            }&#10;            availabilityRepository.saveAll(toSave);&#10;        }&#10;    }&#10;&#10;    public void setOnLeaveDays(String userEmail, Collection&lt;Jour&gt; jours) {&#10;        if (userEmail == null || userEmail.isBlank()) throw new IllegalArgumentException(&quot;email requis&quot;);&#10;        if (jours == null || jours.isEmpty()) return;&#10;        Doctor doctor = doctorRepository.findByUserEmail(userEmail);&#10;        if (doctor == null) throw new IllegalStateException(&quot;Médecin introuvable pour l'utilisateur: &quot; + userEmail);&#10;&#10;        for (Jour jour : jours) {&#10;            availabilityRepository.deleteByDoctorAndJour(doctor, jour);&#10;            Availability a = new Availability();&#10;            a.setDoctor(doctor);&#10;            a.setJour(jour);&#10;            a.setHeureDebut(null);&#10;            a.setHeureFin(null);&#10;            a.setStatut(StatutDispo.ON_LEAVE);&#10;            a.setValide(true);&#10;            availabilityRepository.save(a);&#10;        }&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.cliniquedigitale.service;&#10;&#10;import com.cliniquedigitale.DTO.AvailabilityDTO;&#10;import com.cliniquedigitale.Enums.Jour;&#10;import com.cliniquedigitale.Enums.StatutDispo;&#10;import com.cliniquedigitale.entities.Availability;&#10;import com.cliniquedigitale.entities.Doctor;&#10;import com.cliniquedigitale.mapper.AvailabilityMapper;&#10;import com.cliniquedigitale.repository.AvailabilityRepository;&#10;import com.cliniquedigitale.repository.DoctorRepository;&#10;import jakarta.enterprise.context.ApplicationScoped;&#10;import jakarta.inject.Inject;&#10;&#10;import java.time.DayOfWeek;&#10;import java.time.LocalDate;&#10;import java.time.LocalTime;&#10;import java.util.*;&#10;&#10;@ApplicationScoped&#10;public class AvailabilityService {&#10;&#10;    @Inject&#10;    private AvailabilityRepository availabilityRepository;&#10;&#10;    @Inject&#10;    private DoctorRepository doctorRepository;&#10;&#10;    @Inject&#10;    private AvailabilityMapper availabilityMapper;&#10;&#10;    @SuppressWarnings(&quot;unused&quot;)&#10;    public List&lt;Availability&gt; getAvailability(String doctorId){&#10;        List&lt;Availability&gt; availabilityList = new ArrayList&lt;&gt;();&#10;        List&lt;Availability&gt; availabilities = availabilityRepository.findByDoctor(UUID.fromString(doctorId));&#10;        for (Availability a : availabilities){&#10;            if (a.getStatut() == StatutDispo.AVAILABLE){&#10;                availabilityList.add(a);&#10;            }&#10;        }&#10;        return availabilityList;&#10;    }&#10;&#10;    public List&lt;AvailabilityDTO&gt; getAvailabilityByEmail(String userEmail) {&#10;        if (userEmail == null || userEmail.isBlank()) return Collections.emptyList();&#10;        Doctor doctor = doctorRepository.findByUserEmail(userEmail);&#10;        if (doctor == null) return Collections.emptyList();&#10;        List&lt;Availability&gt; all = availabilityRepository.findByDoctor(doctor.getId());&#10;        List&lt;Availability&gt; availables = new ArrayList&lt;&gt;();&#10;        for (Availability a : all) if (a.getStatut() == StatutDispo.AVAILABLE) availables.add(a);&#10;        return availabilityMapper.toDTOList(availables);&#10;    }&#10;&#10;    public List&lt;AvailabilityDTO&gt; getTodayAvailabilityByEmail(String userEmail) {&#10;        if (userEmail == null || userEmail.isBlank()) return Collections.emptyList();&#10;        Doctor doctor = doctorRepository.findByUserEmail(userEmail);&#10;        if (doctor == null) return Collections.emptyList();&#10;        Jour todayJour = mapToJour(LocalDate.now().getDayOfWeek());&#10;        List&lt;Availability&gt; list = availabilityRepository.findByDoctorAndJour(doctor, todayJour);&#10;        List&lt;Availability&gt; availables = new ArrayList&lt;&gt;();&#10;        for (Availability a : list) if (a.getStatut() == StatutDispo.AVAILABLE) availables.add(a);&#10;        availables.sort(Comparator.comparing(Availability::getHeureDebut, Comparator.nullsLast(Comparator.naturalOrder())));&#10;        return availabilityMapper.toDTOList(availables);&#10;    }&#10;&#10;    private Jour mapToJour(DayOfWeek dow) {&#10;        return switch (dow) {&#10;            case MONDAY -&gt; Jour.LUNDI;&#10;            case TUESDAY -&gt; Jour.MARDI;&#10;            case WEDNESDAY -&gt; Jour.MERCREDI;&#10;            case THURSDAY -&gt; Jour.JEUDI;&#10;            case FRIDAY -&gt; Jour.VENDREDI;&#10;            case SATURDAY -&gt; Jour.SAMEDI;&#10;            case SUNDAY -&gt; Jour.DIMANCHE;&#10;        };&#10;    }&#10;&#10;    @SuppressWarnings(&quot;unused&quot;)&#10;    public void saveWeekly(String userEmail, List&lt;Jour&gt; jours, List&lt;LocalTime[]&gt; slots) {&#10;        if (userEmail == null || userEmail.isBlank()) throw new IllegalArgumentException(&quot;email requis&quot;);&#10;        if (jours == null || jours.isEmpty()) return;&#10;        if (slots == null || slots.isEmpty()) return;&#10;&#10;        Doctor doctor = doctorRepository.findByUserEmail(userEmail);&#10;        if (doctor == null) throw new IllegalStateException(&quot;Médecin introuvable pour l'utilisateur: &quot; + userEmail);&#10;&#10;        for (Jour jour : jours) {&#10;            availabilityRepository.deleteByDoctorAndJour(doctor, jour);&#10;            List&lt;Availability&gt; toSave = new ArrayList&lt;&gt;();&#10;            for (LocalTime[] tr : slots) {&#10;                LocalTime start = tr[0];&#10;                LocalTime end = tr[1];&#10;                if (start == null || end == null || !end.isAfter(start)) continue;&#10;                Availability a = new Availability();&#10;                a.setDoctor(doctor);&#10;                a.setJour(jour);&#10;                a.setHeureDebut(start);&#10;                a.setHeureFin(end);&#10;                a.setStatut(StatutDispo.ON_LEAVE);&#10;                a.setValide(true);&#10;                toSave.add(a);&#10;            }&#10;            availabilityRepository.saveAll(toSave);&#10;        }&#10;    }&#10;&#10;    public void saveDaily(String userEmail, Map&lt;Jour, List&lt;LocalTime[]&gt;&gt; daySlots) {&#10;        if (userEmail == null || userEmail.isBlank()) throw new IllegalArgumentException(&quot;email requis&quot;);&#10;        if (daySlots == null || daySlots.isEmpty()) return;&#10;&#10;        Doctor doctor = doctorRepository.findByUserEmail(userEmail);&#10;        if (doctor == null) throw new IllegalStateException(&quot;Médecin introuvable pour l'utilisateur: &quot; + userEmail);&#10;&#10;        for (Map.Entry&lt;Jour, List&lt;LocalTime[]&gt;&gt; entry : daySlots.entrySet()) {&#10;            Jour jour = entry.getKey();&#10;            List&lt;LocalTime[]&gt; slots = entry.getValue();&#10;            availabilityRepository.deleteByDoctorAndJour(doctor, jour);&#10;            List&lt;Availability&gt; toSave = new ArrayList&lt;&gt;();&#10;            for (LocalTime[] tr : slots) {&#10;                LocalTime start = tr[0];&#10;                LocalTime end = tr[1];&#10;                if (start == null || end == null || !end.isAfter(start)) continue;&#10;                Availability a = new Availability();&#10;                a.setDoctor(doctor);&#10;                a.setJour(jour);&#10;                a.setHeureDebut(start);&#10;                a.setHeureFin(end);&#10;                a.setStatut(StatutDispo.AVAILABLE);&#10;                a.setValide(true);&#10;                toSave.add(a);&#10;            }&#10;            availabilityRepository.saveAll(toSave);&#10;        }&#10;    }&#10;&#10;    public void saveDaily(String userEmail, List&lt;AvailabilityDTO&gt; availabilityDTOs) {&#10;        if (userEmail == null || userEmail.isBlank()) throw new IllegalArgumentException(&quot;email requis&quot;);&#10;        if (availabilityDTOs == null || availabilityDTOs.isEmpty()) return;&#10;        Doctor doctor = doctorRepository.findByUserEmail(userEmail);&#10;        if (doctor == null) throw new IllegalStateException(&quot;Médecin introuvable pour l'utilisateur: &quot; + userEmail);&#10;&#10;        Map&lt;Jour, List&lt;AvailabilityDTO&gt;&gt; grouped = new EnumMap&lt;&gt;(Jour.class);&#10;        for (AvailabilityDTO dto : availabilityDTOs) {&#10;            if (dto == null || dto.getJour() == null) continue;&#10;            if (dto.getHeureDebut() == null || dto.getHeureFin() == null) continue;&#10;            if (!dto.getHeureFin().isAfter(dto.getHeureDebut())) continue;&#10;            grouped.computeIfAbsent(dto.getJour(), k -&gt; new ArrayList&lt;&gt;()).add(dto);&#10;        }&#10;        for (Map.Entry&lt;Jour, List&lt;AvailabilityDTO&gt;&gt; e : grouped.entrySet()) {&#10;            Jour jour = e.getKey();&#10;            List&lt;AvailabilityDTO&gt; list = e.getValue();&#10;            availabilityRepository.deleteByDoctorAndJour(doctor, jour);&#10;            List&lt;Availability&gt; toSave = new ArrayList&lt;&gt;();&#10;            for (AvailabilityDTO dto : list) {&#10;                Availability a = availabilityMapper.toEntity(dto);&#10;                a.setDoctor(doctor);&#10;                if (a.getStatut() == null) a.setStatut(StatutDispo.AVAILABLE);&#10;                a.setValide(true);&#10;                toSave.add(a);&#10;            }&#10;            availabilityRepository.saveAll(toSave);&#10;        }&#10;    }&#10;&#10;    public void setOnLeaveDays(String userEmail, Collection&lt;Jour&gt; jours) {&#10;        if (userEmail == null || userEmail.isBlank()) throw new IllegalArgumentException(&quot;email requis&quot;);&#10;        if (jours == null || jours.isEmpty()) return;&#10;        Doctor doctor = doctorRepository.findByUserEmail(userEmail);&#10;        if (doctor == null) throw new IllegalStateException(&quot;Médecin introuvable pour l'utilisateur: &quot; + userEmail);&#10;&#10;        for (Jour jour : jours) {&#10;            availabilityRepository.deleteByDoctorAndJour(doctor, jour);&#10;            Availability a = new Availability();&#10;            a.setDoctor(doctor);&#10;            a.setJour(jour);&#10;            a.setHeureDebut(null);&#10;            a.setHeureFin(null);&#10;            a.setStatut(StatutDispo.ON_LEAVE);&#10;            a.setValide(true);&#10;            availabilityRepository.save(a);&#10;        }&#10;    }&#10;&#10;    public List&lt;AvailabilityDTO&gt; getAvailabilityByDoctorId(UUID doctorId) {&#10;        if (doctorId == null) return Collections.emptyList();&#10;        List&lt;Availability&gt; all = availabilityRepository.findByDoctor(doctorId);&#10;        List&lt;Availability&gt; availables = new ArrayList&lt;&gt;();&#10;        for (Availability a : all) if (a.getStatut() == StatutDispo.AVAILABLE) availables.add(a);&#10;        availables.sort(Comparator&#10;                .comparing(Availability::getJour)&#10;                .thenComparing(Availability::getHeureDebut, Comparator.nullsLast(Comparator.naturalOrder())));&#10;        return availabilityMapper.toDTOList(availables);&#10;    }&#10;&#10;    public List&lt;AvailabilityDTO&gt; getAvailabilityByDoctorId(String doctorIdStr) {&#10;        if (doctorIdStr == null || doctorIdStr.isBlank()) return Collections.emptyList();&#10;        try {&#10;            return getAvailabilityByDoctorId(UUID.fromString(doctorIdStr));&#10;        } catch (IllegalArgumentException ex) {&#10;            return Collections.emptyList();&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/com/cliniquedigitale/service/DoctorSevice.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/cliniquedigitale/service/DoctorSevice.java" />
              <option name="originalContent" value="package com.cliniquedigitale.service;&#10;&#10;import com.cliniquedigitale.DTO.DoctorDTO;&#10;import com.cliniquedigitale.DTO.Request.RequestPatientDTO;&#10;import com.cliniquedigitale.DTO.Request.RequestUserDTO;&#10;import com.cliniquedigitale.DTO.Response.ResponseUserDTO;&#10;import com.cliniquedigitale.entities.Doctor;&#10;import com.cliniquedigitale.entities.Specialty;&#10;import com.cliniquedigitale.entities.User;&#10;import com.cliniquedigitale.mapper.DoctorMapper;&#10;import com.cliniquedigitale.mapper.UserMapper;&#10;import com.cliniquedigitale.repository.DoctorRepository;&#10;import com.cliniquedigitale.repository.SpecialtyRepository;&#10;import com.cliniquedigitale.repository.UserRepository;&#10;import jakarta.enterprise.context.ApplicationScoped;&#10;import jakarta.inject.Inject;&#10;&#10;import java.util.List;&#10;import java.util.UUID;&#10;&#10;@ApplicationScoped&#10;public class DoctorSevice {&#10;&#10;    @Inject&#10;    private UserRepository userRepository;&#10;&#10;    @Inject&#10;    private DoctorRepository doctorRepository;&#10;    @Inject&#10;    private UserMapper userMapper;&#10;    @Inject&#10;    private DoctorMapper doctorMapper;&#10;    @Inject&#10;    private SpecialtyRepository specialtyRepository;&#10;&#10;    public ResponseUserDTO registerDoctor(RequestUserDTO requestUserDto, DoctorDTO doctorDTO) {&#10;&#10;        User existingUser = userRepository.FindByEmail(requestUserDto.getEmail());&#10;        if (existingUser != null) {&#10;            throw new IllegalArgumentException(&quot;Email déjà utilisé !&quot;);&#10;        }&#10;&#10;        Doctor existingDoctor = doctorRepository.findByMatricule(doctorDTO.getMatricule());&#10;        if (existingDoctor != null) {&#10;            throw new IllegalArgumentException(&quot;Matricule déjà utilisé !&quot;);&#10;        }&#10;        Specialty specialty = specialtyRepository.findById(doctorDTO.getSpecialtyId());&#10;&#10;        User user = userMapper.toEntity(requestUserDto);&#10;        User persistedUser = userRepository.save(user);&#10;        Doctor doctor = doctorMapper.toEntity(doctorDTO, specialty, user);&#10;        doctorRepository.save(doctor);&#10;&#10;        return UserMapper.toResponse(persistedUser);&#10;    }&#10;&#10;    public List&lt;Doctor&gt; searchDoctors(String searchTerm) {&#10;        if (searchTerm == null || searchTerm.trim().isEmpty()) {&#10;            return doctorRepository.findAll();&#10;        }&#10;        return doctorRepository.searchDoctors(searchTerm.trim());&#10;    }&#10;&#10;    public List&lt;Doctor&gt; getAllDoctors() {&#10;        return doctorRepository.findAll();&#10;    }&#10;&#10;    public List&lt;Doctor&gt; getDoctorsBySpeciality(UUID specialityId) {&#10;        return doctorRepository.findBySpeciality(specialityId);&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.cliniquedigitale.service;&#10;&#10;import com.cliniquedigitale.DTO.DoctorDTO;&#10;import com.cliniquedigitale.DTO.Request.RequestPatientDTO;&#10;import com.cliniquedigitale.DTO.Request.RequestUserDTO;&#10;import com.cliniquedigitale.DTO.Response.ResponseUserDTO;&#10;import com.cliniquedigitale.entities.Doctor;&#10;import com.cliniquedigitale.entities.Specialty;&#10;import com.cliniquedigitale.entities.User;&#10;import com.cliniquedigitale.mapper.DoctorMapper;&#10;import com.cliniquedigitale.mapper.UserMapper;&#10;import com.cliniquedigitale.repository.DoctorRepository;&#10;import com.cliniquedigitale.repository.SpecialtyRepository;&#10;import com.cliniquedigitale.repository.UserRepository;&#10;import jakarta.enterprise.context.ApplicationScoped;&#10;import jakarta.inject.Inject;&#10;&#10;import java.util.List;&#10;import java.util.UUID;&#10;&#10;@ApplicationScoped&#10;public class DoctorSevice {&#10;&#10;    @Inject&#10;    private UserRepository userRepository;&#10;&#10;    @Inject&#10;    private DoctorRepository doctorRepository;&#10;    @Inject&#10;    private UserMapper userMapper;&#10;    @Inject&#10;    private DoctorMapper doctorMapper;&#10;    @Inject&#10;    private SpecialtyRepository specialtyRepository;&#10;&#10;    public ResponseUserDTO registerDoctor(RequestUserDTO requestUserDto, DoctorDTO doctorDTO) {&#10;&#10;        User existingUser = userRepository.FindByEmail(requestUserDto.getEmail());&#10;        if (existingUser != null) {&#10;            throw new IllegalArgumentException(&quot;Email déjà utilisé !&quot;);&#10;        }&#10;&#10;        Doctor existingDoctor = doctorRepository.findByMatricule(doctorDTO.getMatricule());&#10;        if (existingDoctor != null) {&#10;            throw new IllegalArgumentException(&quot;Matricule déjà utilisé !&quot;);&#10;        }&#10;        Specialty specialty = specialtyRepository.findById(doctorDTO.getSpecialtyId());&#10;&#10;        User user = userMapper.toEntity(requestUserDto);&#10;        User persistedUser = userRepository.save(user);&#10;        Doctor doctor = doctorMapper.toEntity(doctorDTO, specialty, user);&#10;        doctorRepository.save(doctor);&#10;&#10;        return UserMapper.toResponse(persistedUser);&#10;    }&#10;&#10;    public List&lt;Doctor&gt; searchDoctors(String searchTerm) {&#10;        if (searchTerm == null || searchTerm.trim().isEmpty()) {&#10;            return doctorRepository.findAll();&#10;        }&#10;        return doctorRepository.searchDoctors(searchTerm.trim());&#10;    }&#10;&#10;    public List&lt;Doctor&gt; getAllDoctors() {&#10;        return doctorRepository.findAll();&#10;    }&#10;&#10;    public List&lt;Doctor&gt; getDoctorsBySpeciality(UUID specialityId) {&#10;        return doctorRepository.findBySpeciality(specialityId);&#10;    }&#10;&#10;    public Doctor getDoctorById(UUID id) {&#10;        if (id == null) return null;&#10;        return doctorRepository.findById(id);&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/webapp/WEB-INF/view/patient/dashboard.jsp">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/webapp/WEB-INF/view/patient/dashboard.jsp" />
              <option name="originalContent" value="&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;&#10;&lt;%@ taglib uri=&quot;jakarta.tags.core&quot; prefix=&quot;c&quot; %&gt;&#10;&lt;%@ taglib uri=&quot;jakarta.tags.fmt&quot; prefix=&quot;fmt&quot; %&gt;&#10;&lt;%@ taglib uri=&quot;jakarta.tags.functions&quot; prefix=&quot;fn&quot; %&gt;&#10;    &lt;!DOCTYPE html&gt;&#10;    &lt;html lang=&quot;fr&quot;&gt;&#10;    &lt;head&gt;&#10;        &lt;meta charset=&quot;UTF-8&quot;/&gt;&#10;        &lt;title&gt;Dashboard Patient - Clinique Digitale&lt;/title&gt;&#10;        &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,initial-scale=1&quot; /&gt;&#10;        &lt;link rel=&quot;preconnect&quot; href=&quot;https://fonts.googleapis.com&quot;&gt;&#10;        &lt;link rel=&quot;preconnect&quot; href=&quot;https://fonts.gstatic.com&quot; crossorigin&gt;&#10;        &lt;link href=&quot;https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&amp;display=swap&quot; rel=&quot;stylesheet&quot;&gt;&#10;        &lt;style&gt;&#10;            * {&#10;                margin: 0;&#10;                padding: 0;&#10;                box-sizing: border-box;&#10;            }&#10;&#10;            :root {&#10;                --primary: #6366F1;&#10;                --primary-dark: #4F46E5;&#10;                --primary-light: #818CF8;&#10;                --secondary: #EC4899;&#10;                --success: #10B981;&#10;                --warning: #F59E0B;&#10;                --error: #EF4444;&#10;                --text: #1F2937;&#10;                --text-light: #6B7280;&#10;                --white: #FFFFFF;&#10;                --bg-overlay: rgba(255, 255, 255, 0.95);&#10;            }&#10;&#10;            body {&#10;                font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;&#10;                min-height: 100vh;&#10;                background: linear-gradient(135deg, #667eea 0%, #764ba2 50%, #f093fb 100%);&#10;                background-size: 400% 400%;&#10;                animation: gradientShift 15s ease infinite;&#10;                position: relative;&#10;                overflow-x: hidden;&#10;                color: var(--text);&#10;            }&#10;&#10;            @keyframes gradientShift {&#10;                0% { background-position: 0% 50%; }&#10;                50% { background-position: 100% 50%; }&#10;                100% { background-position: 0% 50%; }&#10;            }&#10;&#10;            /* Animated background shapes */&#10;            .bg-shapes {&#10;                position: fixed;&#10;                width: 100%;&#10;                height: 100%;&#10;                overflow: hidden;&#10;                z-index: 0;&#10;                pointer-events: none;&#10;            }&#10;&#10;            .shape {&#10;                position: absolute;&#10;                border-radius: 50%;&#10;                background: rgba(255, 255, 255, 0.1);&#10;                animation: float 20s infinite ease-in-out;&#10;            }&#10;&#10;            .shape:nth-child(1) {&#10;                width: 300px;&#10;                height: 300px;&#10;                top: -150px;&#10;                left: -150px;&#10;                animation-delay: 0s;&#10;            }&#10;&#10;            .shape:nth-child(2) {&#10;                width: 200px;&#10;                height: 200px;&#10;                bottom: -100px;&#10;                right: -100px;&#10;                animation-delay: 2s;&#10;            }&#10;&#10;            .shape:nth-child(3) {&#10;                width: 150px;&#10;                height: 150px;&#10;                top: 50%;&#10;                left: 10%;&#10;                animation-delay: 4s;&#10;            }&#10;&#10;            .shape:nth-child(4) {&#10;                width: 250px;&#10;                height: 250px;&#10;                bottom: 20%;&#10;                left: -125px;&#10;                animation-delay: 6s;&#10;            }&#10;&#10;            @keyframes float {&#10;                0%, 100% { transform: translate(0, 0) rotate(0deg); }&#10;                25% { transform: translate(20px, 20px) rotate(90deg); }&#10;                50% { transform: translate(-20px, 40px) rotate(180deg); }&#10;                75% { transform: translate(40px, -20px) rotate(270deg); }&#10;            }&#10;&#10;            /* Header */&#10;            .header {&#10;                position: relative;&#10;                z-index: 10;&#10;                background: var(--bg-overlay);&#10;                backdrop-filter: blur(20px);&#10;                box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);&#10;                animation: slideDown 0.6s ease-out;&#10;            }&#10;&#10;            @keyframes slideDown {&#10;                from {&#10;                    opacity: 0;&#10;                    transform: translateY(-20px);&#10;                }&#10;                to {&#10;                    opacity: 1;&#10;                    transform: translateY(0);&#10;                }&#10;            }&#10;&#10;            .nav-container {&#10;                max-width: 1400px;&#10;                margin: 0 auto;&#10;                padding: 1.25rem 2rem;&#10;                display: flex;&#10;                justify-content: space-between;&#10;                align-items: center;&#10;            }&#10;&#10;            .logo-section {&#10;                display: flex;&#10;                align-items: center;&#10;                gap: 0.75rem;&#10;            }&#10;&#10;            .logo-icon {&#10;                width: 45px;&#10;                height: 45px;&#10;                background: linear-gradient(135deg, var(--primary), var(--primary-light));&#10;                border-radius: 12px;&#10;                display: flex;&#10;                align-items: center;&#10;                justify-content: center;&#10;                box-shadow: 0 4px 12px rgba(99, 102, 241, 0.4);&#10;            }&#10;&#10;            .logo-text {&#10;                font-size: 1.5rem;&#10;                font-weight: 800;&#10;                background: linear-gradient(135deg, var(--primary), var(--secondary));&#10;                -webkit-background-clip: text;&#10;                -webkit-text-fill-color: transparent;&#10;                background-clip: text;&#10;            }&#10;&#10;            .user-section {&#10;                display: flex;&#10;                align-items: center;&#10;                gap: 1rem;&#10;                position: relative;&#10;            }&#10;&#10;            /* User Menu Button */&#10;            .user-menu-btn {&#10;                display: flex;&#10;                align-items: center;&#10;                gap: 0.75rem;&#10;                padding: 0.5rem 1rem;&#10;                background: white;&#10;                border: 2px solid #E5E7EB;&#10;                border-radius: 12px;&#10;                cursor: pointer;&#10;                transition: all 0.3s ease;&#10;                position: relative;&#10;            }&#10;&#10;            .user-menu-btn:hover {&#10;                border-color: var(--primary);&#10;                box-shadow: 0 4px 12px rgba(99, 102, 241, 0.2);&#10;            }&#10;&#10;            .user-avatar {&#10;                width: 40px;&#10;                height: 40px;&#10;                background: linear-gradient(135deg, var(--primary), var(--primary-light));&#10;                border-radius: 50%;&#10;                display: flex;&#10;                align-items: center;&#10;                justify-content: center;&#10;                color: white;&#10;                font-weight: 700;&#10;                font-size: 1.1rem;&#10;                text-transform: uppercase;&#10;            }&#10;&#10;            .user-info {&#10;                text-align: left;&#10;            }&#10;&#10;            .user-name {&#10;                font-weight: 600;&#10;                color: var(--text);&#10;                font-size: 0.95rem;&#10;            }&#10;&#10;            .user-role {&#10;                font-size: 0.75rem;&#10;                color: var(--text-light);&#10;            }&#10;&#10;            .dropdown-icon {&#10;                width: 20px;&#10;                height: 20px;&#10;                color: var(--text-light);&#10;                transition: transform 0.3s ease;&#10;            }&#10;&#10;            .user-menu-btn.active .dropdown-icon {&#10;                transform: rotate(180deg);&#10;            }&#10;&#10;            /* Dropdown Menu */&#10;            .user-dropdown {&#10;                position: absolute;&#10;                top: calc(100% + 0.5rem);&#10;                right: 0;&#10;                background: white;&#10;                border-radius: 16px;&#10;                box-shadow: 0 10px 40px rgba(0, 0, 0, 0.15);&#10;                min-width: 250px;&#10;                opacity: 0;&#10;                visibility: hidden;&#10;                transform: translateY(-10px);&#10;                transition: all 0.3s ease;&#10;                z-index: 1000;&#10;                overflow: hidden;&#10;            }&#10;&#10;            .user-dropdown.active {&#10;                opacity: 1;&#10;                visibility: visible;&#10;                transform: translateY(0);&#10;            }&#10;&#10;            .dropdown-header {&#10;                padding: 1.25rem;&#10;                border-bottom: 2px solid #F3F4F6;&#10;                background: linear-gradient(135deg, rgba(99, 102, 241, 0.05), rgba(236, 72, 153, 0.05));&#10;            }&#10;&#10;            .dropdown-user-info {&#10;                display: flex;&#10;                align-items: center;&#10;                gap: 0.75rem;&#10;            }&#10;&#10;            .dropdown-avatar {&#10;                width: 50px;&#10;                height: 50px;&#10;                background: linear-gradient(135deg, var(--primary), var(--primary-light));&#10;                border-radius: 50%;&#10;                display: flex;&#10;                align-items: center;&#10;                justify-content: center;&#10;                color: white;&#10;                font-weight: 700;&#10;                font-size: 1.3rem;&#10;                text-transform: uppercase;&#10;            }&#10;&#10;            .dropdown-user-details .user-name {&#10;                font-size: 1rem;&#10;                margin-bottom: 0.25rem;&#10;            }&#10;&#10;            .dropdown-user-details .user-email {&#10;                font-size: 0.85rem;&#10;                color: var(--text-light);&#10;            }&#10;&#10;            .dropdown-menu {&#10;                padding: 0.5rem 0;&#10;            }&#10;&#10;            .dropdown-item {&#10;                display: flex;&#10;                align-items: center;&#10;                gap: 0.75rem;&#10;                padding: 0.875rem 1.25rem;&#10;                color: var(--text);&#10;                text-decoration: none;&#10;                transition: all 0.2s ease;&#10;                cursor: pointer;&#10;                border: none;&#10;                background: none;&#10;                width: 100%;&#10;                text-align: left;&#10;                font-size: 0.95rem;&#10;            }&#10;&#10;            .dropdown-item:hover {&#10;                background: #F9FAFB;&#10;                padding-left: 1.5rem;&#10;            }&#10;&#10;            .dropdown-item svg {&#10;                width: 20px;&#10;                height: 20px;&#10;                color: var(--text-light);&#10;            }&#10;&#10;            .dropdown-item.danger {&#10;                color: var(--error);&#10;            }&#10;&#10;            .dropdown-item.danger svg {&#10;                color: var(--error);&#10;            }&#10;&#10;            .dropdown-item.danger:hover {&#10;                background: #FEE2E2;&#10;            }&#10;&#10;            .dropdown-divider {&#10;                height: 2px;&#10;                background: #F3F4F6;&#10;                margin: 0.5rem 0;&#10;            }&#10;&#10;            /* Main Container */&#10;            .main-container {&#10;                position: relative;&#10;                z-index: 1;&#10;                max-width: 1400px;&#10;                margin: 2rem auto;&#10;                padding: 0 2rem 2rem;&#10;                animation: fadeInUp 0.8s ease-out 0.2s both;&#10;            }&#10;&#10;            @keyframes fadeInUp {&#10;                from {&#10;                    opacity: 0;&#10;                    transform: translateY(30px);&#10;                }&#10;                to {&#10;                    opacity: 1;&#10;                    transform: translateY(0);&#10;                }&#10;            }&#10;&#10;            /* Welcome Section */&#10;            .welcome-section {&#10;                background: var(--bg-overlay);&#10;                backdrop-filter: blur(20px);&#10;                border-radius: 20px;&#10;                padding: 2rem;&#10;                margin-bottom: 2rem;&#10;                box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);&#10;                display: flex;&#10;                justify-content: space-between;&#10;                align-items: center;&#10;                position: relative;&#10;                overflow: hidden;&#10;            }&#10;&#10;            .welcome-section::before {&#10;                content: '';&#10;                position: absolute;&#10;                top: 0;&#10;                left: 0;&#10;                right: 0;&#10;                height: 4px;&#10;                background: linear-gradient(90deg, var(--primary), var(--secondary), var(--primary-light));&#10;                background-size: 200% 100%;&#10;                animation: shimmer 3s infinite;&#10;            }&#10;&#10;            @keyframes shimmer {&#10;                0% { background-position: -200% 0; }&#10;                100% { background-position: 200% 0; }&#10;            }&#10;&#10;            .welcome-content h1 {&#10;                font-size: 2rem;&#10;                font-weight: 800;&#10;                background: linear-gradient(135deg, var(--primary), var(--secondary));&#10;                -webkit-background-clip: text;&#10;                -webkit-text-fill-color: transparent;&#10;                background-clip: text;&#10;                margin-bottom: 0.5rem;&#10;            }&#10;&#10;            .welcome-content p {&#10;                color: var(--text-light);&#10;                font-size: 1.1rem;&#10;            }&#10;&#10;            /* Search Doctors Section */&#10;            .search-doctors-section {&#10;                margin-bottom: 2rem;&#10;            }&#10;&#10;            .search-doctors-section .card {&#10;                background: var(--bg-overlay);&#10;                backdrop-filter: blur(20px);&#10;                border-radius: 20px;&#10;                padding: 2rem;&#10;                box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);&#10;                position: relative;&#10;                overflow: hidden;&#10;            }&#10;&#10;            .search-doctors-section .card::before {&#10;                content: '';&#10;                position: absolute;&#10;                top: 0;&#10;                left: 0;&#10;                right: 0;&#10;                height: 4px;&#10;                background: linear-gradient(90deg, var(--primary), var(--secondary), var(--primary-light));&#10;                background-size: 200% 100%;&#10;                animation: shimmer 3s infinite;&#10;            }&#10;&#10;            .search-doctors-section .card-header {&#10;                display: flex;&#10;                align-items: center;&#10;                gap: 1rem;&#10;                margin-bottom: 1.5rem;&#10;            }&#10;&#10;            .search-doctors-section .card-icon {&#10;                width: 60px;&#10;                height: 60px;&#10;                background: linear-gradient(135deg, var(--primary), var(--primary-light));&#10;                border-radius: 16px;&#10;                display: flex;&#10;                align-items: center;&#10;                justify-content: center;&#10;                box-shadow: 0 4px 12px rgba(99, 102, 241, 0.4);&#10;            }&#10;&#10;            .search-doctors-section .card-title {&#10;                font-size: 1.5rem;&#10;                font-weight: 700;&#10;                background: linear-gradient(135deg, var(--primary), var(--secondary));&#10;                -webkit-background-clip: text;&#10;                -webkit-text-fill-color: transparent;&#10;                background-clip: text;&#10;            }&#10;&#10;            /* Dashboard Grid */&#10;            .dashboard-grid {&#10;                display: grid;&#10;                grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));&#10;                gap: 2rem;&#10;                margin-bottom: 2rem;&#10;            }&#10;&#10;            /* Card Styles */&#10;            .card {&#10;                background: var(--bg-overlay);&#10;                backdrop-filter: blur(20px);&#10;                border-radius: 20px;&#10;                padding: 2rem;&#10;                box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);&#10;                transition: all 0.3s ease;&#10;                position: relative;&#10;                overflow: hidden;&#10;            }&#10;&#10;            .card::before {&#10;                content: '';&#10;                position: absolute;&#10;                top: 0;&#10;                left: 0;&#10;                right: 0;&#10;                height: 4px;&#10;                background: linear-gradient(90deg, var(--primary), var(--secondary), var(--primary-light));&#10;                background-size: 200% 100%;&#10;                animation: shimmer 3s infinite;&#10;            }&#10;&#10;            .card:hover {&#10;                transform: translateY(-5px);&#10;                box-shadow: 0 15px 40px rgba(0, 0, 0, 0.2);&#10;            }&#10;&#10;            .card-header {&#10;                display: flex;&#10;                align-items: center;&#10;                gap: 1rem;&#10;                margin-bottom: 1.5rem;&#10;            }&#10;&#10;            .card-icon {&#10;                width: 60px;&#10;                height: 60px;&#10;                background: linear-gradient(135deg, var(--primary), var(--primary-light));&#10;                border-radius: 16px;&#10;                display: flex;&#10;                align-items: center;&#10;                justify-content: center;&#10;                box-shadow: 0 4px 12px rgba(99, 102, 241, 0.4);&#10;            }&#10;&#10;            .card-title {&#10;                font-size: 1.5rem;&#10;                font-weight: 700;&#10;                background: linear-gradient(135deg, var(--primary), var(--secondary));&#10;                -webkit-background-clip: text;&#10;                -webkit-text-fill-color: transparent;&#10;                background-clip: text;&#10;            }&#10;&#10;            /* Form Styles */&#10;            .form-group {&#10;                margin-bottom: 1.5rem;&#10;            }&#10;&#10;            .form-label {&#10;                display: block;&#10;                font-weight: 600;&#10;                color: var(--text);&#10;                margin-bottom: 0.5rem;&#10;                font-size: 0.95rem;&#10;            }&#10;&#10;            .form-input, .form-select {&#10;                width: 100%;&#10;                padding: 0.875rem 1rem;&#10;                border: 2px solid #E5E7EB;&#10;                border-radius: 12px;&#10;                font-size: 1rem;&#10;                transition: all 0.3s ease;&#10;                background: white;&#10;                color: var(--text);&#10;                font-family: inherit;&#10;            }&#10;&#10;            .form-input:focus, .form-select:focus {&#10;                outline: none;&#10;                border-color: var(--primary);&#10;                box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);&#10;            }&#10;&#10;            /* Appointments List */&#10;            .appointments-list {&#10;                max-height: 600px;&#10;                overflow-y: auto;&#10;            }&#10;&#10;            .appointment-item {&#10;                background: white;&#10;                border-radius: 16px;&#10;                padding: 1.5rem;&#10;                margin-bottom: 1rem;&#10;                border: 2px solid #F3F4F6;&#10;                transition: all 0.3s ease;&#10;                position: relative;&#10;            }&#10;&#10;            .appointment-item:hover {&#10;                border-color: var(--primary-light);&#10;                transform: translateX(5px);&#10;                box-shadow: 0 4px 12px rgba(99, 102, 241, 0.15);&#10;            }&#10;&#10;            .appointment-header {&#10;                display: flex;&#10;                justify-content: space-between;&#10;                align-items: start;&#10;                margin-bottom: 1rem;&#10;            }&#10;&#10;            .appointment-date {&#10;                display: flex;&#10;                align-items: center;&#10;                gap: 0.5rem;&#10;                font-weight: 600;&#10;                color: var(--text);&#10;                font-size: 1.1rem;&#10;            }&#10;&#10;            .appointment-status {&#10;                padding: 0.4rem 0.9rem;&#10;                border-radius: 20px;&#10;                font-size: 0.85rem;&#10;                font-weight: 600;&#10;                text-transform: uppercase;&#10;            }&#10;&#10;            .status-planned {&#10;                background: #DBEAFE;&#10;                color: #1E40AF;&#10;            }&#10;&#10;            .status-confirmed {&#10;                background: #D1FAE5;&#10;                color: #065F46;&#10;            }&#10;&#10;            .status-cancelled {&#10;                background: #FEE2E2;&#10;                color: #991B1B;&#10;            }&#10;&#10;            .appointment-info {&#10;                display: grid;&#10;                grid-template-columns: repeat(2, 1fr);&#10;                gap: 0.75rem;&#10;                margin-bottom: 1rem;&#10;            }&#10;&#10;            .info-item {&#10;                display: flex;&#10;                align-items: center;&#10;                gap: 0.5rem;&#10;                color: var(--text-light);&#10;                font-size: 0.95rem;&#10;            }&#10;&#10;            .info-icon {&#10;                width: 20px;&#10;                height: 20px;&#10;                color: var(--primary);&#10;            }&#10;&#10;            .appointment-actions {&#10;                display: flex;&#10;                gap: 0.75rem;&#10;                justify-content: flex-end;&#10;            }&#10;&#10;            .btn {&#10;                padding: 0.75rem 1.5rem;&#10;                border-radius: 12px;&#10;                font-size: 0.95rem;&#10;                font-weight: 600;&#10;                cursor: pointer;&#10;                transition: all 0.3s ease;&#10;                border: none;&#10;                text-decoration: none;&#10;                display: inline-flex;&#10;                align-items: center;&#10;                gap: 0.5rem;&#10;                position: relative;&#10;                overflow: hidden;&#10;            }&#10;&#10;            .btn::before {&#10;                content: '';&#10;                position: absolute;&#10;                top: 50%;&#10;                left: 50%;&#10;                width: 0;&#10;                height: 0;&#10;                border-radius: 50%;&#10;                background: rgba(255, 255, 255, 0.3);&#10;                transform: translate(-50%, -50%);&#10;                transition: width 0.6s, height 0.6s;&#10;            }&#10;&#10;            .btn:hover::before {&#10;                width: 300px;&#10;                height: 300px;&#10;            }&#10;&#10;            .btn-primary {&#10;                background: linear-gradient(135deg, var(--primary), var(--primary-light));&#10;                color: white;&#10;                box-shadow: 0 4px 12px rgba(99, 102, 241, 0.4);&#10;            }&#10;&#10;            .btn-primary:hover {&#10;                transform: translateY(-2px);&#10;                box-shadow: 0 6px 20px rgba(99, 102, 241, 0.5);&#10;            }&#10;&#10;            .btn-danger {&#10;                background: linear-gradient(135deg, var(--error), #F87171);&#10;                color: white;&#10;                box-shadow: 0 4px 12px rgba(239, 68, 68, 0.4);&#10;            }&#10;&#10;            .btn-danger:hover {&#10;                transform: translateY(-2px);&#10;                box-shadow: 0 6px 20px rgba(239, 68, 68, 0.5);&#10;            }&#10;&#10;            .btn-success {&#10;                background: linear-gradient(135deg, var(--success), #34D399);&#10;                color: white;&#10;                box-shadow: 0 4px 12px rgba(16, 185, 129, 0.4);&#10;            }&#10;&#10;            .btn-outline {&#10;                background: white;&#10;                color: var(--text);&#10;                border: 2px solid #E5E7EB;&#10;            }&#10;&#10;            .btn-outline:hover {&#10;                background: #F9FAFB;&#10;                border-color: var(--primary);&#10;                color: var(--primary);&#10;            }&#10;&#10;            .btn-small {&#10;                padding: 0.5rem 1rem;&#10;                font-size: 0.85rem;&#10;            }&#10;&#10;            .btn-large {&#10;                padding: 1rem 2rem;&#10;                font-size: 1.1rem;&#10;            }&#10;&#10;            /* Empty State */&#10;            .empty-state {&#10;                text-align: center;&#10;                padding: 3rem 1rem;&#10;            }&#10;&#10;            .empty-icon {&#10;                width: 80px;&#10;                height: 80px;&#10;                margin: 0 auto 1.5rem;&#10;                opacity: 0.5;&#10;            }&#10;&#10;            .empty-text {&#10;                color: var(--text-light);&#10;                font-size: 1.1rem;&#10;            }&#10;&#10;            /* Modal Styles */&#10;            .modal {&#10;                display: none;&#10;                position: fixed;&#10;                z-index: 1000;&#10;                left: 0;&#10;                top: 0;&#10;                width: 100%;&#10;                height: 100%;&#10;                background: rgba(0, 0, 0, 0.7);&#10;                backdrop-filter: blur(5px);&#10;                animation: fadeIn 0.3s ease-out;&#10;            }&#10;&#10;            @keyframes fadeIn {&#10;                from { opacity: 0; }&#10;                to { opacity: 1; }&#10;            }&#10;&#10;            .modal.active {&#10;                display: flex;&#10;                align-items: center;&#10;                justify-content: center;&#10;            }&#10;&#10;            .modal-content {&#10;                background: white;&#10;                border-radius: 24px;&#10;                padding: 2rem;&#10;                max-width: 500px;&#10;                width: 90%;&#10;                max-height: 90vh;&#10;                overflow-y: auto;&#10;                animation: slideUp 0.3s ease-out;&#10;                box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);&#10;            }&#10;&#10;            @keyframes slideUp {&#10;                from {&#10;                    opacity: 0;&#10;                    transform: translateY(30px);&#10;                }&#10;                to {&#10;                    opacity: 1;&#10;                    transform: translateY(0);&#10;                }&#10;            }&#10;&#10;            .modal-header {&#10;                display: flex;&#10;                justify-content: space-between;&#10;                align-items: center;&#10;                margin-bottom: 1.5rem;&#10;            }&#10;&#10;            .modal-title {&#10;                font-size: 1.5rem;&#10;                font-weight: 700;&#10;                background: linear-gradient(135deg, var(--primary), var(--secondary));&#10;                -webkit-background-clip: text;&#10;                -webkit-text-fill-color: transparent;&#10;                background-clip: text;&#10;            }&#10;&#10;            .modal-close {&#10;                width: 36px;&#10;                height: 36px;&#10;                border: none;&#10;                background: #F3F4F6;&#10;                border-radius: 50%;&#10;                cursor: pointer;&#10;                display: flex;&#10;                align-items: center;&#10;                justify-content: center;&#10;                transition: all 0.3s ease;&#10;            }&#10;&#10;            .modal-close:hover {&#10;                background: #E5E7EB;&#10;                transform: rotate(90deg);&#10;            }&#10;&#10;            /* Alert Messages */&#10;            .alert {&#10;                padding: 1rem 1.25rem;&#10;                border-radius: 12px;&#10;                margin-bottom: 1.5rem;&#10;                display: flex;&#10;                align-items: center;&#10;                gap: 0.75rem;&#10;                animation: slideDown 0.3s ease-out;&#10;            }&#10;&#10;            .alert-success {&#10;                background: #D1FAE5;&#10;                color: #065F46;&#10;                border: 2px solid #10B981;&#10;            }&#10;&#10;            .alert-error {&#10;                background: #FEE2E2;&#10;                color: #991B1B;&#10;                border: 2px solid #EF4444;&#10;            }&#10;&#10;            .alert-warning {&#10;                background: #FEF3C7;&#10;                color: #92400E;&#10;                border: 2px solid #F59E0B;&#10;            }&#10;&#10;            /* Scrollbar */&#10;            ::-webkit-scrollbar {&#10;                width: 8px;&#10;            }&#10;&#10;            ::-webkit-scrollbar-track {&#10;                background: #F3F4F6;&#10;                border-radius: 10px;&#10;            }&#10;&#10;            ::-webkit-scrollbar-thumb {&#10;                background: var(--primary-light);&#10;                border-radius: 10px;&#10;            }&#10;&#10;            ::-webkit-scrollbar-thumb:hover {&#10;                background: var(--primary);&#10;            }&#10;&#10;            /* Responsive */&#10;            @media (max-width: 768px) {&#10;                .nav-container {&#10;                    flex-direction: column;&#10;                    gap: 1rem;&#10;                }&#10;&#10;                .welcome-section {&#10;                    flex-direction: column;&#10;                    text-align: center;&#10;                    gap: 1rem;&#10;                }&#10;&#10;                .dashboard-grid {&#10;                    grid-template-columns: 1fr;&#10;                }&#10;&#10;                .appointment-info {&#10;                    grid-template-columns: 1fr;&#10;                }&#10;&#10;                .welcome-content h1 {&#10;                    font-size: 1.5rem;&#10;                }&#10;            }&#10;        &lt;/style&gt;&#10;    &lt;/head&gt;&#10;    &lt;body&gt;&#10;        &lt;!-- Background Shapes --&gt;&#10;            &lt;div class=&quot;bg-shapes&quot;&gt;&#10;            &lt;div class=&quot;shape&quot;&gt;&lt;/div&gt;&#10;            &lt;div class=&quot;shape&quot;&gt;&lt;/div&gt;&#10;            &lt;div class=&quot;shape&quot;&gt;&lt;/div&gt;&#10;            &lt;div class=&quot;shape&quot;&gt;&lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;!-- Header --&gt;&#10;        &lt;header class=&quot;header&quot;&gt;&#10;            &lt;div class=&quot;nav-container&quot;&gt;&#10;                &lt;div class=&quot;logo-section&quot;&gt;&#10;                    &lt;div class=&quot;logo-icon&quot;&gt;&#10;                        &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; fill=&quot;none&quot; viewBox=&quot;0 0 24 24&quot; stroke=&quot;currentColor&quot;&gt;&#10;                            &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z&quot; /&gt;&#10;                        &lt;/svg&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;span class=&quot;logo-text&quot;&gt;Clinique Digitale&lt;/span&gt;&#10;                &lt;/div&gt;&#10;                &lt;div class=&quot;user-section&quot;&gt;&#10;                    &lt;div class=&quot;user-menu-btn&quot; onclick=&quot;toggleUserMenu()&quot;&gt;&#10;                        &lt;div class=&quot;user-avatar&quot;&gt;&#10;                            &lt;c:choose&gt;&#10;                                &lt;c:when test=&quot;${not empty sessionScope.user.name}&quot;&gt;&#10;                                    ${fn:toUpperCase(fn:substring(sessionScope.user.name, 0, 1))}&#10;                                &lt;/c:when&gt;&#10;                                &lt;c:otherwise&gt;?&lt;/c:otherwise&gt;&#10;                            &lt;/c:choose&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div class=&quot;user-info&quot;&gt;&#10;                            &lt;div class=&quot;user-name&quot;&gt;${sessionScope.user.name}&lt;/div&gt;&#10;                            &lt;div class=&quot;user-role&quot;&gt;Patient&lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;svg class=&quot;dropdown-icon&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; fill=&quot;none&quot; viewBox=&quot;0 0 24 24&quot; stroke=&quot;currentColor&quot;&gt;&#10;                            &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M19 9l-7 7-7-7&quot; /&gt;&#10;                        &lt;/svg&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;!-- Dropdown Menu --&gt;&#10;                    &lt;div class=&quot;user-dropdown&quot; id=&quot;userDropdown&quot;&gt;&#10;                        &lt;div class=&quot;dropdown-header&quot;&gt;&#10;                            &lt;div class=&quot;dropdown-user-info&quot;&gt;&#10;                                &lt;div class=&quot;dropdown-avatar&quot;&gt;&#10;                                    &lt;c:choose&gt;&#10;                                        &lt;c:when test=&quot;${not empty sessionScope.user.name}&quot;&gt;&#10;                                            ${fn:toUpperCase(fn:substring(sessionScope.user.name, 0, 1))}&#10;                                        &lt;/c:when&gt;&#10;                                        &lt;c:otherwise&gt;?&lt;/c:otherwise&gt;&#10;                                    &lt;/c:choose&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;div class=&quot;dropdown-user-details&quot;&gt;&#10;                                    &lt;div class=&quot;user-name&quot;&gt;${sessionScope.user.name}&lt;/div&gt;&#10;                                    &lt;div class=&quot;user-email&quot;&gt;${sessionScope.user.email}&lt;/div&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;div class=&quot;dropdown-menu&quot;&gt;&#10;                            &lt;a href=&quot;${pageContext.request.contextPath}/patient/profile&quot; class=&quot;dropdown-item&quot;&gt;&#10;                                &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; fill=&quot;none&quot; viewBox=&quot;0 0 24 24&quot; stroke=&quot;currentColor&quot;&gt;&#10;                                    &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z&quot; /&gt;&#10;                                &lt;/svg&gt;&#10;                                Mon Profil&#10;                            &lt;/a&gt;&#10;&#10;                            &lt;a href=&quot;${pageContext.request.contextPath}/patient/appointments&quot; class=&quot;dropdown-item&quot;&gt;&#10;                                &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; fill=&quot;none&quot; viewBox=&quot;0 0 24 24&quot; stroke=&quot;currentColor&quot;&gt;&#10;                                    &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h4&quot;&gt;&lt;/path&gt;&#10;                                &lt;/svg&gt;&#10;                                Mes Rendez-vous&#10;                            &lt;/a&gt;&#10;&#10;                            &lt;a href=&quot;${pageContext.request.contextPath}/patient/history&quot; class=&quot;dropdown-item&quot;&gt;&#10;                                &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; fill=&quot;none&quot; viewBox=&quot;0 0 24 24&quot; stroke=&quot;currentColor&quot;&gt;&#10;                                    &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z&quot; /&gt;&#10;                                &lt;/svg&gt;&#10;                                Historique&#10;                            &lt;/a&gt;&#10;&#10;                            &lt;a href=&quot;${pageContext.request.contextPath}/patient/settings&quot; class=&quot;dropdown-item&quot;&gt;&#10;                                &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; fill=&quot;none&quot; viewBox=&quot;0 0 24 24&quot; stroke=&quot;currentColor&quot;&gt;&#10;                                    &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z&quot; /&gt;&#10;                                    &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M15 12a3 3 0 11-6 0 3 3 0 016 0z&quot; /&gt;&#10;                                &lt;/svg&gt;&#10;                                Paramètres&#10;                            &lt;/a&gt;&#10;&#10;                            &lt;div class=&quot;dropdown-divider&quot;&gt;&lt;/div&gt;&#10;&#10;                            &lt;a href=&quot;${pageContext.request.contextPath}/auth/logout&quot; class=&quot;dropdown-item danger&quot;&gt;&#10;                                &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; fill=&quot;none&quot; viewBox=&quot;0 0 24 24&quot; stroke=&quot;currentColor&quot;&gt;&#10;                                    &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1&quot; /&gt;&#10;                                &lt;/svg&gt;&#10;                                Déconnexion&#10;                            &lt;/a&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/header&gt;&#10;&#10;        &lt;!-- Main Container --&gt;&#10;        &lt;div class=&quot;main-container&quot;&gt;&#10;            &lt;!-- Welcome Section --&gt;&#10;            &lt;div class=&quot;welcome-section&quot;&gt;&#10;                &lt;div class=&quot;welcome-content&quot;&gt;&#10;                    &lt;h1&gt; Bienvenue, ${sessionScope.user.name}!&lt;/h1&gt;&#10;                    &lt;p&gt;Gérez vos rendez-vous médicaux en toute simplicité&lt;/p&gt;&#10;                &lt;/div&gt;&#10;                &lt;button class=&quot;btn btn-primary btn-large&quot; onclick=&quot;openBookingModal()&quot;&gt;&#10;                    &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;24&quot; height=&quot;24&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot;&gt;&#10;                        &lt;rect x=&quot;3&quot; y=&quot;4&quot; width=&quot;18&quot; height=&quot;18&quot; rx=&quot;2&quot; ry=&quot;2&quot;&gt;&lt;/rect&gt;&#10;                        &lt;line x1=&quot;16&quot; y1=&quot;2&quot; x2=&quot;16&quot; y2=&quot;6&quot;&gt;&lt;/line&gt;&#10;                        &lt;line x1=&quot;8&quot; y1=&quot;2&quot; x2=&quot;8&quot; y2=&quot;6&quot;&gt;&lt;/line&gt;&#10;                        &lt;line x1=&quot;3&quot; y1=&quot;10&quot; x2=&quot;21&quot; y2=&quot;10&quot;&gt;&lt;/line&gt;&#10;                        &lt;line x1=&quot;12&quot; y1=&quot;14&quot; x2=&quot;12&quot; y2=&quot;18&quot;&gt;&lt;/line&gt;&#10;                        &lt;line x1=&quot;10&quot; y1=&quot;16&quot; x2=&quot;14&quot; y2=&quot;16&quot;&gt;&lt;/line&gt;&#10;                    &lt;/svg&gt;&#10;                    Nouveau Rendez-vous&#10;                &lt;/button&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;!-- Search Doctors Section --&gt;&#10;            &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 2rem;&quot;&gt;&#10;                &lt;div class=&quot;card-header&quot;&gt;&#10;                    &lt;div class=&quot;card-icon&quot;&gt;&#10;                        &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;30&quot; height=&quot;30&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;white&quot; stroke-width=&quot;2&quot;&gt;&#10;                            &lt;circle cx=&quot;11&quot; cy=&quot;11&quot; r=&quot;8&quot;&gt;&lt;/circle&gt;&#10;                            &lt;path d=&quot;m21 21-4.35-4.35&quot;&gt;&lt;/path&gt;&#10;                        &lt;/svg&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;h2 class=&quot;card-title&quot;&gt;Rechercher un Médecin&lt;/h2&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;form action=&quot;${pageContext.request.contextPath}/patient&quot; method=&quot;get&quot; style=&quot;margin-bottom: 1.5rem;&quot;&gt;&#10;                    &lt;div style=&quot;display: flex; gap: 1rem;&quot;&gt;&#10;                        &lt;input type=&quot;text&quot;&#10;                               name=&quot;search&quot;&#10;                               class=&quot;form-input&quot;&#10;                               placeholder=&quot;Rechercher par nom de médecin ou spécialité...&quot;&#10;                               value=&quot;${searchTerm}&quot;&#10;                               style=&quot;flex: 1;&quot;&gt;&#10;                        &lt;button type=&quot;submit&quot; class=&quot;btn btn-primary&quot;&gt;&#10;                            &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;20&quot; height=&quot;20&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot;&gt;&#10;                                &lt;circle cx=&quot;11&quot; cy=&quot;11&quot; r=&quot;8&quot;&gt;&lt;/circle&gt;&#10;                                &lt;path d=&quot;m21 21-4.35-4.35&quot;&gt;&lt;/path&gt;&#10;                            &lt;/svg&gt;&#10;                            Rechercher&#10;                        &lt;/button&gt;&#10;                        &lt;c:if test=&quot;${not empty searchTerm}&quot;&gt;&#10;                            &lt;a href=&quot;${pageContext.request.contextPath}/patient&quot; class=&quot;btn btn-outline&quot;&gt;&#10;                                &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;20&quot; height=&quot;20&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot;&gt;&#10;                                    &lt;line x1=&quot;18&quot; y1=&quot;6&quot; x2=&quot;6&quot; y2=&quot;18&quot;&gt;&lt;/line&gt;&#10;                                    &lt;line x1=&quot;6&quot; y1=&quot;6&quot; x2=&quot;18&quot; y2=&quot;18&quot;&gt;&lt;/line&gt;&#10;                                &lt;/svg&gt;&#10;                                Réinitialiser&#10;                            &lt;/a&gt;&#10;                        &lt;/c:if&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/form&gt;&#10;&#10;                &lt;c:if test=&quot;${not empty searchTerm}&quot;&gt;&#10;                    &lt;div class=&quot;alert alert-success&quot; style=&quot;margin-bottom: 1rem;&quot;&gt;&#10;                        &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;24&quot; height=&quot;24&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot;&gt;&#10;                            &lt;path d=&quot;M22 11.08V12a10 10 0 1 1-5.93-9.14&quot;&gt;&lt;/path&gt;&#10;                            &lt;polyline points=&quot;22 4 12 14.01 9 11.01&quot;&gt;&lt;/polyline&gt;&#10;                        &lt;/svg&gt;&#10;                        &lt;span&gt;${doctors.size()} résultat(s) trouvé(s) pour &quot;${searchTerm}&quot;&lt;/span&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/c:if&gt;&#10;&#10;                &lt;!-- Search Doctors Section list --&gt;&#10;                &lt;div class=&quot;appointments-list&quot; style=&quot;max-height: 500px;&quot;&gt;&#10;                    &lt;c:choose&gt;&#10;                        &lt;c:when test=&quot;${empty doctors}&quot;&gt;&#10;                            &lt;div class=&quot;empty-state&quot;&gt;&#10;                                &lt;svg class=&quot;empty-icon&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; fill=&quot;none&quot; viewBox=&quot;0 0 24 24&quot; stroke=&quot;currentColor&quot;&gt;&#10;                                    &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z&quot; /&gt;&#10;                                &lt;/svg&gt;&#10;                                &lt;p class=&quot;empty-text&quot;&gt;&#10;                                    &lt;c:choose&gt;&#10;                                        &lt;c:when test=&quot;${not empty searchTerm}&quot;&gt;&#10;                                            Aucun médecin trouvé pour &quot;${searchTerm}&quot;.&lt;br&gt;Essayez avec un autre terme de recherche.&#10;                                        &lt;/c:when&gt;&#10;                                        &lt;c:otherwise&gt;&#10;                                            Aucun médecin disponible pour le moment.&#10;                                        &lt;/c:otherwise&gt;&#10;                                    &lt;/c:choose&gt;&#10;                                &lt;/p&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/c:when&gt;&#10;                        &lt;c:otherwise&gt;&#10;                            &lt;c:forEach var=&quot;doctor&quot; items=&quot;${doctors}&quot;&gt;&#10;                                &lt;div class=&quot;appointment-item&quot;&gt;&#10;                                    &lt;div style=&quot;display: flex; align-items: center; gap: 1.5rem; margin-bottom: 1rem;&quot;&gt;&#10;                                        &lt;div class=&quot;user-avatar&quot; style=&quot;width: 60px; height: 60px; font-size: 1.5rem;&quot;&gt;&#10;                                            &lt;c:choose&gt;&#10;                                                &lt;c:when test=&quot;${not empty doctor.user.name}&quot;&gt;&#10;                                                    ${fn:toUpperCase(fn:substring(doctor.user.name, 0, 1))}&#10;                                                &lt;/c:when&gt;&#10;                                                &lt;c:otherwise&gt;?&lt;/c:otherwise&gt;&#10;                                            &lt;/c:choose&gt;&#10;                                        &lt;/div&gt;&#10;                                        &lt;div style=&quot;flex: 1;&quot;&gt;&#10;                                            &lt;h3 style=&quot;font-size: 1.25rem; font-weight: 700; color: var(--text); margin-bottom: 0.25rem;&quot;&gt;&#10;                                                Dr. ${doctor.user.name}&#10;                                            &lt;/h3&gt;&#10;                                            &lt;p style=&quot;color: var(--text-light); font-size: 0.95rem;&quot;&gt;&#10;                                                ${doctor.titre != null ? doctor.titre : 'Médecin'}&#10;                                            &lt;/p&gt;&#10;                                        &lt;/div&gt;&#10;                                    &lt;/div&gt;&#10;&#10;                                    &lt;div class=&quot;appointment-info&quot; style=&quot;margin-bottom: 1rem;&quot;&gt;&#10;                                        &lt;div class=&quot;info-item&quot;&gt;&#10;                                            &lt;!-- spécialité --&gt;&#10;                                            &lt;svg class=&quot;info-icon&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; fill=&quot;none&quot; viewBox=&quot;0 0 24 24&quot; stroke=&quot;currentColor&quot;&gt;&#10;                                                &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M19.428 15.428a2 2 0 00-1.022-.547l-2.387-.477a6 6 0 00-3.86.517l-.318.158a6 6 0 01-3.86.517L6.05 15.21a2 2 0 00-1.806.547M8 4h8l-1 1v5.172a2 2 0 00.586 1.414l5 5c1.26 1.26.367 3.414-1.415 3.414H4.828c-1.782 0-2.674-2.154-1.414-3.414l5-5A2 2 0 009 10.172V5L8 4z&quot; /&gt;&#10;                                            &lt;/svg&gt;&#10;                                            &lt;span&gt;&lt;strong&gt;${doctor.specialite.name}&lt;/strong&gt;&lt;/span&gt;&#10;                                        &lt;/div&gt;&#10;                                        &lt;div class=&quot;info-item&quot;&gt;&#10;                                            &lt;!-- matricule --&gt;&#10;                                            &lt;svg class=&quot;info-icon&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; fill=&quot;none&quot; viewBox=&quot;0 0 24 24&quot; stroke=&quot;currentColor&quot;&gt;&#10;                                                &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z&quot; /&gt;&#10;                                            &lt;/svg&gt;&#10;                                            &lt;span&gt;Matricule: ${doctor.matricule}&lt;/span&gt;&#10;                                        &lt;/div&gt;&#10;                                        &lt;div class=&quot;info-item&quot;&gt;&#10;                                            &lt;!-- email --&gt;&#10;                                            &lt;svg class=&quot;info-icon&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; fill=&quot;none&quot; viewBox=&quot;0 0 24 24&quot; stroke=&quot;currentColor&quot;&gt;&#10;                                                &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h4&quot;&gt;&lt;/path&gt;&#10;                                            &lt;/svg&gt;&#10;                                            &lt;span&gt;${doctor.user.email}&lt;/span&gt;&#10;                                        &lt;/div&gt;&#10;                                        &lt;!-- Suppression du téléphone: propriété inexistante sur User --&gt;&#10;                                    &lt;/div&gt;&#10;&#10;                                    &lt;div class=&quot;appointment-actions&quot;&gt;&#10;                                        &lt;button class=&quot;btn btn-primary&quot; onclick=&quot;openBookingModalWithDoctor('${doctor.id}', 'Dr. ${doctor.user.name}', '${doctor.specialite.id}')&quot;&gt;&#10;                                            &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;20&quot; height=&quot;20&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot;&gt;&#10;                                                &lt;rect x=&quot;3&quot; y=&quot;4&quot; width=&quot;18&quot; height=&quot;18&quot; rx=&quot;2&quot; ry=&quot;2&quot;&gt;&lt;/rect&gt;&#10;                                                &lt;line x1=&quot;16&quot; y1=&quot;2&quot; x2=&quot;16&quot; y2=&quot;6&quot;&gt;&lt;/line&gt;&#10;                                                &lt;line x1=&quot;8&quot; y1=&quot;2&quot; x2=&quot;8&quot; y2=&quot;6&quot;&gt;&lt;/line&gt;&#10;                                                &lt;line x1=&quot;3&quot; y1=&quot;10&quot; x2=&quot;21&quot; y2=&quot;10&quot;&gt;&lt;/line&gt;&#10;                                            &lt;/svg&gt;&#10;                                            Prendre Rendez-vous&#10;                                        &lt;/button&gt;&#10;                                    &lt;/div&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/c:forEach&gt;&#10;                        &lt;/c:otherwise&gt;&#10;                    &lt;/c:choose&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;!-- Dashboard Grid --&gt;&#10;            &lt;div class=&quot;dashboard-grid&quot;&gt;&#10;                &lt;!-- Appointments List Card --&gt;&#10;                &lt;div class=&quot;card&quot; style=&quot;grid-column: 1 / -1;&quot;&gt;&#10;                    &lt;div class=&quot;card-header&quot;&gt;&#10;                        &lt;div class=&quot;card-icon&quot;&gt;&#10;                            &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;30&quot; height=&quot;30&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;white&quot; stroke-width=&quot;2&quot;&gt;&#10;                                &lt;rect x=&quot;3&quot; y=&quot;4&quot; width=&quot;18&quot; height=&quot;18&quot; rx=&quot;2&quot; ry=&quot;2&quot;&gt;&lt;/rect&gt;&#10;                                &lt;line x1=&quot;16&quot; y1=&quot;2&quot; x2=&quot;16&quot; y2=&quot;6&quot;&gt;&lt;/line&gt;&#10;                                &lt;line x1=&quot;8&quot; y1=&quot;2&quot; x2=&quot;8&quot; y2=&quot;6&quot;&gt;&lt;/line&gt;&#10;                                &lt;line x1=&quot;3&quot; y1=&quot;10&quot; x2=&quot;21&quot; y2=&quot;10&quot;&gt;&lt;/line&gt;&#10;                            &lt;/svg&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;h2 class=&quot;card-title&quot;&gt;Mes Rendez-vous&lt;/h2&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;div class=&quot;appointments-list&quot;&gt;&#10;                        &lt;c:choose&gt;&#10;                            &lt;c:when test=&quot;${empty appointments}&quot;&gt;&#10;                                &lt;div class=&quot;empty-state&quot;&gt;&#10;                                    &lt;svg class=&quot;empty-icon&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; fill=&quot;none&quot; viewBox=&quot;0 0 24 24&quot; stroke=&quot;currentColor&quot;&gt;&#10;                                        &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z&quot; /&gt;&#10;                                    &lt;/svg&gt;&#10;                                    &lt;p class=&quot;empty-text&quot;&gt;Vous n'avez aucun rendez-vous pour le moment.&lt;br&gt;Cliquez sur &quot;Nouveau Rendez-vous&quot; pour en créer un.&lt;/p&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/c:when&gt;&#10;                            &lt;c:otherwise&gt;&#10;                                &lt;c:forEach var=&quot;appointment&quot; items=&quot;${appointments}&quot;&gt;&#10;                                    &lt;div class=&quot;appointment-item&quot;&gt;&#10;                                        &lt;div class=&quot;appointment-header&quot;&gt;&#10;                                            &lt;div class=&quot;appointment-date&quot;&gt;&#10;                                                &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;24&quot; height=&quot;24&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot;&gt;&#10;                                                    &lt;rect x=&quot;3&quot; y=&quot;4&quot; width=&quot;18&quot; height=&quot;18&quot; rx=&quot;2&quot; ry=&quot;2&quot;&gt;&lt;/rect&gt;&#10;                                                    &lt;line x1=&quot;16&quot; y1=&quot;2&quot; x2=&quot;16&quot; y2=&quot;6&quot;&gt;&lt;/line&gt;&#10;                                                    &lt;line x1=&quot;8&quot; y1=&quot;2&quot; x2=&quot;8&quot; y2=&quot;6&quot;&gt;&lt;/line&gt;&#10;                                                    &lt;line x1=&quot;3&quot; y1=&quot;10&quot; x2=&quot;21&quot; y2=&quot;10&quot;&gt;&lt;/line&gt;&#10;                                                &lt;/svg&gt;&#10;                                                &lt;fmt:formatDate value=&quot;${appointment.date}&quot; pattern=&quot;dd/MM/yyyy&quot; /&gt;&#10;                                            &lt;/div&gt;&#10;                                            &lt;span class=&quot;appointment-status status-${appointment.statut.toString().toLowerCase()}&quot;&gt;&#10;                                                ${appointment.statut}&#10;                                            &lt;/span&gt;&#10;                                        &lt;/div&gt;&#10;&#10;                                        &lt;div class=&quot;appointment-info&quot;&gt;&#10;                                            &lt;div class=&quot;info-item&quot;&gt;&#10;                                                &lt;svg class=&quot;info-icon&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; fill=&quot;none&quot; viewBox=&quot;0 0 24 24&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot;&gt;&#10;                                                    &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z&quot; /&gt;&#10;                                                &lt;/svg&gt;&#10;                                                &lt;span&gt;&lt;fmt:formatDate value=&quot;${appointment.hour}&quot; pattern=&quot;HH:mm&quot; /&gt;&lt;/span&gt;&#10;                                            &lt;/div&gt;&#10;                                            &lt;div class=&quot;info-item&quot;&gt;&#10;                                                &lt;svg class=&quot;info-icon&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; fill=&quot;none&quot; viewBox=&quot;0 0 24 24&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot;&gt;&#10;                                                    &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z&quot; /&gt;&#10;                                                &lt;/svg&gt;&#10;                                                &lt;span&gt;Dr. ${appointment.doctor.user.name}&lt;/span&gt;&#10;                                            &lt;/div&gt;&#10;                                            &lt;div class=&quot;info-item&quot;&gt;&#10;                                                &lt;svg class=&quot;info-icon&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; fill=&quot;none&quot; viewBox=&quot;0 0 24 24&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot;&gt;&#10;                                                    &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M19.428 15.428a2 2 0 00-1.022-.547l-2.387-.477a6 6 0 00-3.86.517l-.318.158a6 6 0 01-3.86.517L6.05 15.21a2 2 0 00-1.806.547M8 4h8l-1 1v5.172a2 2 0 00.586 1.414l5 5c1.26 1.26.367 3.414-1.415 3.414H4.828c-1.782 0-2.674-2.154-1.414-3.414l5-5A2 2 0 009 10.172V5L8 4z&quot; /&gt;&#10;                                                &lt;/svg&gt;&#10;                                                &lt;span&gt;${appointment.doctor.specialite.name}&lt;/span&gt;&#10;                                            &lt;/div&gt;&#10;                                            &lt;div class=&quot;info-item&quot;&gt;&#10;                                                &lt;svg class=&quot;info-icon&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; fill=&quot;none&quot; viewBox=&quot;0 0 24 24&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot;&gt;&#10;                                                    &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 0 1 0 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z&quot; /&gt;&#10;                                                &lt;/svg&gt;&#10;                                                &lt;span&gt;${appointment.type}&lt;/span&gt;&#10;                                            &lt;/div&gt;&#10;                                        &lt;/div&gt;&#10;&#10;                                        &lt;c:if test=&quot;${appointment.statut == 'PLANNED'}&quot;&gt;&#10;                                            &lt;div class=&quot;appointment-actions&quot;&gt;&#10;                                                &lt;button class=&quot;btn btn-danger btn-small&quot; onclick=&quot;confirmCancel('${appointment.id}', '&lt;fmt:formatDate value=&quot;${appointment.date}&quot; pattern=&quot;dd/MM/yyyy&quot; /&gt;', '&lt;fmt:formatDate value=&quot;${appointment.hour}&quot; pattern=&quot;HH:mm&quot; /&gt;')&quot;&gt;&#10;                                                    &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot;&gt;&#10;                                                        &lt;line x1=&quot;18&quot; y1=&quot;6&quot; x2=&quot;6&quot; y2=&quot;18&quot;&gt;&lt;/line&gt;&#10;                                                        &lt;line x1=&quot;6&quot; y1=&quot;6&quot; x2=&quot;18&quot; y2=&quot;18&quot;&gt;&lt;/line&gt;&#10;                                                    &lt;/svg&gt;&#10;                                                    Annuler&#10;                                                &lt;/button&gt;&#10;                                            &lt;/div&gt;&#10;                                        &lt;/c:if&gt;&#10;                                    &lt;/div&gt;&#10;                                &lt;/c:forEach&gt;&#10;                            &lt;/c:otherwise&gt;&#10;                        &lt;/c:choose&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;!-- Booking Modal --&gt;&#10;        &lt;div id=&quot;bookingModal&quot; class=&quot;modal&quot;&gt;&#10;            &lt;div class=&quot;modal-content&quot;&gt;&#10;                &lt;div class=&quot;modal-header&quot;&gt;&#10;                    &lt;h3 class=&quot;modal-title&quot;&gt;Réserver un Rendez-vous&lt;/h3&gt;&#10;                    &lt;button class=&quot;modal-close&quot; onclick=&quot;closeBookingModal()&quot;&gt;&#10;                        &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;20&quot; height=&quot;20&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot;&gt;&#10;                            &lt;line x1=&quot;18&quot; y1=&quot;6&quot; x2=&quot;6&quot; y2=&quot;18&quot;&gt;&lt;/line&gt;&#10;                            &lt;line x1=&quot;6&quot; y1=&quot;6&quot; x2=&quot;18&quot; y2=&quot;18&quot;&gt;&lt;/line&gt;&#10;                        &lt;/svg&gt;&#10;                    &lt;/button&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;form action=&quot;${pageContext.request.contextPath}/patient/appointments/book&quot; method=&quot;post&quot;&gt;&#10;                    &lt;div class=&quot;form-group&quot;&gt;&#10;                        &lt;label class=&quot;form-label&quot; for=&quot;speciality&quot;&gt;Spécialité&lt;/label&gt;&#10;                        &lt;select class=&quot;form-select&quot; id=&quot;speciality&quot; name=&quot;specialityId&quot; required onchange=&quot;loadDoctors(this.value)&quot;&gt;&#10;                            &lt;option value=&quot;&quot;&gt;Choisir une spécialité&lt;/option&gt;&#10;                            &lt;c:forEach var=&quot;speciality&quot; items=&quot;${specialties}&quot;&gt;&#10;                                &lt;option value=&quot;${speciality.id}&quot;&gt;${speciality.name}&lt;/option&gt;&#10;                            &lt;/c:forEach&gt;&#10;                        &lt;/select&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;div class=&quot;form-group&quot;&gt;&#10;                        &lt;label class=&quot;form-label&quot; for=&quot;doctor&quot;&gt;Docteur&lt;/label&gt;&#10;                        &lt;select class=&quot;form-select&quot; id=&quot;doctor&quot; name=&quot;doctorId&quot; required disabled&gt;&#10;                            &lt;option value=&quot;&quot;&gt;Choisir d'abord une spécialité&lt;/option&gt;&#10;                        &lt;/select&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;div class=&quot;form-group&quot;&gt;&#10;                        &lt;label class=&quot;form-label&quot; for=&quot;date&quot;&gt;Date&lt;/label&gt;&#10;                        &lt;input type=&quot;date&quot; class=&quot;form-input&quot; id=&quot;date&quot; name=&quot;date&quot; required&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;div class=&quot;form-group&quot;&gt;&#10;                        &lt;label class=&quot;form-label&quot; for=&quot;time&quot;&gt;Heure&lt;/label&gt;&#10;                        &lt;select class=&quot;form-select&quot; id=&quot;time&quot; name=&quot;time&quot; required&gt;&#10;                            &lt;option value=&quot;&quot;&gt;Choisir une heure&lt;/option&gt;&#10;                            &lt;option value=&quot;09:00&quot;&gt;09:00&lt;/option&gt;&#10;                            &lt;option value=&quot;09:30&quot;&gt;09:30&lt;/option&gt;&#10;                            &lt;option value=&quot;10:00&quot;&gt;10:00&lt;/option&gt;&#10;                            &lt;option value=&quot;10:30&quot;&gt;10:30&lt;/option&gt;&#10;                            &lt;option value=&quot;11:00&quot;&gt;11:00&lt;/option&gt;&#10;                            &lt;option value=&quot;11:30&quot;&gt;11:30&lt;/option&gt;&#10;                            &lt;option value=&quot;14:00&quot;&gt;14:00&lt;/option&gt;&#10;                            &lt;option value=&quot;14:30&quot;&gt;14:30&lt;/option&gt;&#10;                            &lt;option value=&quot;15:00&quot;&gt;15:00&lt;/option&gt;&#10;                            &lt;option value=&quot;15:30&quot;&gt;15:30&lt;/option&gt;&#10;                            &lt;option value=&quot;16:00&quot;&gt;16:00&lt;/option&gt;&#10;                            &lt;option value=&quot;16:30&quot;&gt;16:30&lt;/option&gt;&#10;                            &lt;option value=&quot;17:00&quot;&gt;17:00&lt;/option&gt;&#10;                        &lt;/select&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;div class=&quot;form-group&quot;&gt;&#10;                        &lt;label class=&quot;form-label&quot; for=&quot;type&quot;&gt;Type de consultation&lt;/label&gt;&#10;                        &lt;select class=&quot;form-select&quot; id=&quot;type&quot; name=&quot;type&quot; required&gt;&#10;                            &lt;option value=&quot;&quot;&gt;Choisir un type&lt;/option&gt;&#10;                            &lt;option value=&quot;CONSULTATION&quot;&gt;Consultation&lt;/option&gt;&#10;                            &lt;option value=&quot;CONTROLE&quot;&gt;Contrôle&lt;/option&gt;&#10;                            &lt;option value=&quot;URGENCE&quot;&gt;Urgence&lt;/option&gt;&#10;                        &lt;/select&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;button type=&quot;submit&quot; class=&quot;btn btn-primary&quot; style=&quot;width: 100%;&quot;&gt;&#10;                        &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;20&quot; height=&quot;20&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot;&gt;&#10;                            &lt;path d=&quot;M22 11.08V12a10 10 0 1 1-5.93-9.14&quot;&gt;&lt;/path&gt;&#10;                            &lt;polyline points=&quot;22 4 12 14.01 9 11.01&quot;&gt;&lt;/polyline&gt;&#10;                        &lt;/svg&gt;&#10;                        Confirmer le Rendez-vous&#10;                    &lt;/button&gt;&#10;                &lt;/form&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;!-- Cancel Confirmation Modal --&gt;&#10;        &lt;div id=&quot;cancelModal&quot; class=&quot;modal&quot;&gt;&#10;            &lt;div class=&quot;modal-content&quot;&gt;&#10;                &lt;div class=&quot;modal-header&quot;&gt;&#10;                    &lt;h3 class=&quot;modal-title&quot;&gt;Annuler le Rendez-vous&lt;/h3&gt;&#10;                    &lt;button class=&quot;modal-close&quot; onclick=&quot;closeCancelModal()&quot;&gt;&#10;                        &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;20&quot; height=&quot;20&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot;&gt;&#10;                            &lt;line x1=&quot;18&quot; y1=&quot;6&quot; x2=&quot;6&quot; y2=&quot;18&quot;&gt;&lt;/line&gt;&#10;                            &lt;line x1=&quot;6&quot; y1=&quot;6&quot; x2=&quot;18&quot; y2=&quot;18&quot;&gt;&lt;/line&gt;&#10;                        &lt;/svg&gt;&#10;                    &lt;/button&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div class=&quot;alert alert-warning&quot;&gt;&#10;                    &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;24&quot; height=&quot;24&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot;&gt;&#10;                        &lt;path d=&quot;M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z&quot;&gt;&lt;/path&gt;&#10;                        &lt;line x1=&quot;12&quot; y1=&quot;9&quot; x2=&quot;12&quot; y2=&quot;13&quot;&gt;&lt;/line&gt;&#10;                        &lt;line x1=&quot;12&quot; y1=&quot;17&quot; x2=&quot;12.01&quot; y2=&quot;17&quot;&gt;&lt;/line&gt;&#10;                    &lt;/svg&gt;&#10;                    &lt;span&gt;Les annulations doivent être effectuées au moins 12h avant le rendez-vous.&lt;/span&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;p style=&quot;color: var(--text); margin-bottom: 1.5rem;&quot;&gt;&#10;                    Êtes-vous sûr de vouloir annuler votre rendez-vous du &lt;strong id=&quot;cancelDate&quot;&gt;&lt;/strong&gt; à &lt;strong id=&quot;cancelTime&quot;&gt;&lt;/strong&gt; ?&#10;                &lt;/p&gt;&#10;&#10;                &lt;form id=&quot;cancelForm&quot; method=&quot;post&quot;&gt;&#10;                    &lt;input type=&quot;hidden&quot; id=&quot;appointmentIdToCancel&quot; name=&quot;appointmentId&quot;&gt;&#10;                    &lt;div style=&quot;display: flex; gap: 1rem;&quot;&gt;&#10;                        &lt;button type=&quot;button&quot; class=&quot;btn btn-outline&quot; style=&quot;flex: 1;&quot; onclick=&quot;closeCancelModal()&quot;&gt;&#10;                            Non, garder&#10;                        &lt;/button&gt;&#10;                        &lt;button type=&quot;submit&quot; class=&quot;btn btn-danger&quot; style=&quot;flex: 1;&quot;&gt;&#10;                            &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;20&quot; height=&quot;20&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot;&gt;&#10;                                &lt;line x1=&quot;18&quot; y1=&quot;6&quot; x2=&quot;6&quot; y2=&quot;18&quot;&gt;&lt;/line&gt;&#10;                                &lt;line x1=&quot;6&quot; y1=&quot;6&quot; x2=&quot;18&quot; y2=&quot;18&quot;&gt;&lt;/line&gt;&#10;                            &lt;/svg&gt;&#10;                            Oui, annuler&#10;                        &lt;/button&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/form&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;script&gt;&#10;            // Modal Functions&#10;            function openBookingModal() {&#10;                document.getElementById('bookingModal').classList.add('active');&#10;            }&#10;&#10;            function closeBookingModal() {&#10;                document.getElementById('bookingModal').classList.remove('active');&#10;            }&#10;&#10;            function confirmCancel(id, date, time) {&#10;                document.getElementById('appointmentIdToCancel').value = id;&#10;                document.getElementById('cancelDate').textContent = date;&#10;                document.getElementById('cancelTime').textContent = time;&#10;                document.getElementById('cancelForm').action = '${pageContext.request.contextPath}/patient/appointments/cancel';&#10;                document.getElementById('cancelModal').classList.add('active');&#10;            }&#10;&#10;            function closeCancelModal() {&#10;                document.getElementById('cancelModal').classList.remove('active');&#10;            }&#10;&#10;            // Load doctors based on speciality&#10;            function loadDoctors(specialityId) {&#10;                const doctorSelect = document.getElementById('doctor');&#10;&#10;                if (!specialityId) {&#10;                    doctorSelect.disabled = true;&#10;                    doctorSelect.innerHTML = '&lt;option value=&quot;&quot;&gt;Choisir d\'abord une spécialité&lt;/option&gt;';&#10;                    return;&#10;                }&#10;&#10;                // AJAX call to get doctors by speciality&#10;                fetch('${pageContext.request.contextPath}/patient/doctors?specialityId=' + specialityId)&#10;                    .then(response =&gt; response.json())&#10;                    .then(doctors =&gt; {&#10;                        doctorSelect.disabled = false;&#10;                        doctorSelect.innerHTML = '&lt;option value=&quot;&quot;&gt;Choisir un docteur&lt;/option&gt;';&#10;                        doctors.forEach(doctor =&gt; {&#10;                            const option = document.createElement('option');&#10;                            option.value = doctor.id;&#10;                            option.textContent = 'Dr. ' + doctor.user.name;&#10;                            doctorSelect.appendChild(option);&#10;                        });&#10;                    })&#10;                    .catch(error =&gt; {&#10;                        console.error('Error loading doctors:', error);&#10;                        doctorSelect.innerHTML = '&lt;option value=&quot;&quot;&gt;Erreur de chargement&lt;/option&gt;';&#10;                    });&#10;            }&#10;&#10;            // Open booking modal with pre-selected doctor&#10;            function openBookingModalWithDoctor(doctorId, doctorName, specialityId) {&#10;                openBookingModal();&#10;&#10;                // Pre-select speciality&#10;                const specialitySelect = document.getElementById('speciality');&#10;                specialitySelect.value = specialityId;&#10;&#10;                // Load doctors for this speciality and pre-select the doctor&#10;                loadDoctors(specialityId);&#10;&#10;                // Wait a bit for doctors to load, then select the doctor&#10;                setTimeout(function() {&#10;                    const doctorSelect = document.getElementById('doctor');&#10;                    doctorSelect.value = doctorId;&#10;                }, 500);&#10;            }&#10;&#10;            // Close modals when clicking outside&#10;            window.onclick = function(event) {&#10;                const bookingModal = document.getElementById('bookingModal');&#10;                const cancelModal = document.getElementById('cancelModal');&#10;&#10;                if (event.target === bookingModal) {&#10;                    closeBookingModal();&#10;                }&#10;                if (event.target === cancelModal) {&#10;                    closeCancelModal();&#10;                }&#10;            }&#10;&#10;            // Set minimum date to today&#10;            document.addEventListener('DOMContentLoaded', function() {&#10;                const dateInput = document.getElementById('date');&#10;                if (dateInput) {&#10;                    const today = new Date().toISOString().split('T')[0];&#10;                    dateInput.setAttribute('min', today);&#10;                }&#10;            });&#10;&#10;            // Toggle user menu&#10;            function toggleUserMenu() {&#10;                const userDropdown = document.getElementById('userDropdown');&#10;                const userMenuBtn = document.querySelector('.user-menu-btn');&#10;                userDropdown.classList.toggle('active');&#10;                userMenuBtn.classList.toggle('active');&#10;            }&#10;&#10;            // Close user menu when clicking outside&#10;            document.addEventListener('click', function(event) {&#10;                const userDropdown = document.getElementById('userDropdown');&#10;                const userMenuBtn = document.querySelector('.user-menu-btn');&#10;&#10;                if (!event.target.closest('.user-section') &amp;&amp; userDropdown.classList.contains('active')) {&#10;                    userDropdown.classList.remove('active');&#10;                    userMenuBtn.classList.remove('active');&#10;                }&#10;            });&#10;        &lt;/script&gt;&#10;    &lt;/body&gt;&#10;    &lt;/html&gt;&#10;" />
              <option name="updatedContent" value="&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;&#10;&lt;%@ taglib uri=&quot;jakarta.tags.core&quot; prefix=&quot;c&quot; %&gt;&#10;&lt;%@ taglib uri=&quot;jakarta.tags.fmt&quot; prefix=&quot;fmt&quot; %&gt;&#10;&lt;%@ taglib uri=&quot;jakarta.tags.functions&quot; prefix=&quot;fn&quot; %&gt;&#10;    &lt;!DOCTYPE html&gt;&#10;    &lt;html lang=&quot;fr&quot;&gt;&#10;    &lt;head&gt;&#10;        &lt;meta charset=&quot;UTF-8&quot;/&gt;&#10;        &lt;title&gt;Dashboard Patient - Clinique Digitale&lt;/title&gt;&#10;        &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,initial-scale=1&quot; /&gt;&#10;        &lt;link rel=&quot;preconnect&quot; href=&quot;https://fonts.googleapis.com&quot;&gt;&#10;        &lt;link rel=&quot;preconnect&quot; href=&quot;https://fonts.gstatic.com&quot; crossorigin&gt;&#10;        &lt;link href=&quot;https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&amp;display=swap&quot; rel=&quot;stylesheet&quot;&gt;&#10;        &lt;style&gt;&#10;            * {&#10;                margin: 0;&#10;                padding: 0;&#10;                box-sizing: border-box;&#10;            }&#10;&#10;            :root {&#10;                --primary: #6366F1;&#10;                --primary-dark: #4F46E5;&#10;                --primary-light: #818CF8;&#10;                --secondary: #EC4899;&#10;                --success: #10B981;&#10;                --warning: #F59E0B;&#10;                --error: #EF4444;&#10;                --text: #1F2937;&#10;                --text-light: #6B7280;&#10;                --white: #FFFFFF;&#10;                --bg-overlay: rgba(255, 255, 255, 0.95);&#10;            }&#10;&#10;            body {&#10;                font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;&#10;                min-height: 100vh;&#10;                background: linear-gradient(135deg, #667eea 0%, #764ba2 50%, #f093fb 100%);&#10;                background-size: 400% 400%;&#10;                animation: gradientShift 15s ease infinite;&#10;                position: relative;&#10;                overflow-x: hidden;&#10;                color: var(--text);&#10;            }&#10;&#10;            @keyframes gradientShift {&#10;                0% { background-position: 0% 50%; }&#10;                50% { background-position: 100% 50%; }&#10;                100% { background-position: 0% 50%; }&#10;            }&#10;&#10;            /* Animated background shapes */&#10;            .bg-shapes {&#10;                position: fixed;&#10;                width: 100%;&#10;                height: 100%;&#10;                overflow: hidden;&#10;                z-index: 0;&#10;                pointer-events: none;&#10;            }&#10;&#10;            .shape {&#10;                position: absolute;&#10;                border-radius: 50%;&#10;                background: rgba(255, 255, 255, 0.1);&#10;                animation: float 20s infinite ease-in-out;&#10;            }&#10;&#10;            .shape:nth-child(1) {&#10;                width: 300px;&#10;                height: 300px;&#10;                top: -150px;&#10;                left: -150px;&#10;                animation-delay: 0s;&#10;            }&#10;&#10;            .shape:nth-child(2) {&#10;                width: 200px;&#10;                height: 200px;&#10;                bottom: -100px;&#10;                right: -100px;&#10;                animation-delay: 2s;&#10;            }&#10;&#10;            .shape:nth-child(3) {&#10;                width: 150px;&#10;                height: 150px;&#10;                top: 50%;&#10;                left: 10%;&#10;                animation-delay: 4s;&#10;            }&#10;&#10;            .shape:nth-child(4) {&#10;                width: 250px;&#10;                height: 250px;&#10;                bottom: 20%;&#10;                left: -125px;&#10;                animation-delay: 6s;&#10;            }&#10;&#10;            @keyframes float {&#10;                0%, 100% { transform: translate(0, 0) rotate(0deg); }&#10;                25% { transform: translate(20px, 20px) rotate(90deg); }&#10;                50% { transform: translate(-20px, 40px) rotate(180deg); }&#10;                75% { transform: translate(40px, -20px) rotate(270deg); }&#10;            }&#10;&#10;            /* Header */&#10;            .header {&#10;                position: relative;&#10;                z-index: 10;&#10;                background: var(--bg-overlay);&#10;                backdrop-filter: blur(20px);&#10;                box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);&#10;                animation: slideDown 0.6s ease-out;&#10;            }&#10;&#10;            @keyframes slideDown {&#10;                from {&#10;                    opacity: 0;&#10;                    transform: translateY(-20px);&#10;                }&#10;                to {&#10;                    opacity: 1;&#10;                    transform: translateY(0);&#10;                }&#10;            }&#10;&#10;            .nav-container {&#10;                max-width: 1400px;&#10;                margin: 0 auto;&#10;                padding: 1.25rem 2rem;&#10;                display: flex;&#10;                justify-content: space-between;&#10;                align-items: center;&#10;            }&#10;&#10;            .logo-section {&#10;                display: flex;&#10;                align-items: center;&#10;                gap: 0.75rem;&#10;            }&#10;&#10;            .logo-icon {&#10;                width: 45px;&#10;                height: 45px;&#10;                background: linear-gradient(135deg, var(--primary), var(--primary-light));&#10;                border-radius: 12px;&#10;                display: flex;&#10;                align-items: center;&#10;                justify-content: center;&#10;                box-shadow: 0 4px 12px rgba(99, 102, 241, 0.4);&#10;            }&#10;&#10;            .logo-text {&#10;                font-size: 1.5rem;&#10;                font-weight: 800;&#10;                background: linear-gradient(135deg, var(--primary), var(--secondary));&#10;                -webkit-background-clip: text;&#10;                -webkit-text-fill-color: transparent;&#10;                background-clip: text;&#10;            }&#10;&#10;            .user-section {&#10;                display: flex;&#10;                align-items: center;&#10;                gap: 1rem;&#10;                position: relative;&#10;            }&#10;&#10;            /* User Menu Button */&#10;            .user-menu-btn {&#10;                display: flex;&#10;                align-items: center;&#10;                gap: 0.75rem;&#10;                padding: 0.5rem 1rem;&#10;                background: white;&#10;                border: 2px solid #E5E7EB;&#10;                border-radius: 12px;&#10;                cursor: pointer;&#10;                transition: all 0.3s ease;&#10;                position: relative;&#10;            }&#10;&#10;            .user-menu-btn:hover {&#10;                border-color: var(--primary);&#10;                box-shadow: 0 4px 12px rgba(99, 102, 241, 0.2);&#10;            }&#10;&#10;            .user-avatar {&#10;                width: 40px;&#10;                height: 40px;&#10;                background: linear-gradient(135deg, var(--primary), var(--primary-light));&#10;                border-radius: 50%;&#10;                display: flex;&#10;                align-items: center;&#10;                justify-content: center;&#10;                color: white;&#10;                font-weight: 700;&#10;                font-size: 1.1rem;&#10;                text-transform: uppercase;&#10;            }&#10;&#10;            .user-info {&#10;                text-align: left;&#10;            }&#10;&#10;            .user-name {&#10;                font-weight: 600;&#10;                color: var(--text);&#10;                font-size: 0.95rem;&#10;            }&#10;&#10;            .user-role {&#10;                font-size: 0.75rem;&#10;                color: var(--text-light);&#10;            }&#10;&#10;            .dropdown-icon {&#10;                width: 20px;&#10;                height: 20px;&#10;                color: var(--text-light);&#10;                transition: transform 0.3s ease;&#10;            }&#10;&#10;            .user-menu-btn.active .dropdown-icon {&#10;                transform: rotate(180deg);&#10;            }&#10;&#10;            /* Dropdown Menu */&#10;            .user-dropdown {&#10;                position: absolute;&#10;                top: calc(100% + 0.5rem);&#10;                right: 0;&#10;                background: white;&#10;                border-radius: 16px;&#10;                box-shadow: 0 10px 40px rgba(0, 0, 0, 0.15);&#10;                min-width: 250px;&#10;                opacity: 0;&#10;                visibility: hidden;&#10;                transform: translateY(-10px);&#10;                transition: all 0.3s ease;&#10;                z-index: 1000;&#10;                overflow: hidden;&#10;            }&#10;&#10;            .user-dropdown.active {&#10;                opacity: 1;&#10;                visibility: visible;&#10;                transform: translateY(0);&#10;            }&#10;&#10;            .dropdown-header {&#10;                padding: 1.25rem;&#10;                border-bottom: 2px solid #F3F4F6;&#10;                background: linear-gradient(135deg, rgba(99, 102, 241, 0.05), rgba(236, 72, 153, 0.05));&#10;            }&#10;&#10;            .dropdown-user-info {&#10;                display: flex;&#10;                align-items: center;&#10;                gap: 0.75rem;&#10;            }&#10;&#10;            .dropdown-avatar {&#10;                width: 50px;&#10;                height: 50px;&#10;                background: linear-gradient(135deg, var(--primary), var(--primary-light));&#10;                border-radius: 50%;&#10;                display: flex;&#10;                align-items: center;&#10;                justify-content: center;&#10;                color: white;&#10;                font-weight: 700;&#10;                font-size: 1.3rem;&#10;                text-transform: uppercase;&#10;            }&#10;&#10;            .dropdown-user-details .user-name {&#10;                font-size: 1rem;&#10;                margin-bottom: 0.25rem;&#10;            }&#10;&#10;            .dropdown-user-details .user-email {&#10;                font-size: 0.85rem;&#10;                color: var(--text-light);&#10;            }&#10;&#10;            .dropdown-menu {&#10;                padding: 0.5rem 0;&#10;            }&#10;&#10;            .dropdown-item {&#10;                display: flex;&#10;                align-items: center;&#10;                gap: 0.75rem;&#10;                padding: 0.875rem 1.25rem;&#10;                color: var(--text);&#10;                text-decoration: none;&#10;                transition: all 0.2s ease;&#10;                cursor: pointer;&#10;                border: none;&#10;                background: none;&#10;                width: 100%;&#10;                text-align: left;&#10;                font-size: 0.95rem;&#10;            }&#10;&#10;            .dropdown-item:hover {&#10;                background: #F9FAFB;&#10;                padding-left: 1.5rem;&#10;            }&#10;&#10;            .dropdown-item svg {&#10;                width: 20px;&#10;                height: 20px;&#10;                color: var(--text-light);&#10;            }&#10;&#10;            .dropdown-item.danger {&#10;                color: var(--error);&#10;            }&#10;&#10;            .dropdown-item.danger svg {&#10;                color: var(--error);&#10;            }&#10;&#10;            .dropdown-item.danger:hover {&#10;                background: #FEE2E2;&#10;            }&#10;&#10;            .dropdown-divider {&#10;                height: 2px;&#10;                background: #F3F4F6;&#10;                margin: 0.5rem 0;&#10;            }&#10;&#10;            /* Main Container */&#10;            .main-container {&#10;                position: relative;&#10;                z-index: 1;&#10;                max-width: 1400px;&#10;                margin: 2rem auto;&#10;                padding: 0 2rem 2rem;&#10;                animation: fadeInUp 0.8s ease-out 0.2s both;&#10;            }&#10;&#10;            @keyframes fadeInUp {&#10;                from {&#10;                    opacity: 0;&#10;                    transform: translateY(30px);&#10;                }&#10;                to {&#10;                    opacity: 1;&#10;                    transform: translateY(0);&#10;                }&#10;            }&#10;&#10;            /* Welcome Section */&#10;            .welcome-section {&#10;                background: var(--bg-overlay);&#10;                backdrop-filter: blur(20px);&#10;                border-radius: 20px;&#10;                padding: 2rem;&#10;                margin-bottom: 2rem;&#10;                box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);&#10;                display: flex;&#10;                justify-content: space-between;&#10;                align-items: center;&#10;                position: relative;&#10;                overflow: hidden;&#10;            }&#10;&#10;            .welcome-section::before {&#10;                content: '';&#10;                position: absolute;&#10;                top: 0;&#10;                left: 0;&#10;                right: 0;&#10;                height: 4px;&#10;                background: linear-gradient(90deg, var(--primary), var(--secondary), var(--primary-light));&#10;                background-size: 200% 100%;&#10;                animation: shimmer 3s infinite;&#10;            }&#10;&#10;            @keyframes shimmer {&#10;                0% { background-position: -200% 0; }&#10;                100% { background-position: 200% 0; }&#10;            }&#10;&#10;            .welcome-content h1 {&#10;                font-size: 2rem;&#10;                font-weight: 800;&#10;                background: linear-gradient(135deg, var(--primary), var(--secondary));&#10;                -webkit-background-clip: text;&#10;                -webkit-text-fill-color: transparent;&#10;                background-clip: text;&#10;                margin-bottom: 0.5rem;&#10;            }&#10;&#10;            .welcome-content p {&#10;                color: var(--text-light);&#10;                font-size: 1.1rem;&#10;            }&#10;&#10;            /* Search Doctors Section */&#10;            .search-doctors-section {&#10;                margin-bottom: 2rem;&#10;            }&#10;&#10;            .search-doctors-section .card {&#10;                background: var(--bg-overlay);&#10;                backdrop-filter: blur(20px);&#10;                border-radius: 20px;&#10;                padding: 2rem;&#10;                box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);&#10;                position: relative;&#10;                overflow: hidden;&#10;            }&#10;&#10;            .search-doctors-section .card::before {&#10;                content: '';&#10;                position: absolute;&#10;                top: 0;&#10;                left: 0;&#10;                right: 0;&#10;                height: 4px;&#10;                background: linear-gradient(90deg, var(--primary), var(--secondary), var(--primary-light));&#10;                background-size: 200% 100%;&#10;                animation: shimmer 3s infinite;&#10;            }&#10;&#10;            .search-doctors-section .card-header {&#10;                display: flex;&#10;                align-items: center;&#10;                gap: 1rem;&#10;                margin-bottom: 1.5rem;&#10;            }&#10;&#10;            .search-doctors-section .card-icon {&#10;                width: 60px;&#10;                height: 60px;&#10;                background: linear-gradient(135deg, var(--primary), var(--primary-light));&#10;                border-radius: 16px;&#10;                display: flex;&#10;                align-items: center;&#10;                justify-content: center;&#10;                box-shadow: 0 4px 12px rgba(99, 102, 241, 0.4);&#10;            }&#10;&#10;            .search-doctors-section .card-title {&#10;                font-size: 1.5rem;&#10;                font-weight: 700;&#10;                background: linear-gradient(135deg, var(--primary), var(--secondary));&#10;                -webkit-background-clip: text;&#10;                -webkit-text-fill-color: transparent;&#10;                background-clip: text;&#10;            }&#10;&#10;            /* Dashboard Grid */&#10;            .dashboard-grid {&#10;                display: grid;&#10;                grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));&#10;                gap: 2rem;&#10;                margin-bottom: 2rem;&#10;            }&#10;&#10;            /* Card Styles */&#10;            .card {&#10;                background: var(--bg-overlay);&#10;                backdrop-filter: blur(20px);&#10;                border-radius: 20px;&#10;                padding: 2rem;&#10;                box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);&#10;                transition: all 0.3s ease;&#10;                position: relative;&#10;                overflow: hidden;&#10;            }&#10;&#10;            .card::before {&#10;                content: '';&#10;                position: absolute;&#10;                top: 0;&#10;                left: 0;&#10;                right: 0;&#10;                height: 4px;&#10;                background: linear-gradient(90deg, var(--primary), var(--secondary), var(--primary-light));&#10;                background-size: 200% 100%;&#10;                animation: shimmer 3s infinite;&#10;            }&#10;&#10;            .card:hover {&#10;                transform: translateY(-5px);&#10;                box-shadow: 0 15px 40px rgba(0, 0, 0, 0.2);&#10;            }&#10;&#10;            .card-header {&#10;                display: flex;&#10;                align-items: center;&#10;                gap: 1rem;&#10;                margin-bottom: 1.5rem;&#10;            }&#10;&#10;            .card-icon {&#10;                width: 60px;&#10;                height: 60px;&#10;                background: linear-gradient(135deg, var(--primary), var(--primary-light));&#10;                border-radius: 16px;&#10;                display: flex;&#10;                align-items: center;&#10;                justify-content: center;&#10;                box-shadow: 0 4px 12px rgba(99, 102, 241, 0.4);&#10;            }&#10;&#10;            .card-title {&#10;                font-size: 1.5rem;&#10;                font-weight: 700;&#10;                background: linear-gradient(135deg, var(--primary), var(--secondary));&#10;                -webkit-background-clip: text;&#10;                -webkit-text-fill-color: transparent;&#10;                background-clip: text;&#10;            }&#10;&#10;            /* Form Styles */&#10;            .form-group {&#10;                margin-bottom: 1.5rem;&#10;            }&#10;&#10;            .form-label {&#10;                display: block;&#10;                font-weight: 600;&#10;                color: var(--text);&#10;                margin-bottom: 0.5rem;&#10;                font-size: 0.95rem;&#10;            }&#10;&#10;            .form-input, .form-select {&#10;                width: 100%;&#10;                padding: 0.875rem 1rem;&#10;                border: 2px solid #E5E7EB;&#10;                border-radius: 12px;&#10;                font-size: 1rem;&#10;                transition: all 0.3s ease;&#10;                background: white;&#10;                color: var(--text);&#10;                font-family: inherit;&#10;            }&#10;&#10;            .form-input:focus, .form-select:focus {&#10;                outline: none;&#10;                border-color: var(--primary);&#10;                box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);&#10;            }&#10;&#10;            /* Appointments List */&#10;            .appointments-list {&#10;                max-height: 600px;&#10;                overflow-y: auto;&#10;            }&#10;&#10;            .appointment-item {&#10;                background: white;&#10;                border-radius: 16px;&#10;                padding: 1.5rem;&#10;                margin-bottom: 1rem;&#10;                border: 2px solid #F3F4F6;&#10;                transition: all 0.3s ease;&#10;                position: relative;&#10;            }&#10;&#10;            .appointment-item:hover {&#10;                border-color: var(--primary-light);&#10;                transform: translateX(5px);&#10;                box-shadow: 0 4px 12px rgba(99, 102, 241, 0.15);&#10;            }&#10;&#10;            .appointment-header {&#10;                display: flex;&#10;                justify-content: space-between;&#10;                align-items: start;&#10;                margin-bottom: 1rem;&#10;            }&#10;&#10;            .appointment-date {&#10;                display: flex;&#10;                align-items: center;&#10;                gap: 0.5rem;&#10;                font-weight: 600;&#10;                color: var(--text);&#10;                font-size: 1.1rem;&#10;            }&#10;&#10;            .appointment-status {&#10;                padding: 0.4rem 0.9rem;&#10;                border-radius: 20px;&#10;                font-size: 0.85rem;&#10;                font-weight: 600;&#10;                text-transform: uppercase;&#10;            }&#10;&#10;            .status-planned {&#10;                background: #DBEAFE;&#10;                color: #1E40AF;&#10;            }&#10;&#10;            .status-confirmed {&#10;                background: #D1FAE5;&#10;                color: #065F46;&#10;            }&#10;&#10;            .status-cancelled {&#10;                background: #FEE2E2;&#10;                color: #991B1B;&#10;            }&#10;&#10;            .appointment-info {&#10;                display: grid;&#10;                grid-template-columns: repeat(2, 1fr);&#10;                gap: 0.75rem;&#10;                margin-bottom: 1rem;&#10;            }&#10;&#10;            .info-item {&#10;                display: flex;&#10;                align-items: center;&#10;                gap: 0.5rem;&#10;                color: var(--text-light);&#10;                font-size: 0.95rem;&#10;            }&#10;&#10;            .info-icon {&#10;                width: 20px;&#10;                height: 20px;&#10;                color: var(--primary);&#10;            }&#10;&#10;            .appointment-actions {&#10;                display: flex;&#10;                gap: 0.75rem;&#10;                justify-content: flex-end;&#10;            }&#10;&#10;            .btn {&#10;                padding: 0.75rem 1.5rem;&#10;                border-radius: 12px;&#10;                font-size: 0.95rem;&#10;                font-weight: 600;&#10;                cursor: pointer;&#10;                transition: all 0.3s ease;&#10;                border: none;&#10;                text-decoration: none;&#10;                display: inline-flex;&#10;                align-items: center;&#10;                gap: 0.5rem;&#10;                position: relative;&#10;                overflow: hidden;&#10;            }&#10;&#10;            .btn::before {&#10;                content: '';&#10;                position: absolute;&#10;                top: 50%;&#10;                left: 50%;&#10;                width: 0;&#10;                height: 0;&#10;                border-radius: 50%;&#10;                background: rgba(255, 255, 255, 0.3);&#10;                transform: translate(-50%, -50%);&#10;                transition: width 0.6s, height 0.6s;&#10;            }&#10;&#10;            .btn:hover::before {&#10;                width: 300px;&#10;                height: 300px;&#10;            }&#10;&#10;            .btn-primary {&#10;                background: linear-gradient(135deg, var(--primary), var(--primary-light));&#10;                color: white;&#10;                box-shadow: 0 4px 12px rgba(99, 102, 241, 0.4);&#10;            }&#10;&#10;            .btn-primary:hover {&#10;                transform: translateY(-2px);&#10;                box-shadow: 0 6px 20px rgba(99, 102, 241, 0.5);&#10;            }&#10;&#10;            .btn-danger {&#10;                background: linear-gradient(135deg, var(--error), #F87171);&#10;                color: white;&#10;                box-shadow: 0 4px 12px rgba(239, 68, 68, 0.4);&#10;            }&#10;&#10;            .btn-danger:hover {&#10;                transform: translateY(-2px);&#10;                box-shadow: 0 6px 20px rgba(239, 68, 68, 0.5);&#10;            }&#10;&#10;            .btn-success {&#10;                background: linear-gradient(135deg, var(--success), #34D399);&#10;                color: white;&#10;                box-shadow: 0 4px 12px rgba(16, 185, 129, 0.4);&#10;            }&#10;&#10;            .btn-outline {&#10;                background: white;&#10;                color: var(--text);&#10;                border: 2px solid #E5E7EB;&#10;            }&#10;&#10;            .btn-outline:hover {&#10;                background: #F9FAFB;&#10;                border-color: var(--primary);&#10;                color: var(--primary);&#10;            }&#10;&#10;            .btn-small {&#10;                padding: 0.5rem 1rem;&#10;                font-size: 0.85rem;&#10;            }&#10;&#10;            .btn-large {&#10;                padding: 1rem 2rem;&#10;                font-size: 1.1rem;&#10;            }&#10;&#10;            /* Empty State */&#10;            .empty-state {&#10;                text-align: center;&#10;                padding: 3rem 1rem;&#10;            }&#10;&#10;            .empty-icon {&#10;                width: 80px;&#10;                height: 80px;&#10;                margin: 0 auto 1.5rem;&#10;                opacity: 0.5;&#10;            }&#10;&#10;            .empty-text {&#10;                color: var(--text-light);&#10;                font-size: 1.1rem;&#10;            }&#10;&#10;            /* Modal Styles */&#10;            .modal {&#10;                display: none;&#10;                position: fixed;&#10;                z-index: 1000;&#10;                left: 0;&#10;                top: 0;&#10;                width: 100%;&#10;                height: 100%;&#10;                background: rgba(0, 0, 0, 0.7);&#10;                backdrop-filter: blur(5px);&#10;                animation: fadeIn 0.3s ease-out;&#10;            }&#10;&#10;            @keyframes fadeIn {&#10;                from { opacity: 0; }&#10;                to { opacity: 1; }&#10;            }&#10;&#10;            .modal.active {&#10;                display: flex;&#10;                align-items: center;&#10;                justify-content: center;&#10;            }&#10;&#10;            .modal-content {&#10;                background: white;&#10;                border-radius: 24px;&#10;                padding: 2rem;&#10;                max-width: 500px;&#10;                width: 90%;&#10;                max-height: 90vh;&#10;                overflow-y: auto;&#10;                animation: slideUp 0.3s ease-out;&#10;                box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);&#10;            }&#10;&#10;            @keyframes slideUp {&#10;                from {&#10;                    opacity: 0;&#10;                    transform: translateY(30px);&#10;                }&#10;                to {&#10;                    opacity: 1;&#10;                    transform: translateY(0);&#10;                }&#10;            }&#10;&#10;            .modal-header {&#10;                display: flex;&#10;                justify-content: space-between;&#10;                align-items: center;&#10;                margin-bottom: 1.5rem;&#10;            }&#10;&#10;            .modal-title {&#10;                font-size: 1.5rem;&#10;                font-weight: 700;&#10;                background: linear-gradient(135deg, var(--primary), var(--secondary));&#10;                -webkit-background-clip: text;&#10;                -webkit-text-fill-color: transparent;&#10;                background-clip: text;&#10;            }&#10;&#10;            .modal-close {&#10;                width: 36px;&#10;                height: 36px;&#10;                border: none;&#10;                background: #F3F4F6;&#10;                border-radius: 50%;&#10;                cursor: pointer;&#10;                display: flex;&#10;                align-items: center;&#10;                justify-content: center;&#10;                transition: all 0.3s ease;&#10;            }&#10;&#10;            .modal-close:hover {&#10;                background: #E5E7EB;&#10;                transform: rotate(90deg);&#10;            }&#10;&#10;            /* Alert Messages */&#10;            .alert {&#10;                padding: 1rem 1.25rem;&#10;                border-radius: 12px;&#10;                margin-bottom: 1.5rem;&#10;                display: flex;&#10;                align-items: center;&#10;                gap: 0.75rem;&#10;                animation: slideDown 0.3s ease-out;&#10;            }&#10;&#10;            .alert-success {&#10;                background: #D1FAE5;&#10;                color: #065F46;&#10;                border: 2px solid #10B981;&#10;            }&#10;&#10;            .alert-error {&#10;                background: #FEE2E2;&#10;                color: #991B1B;&#10;                border: 2px solid #EF4444;&#10;            }&#10;&#10;            .alert-warning {&#10;                background: #FEF3C7;&#10;                color: #92400E;&#10;                border: 2px solid #F59E0B;&#10;            }&#10;&#10;            /* Scrollbar */&#10;            ::-webkit-scrollbar {&#10;                width: 8px;&#10;            }&#10;&#10;            ::-webkit-scrollbar-track {&#10;                background: #F3F4F6;&#10;                border-radius: 10px;&#10;            }&#10;&#10;            ::-webkit-scrollbar-thumb {&#10;                background: var(--primary-light);&#10;                border-radius: 10px;&#10;            }&#10;&#10;            ::-webkit-scrollbar-thumb:hover {&#10;                background: var(--primary);&#10;            }&#10;&#10;            /* Responsive */&#10;            @media (max-width: 768px) {&#10;                .nav-container {&#10;                    flex-direction: column;&#10;                    gap: 1rem;&#10;                }&#10;&#10;                .welcome-section {&#10;                    flex-direction: column;&#10;                    text-align: center;&#10;                    gap: 1rem;&#10;                }&#10;&#10;                .dashboard-grid {&#10;                    grid-template-columns: 1fr;&#10;                }&#10;&#10;                .appointment-info {&#10;                    grid-template-columns: 1fr;&#10;                }&#10;&#10;                .welcome-content h1 {&#10;                    font-size: 1.5rem;&#10;                }&#10;            }&#10;        &lt;/style&gt;&#10;    &lt;/head&gt;&#10;    &lt;body&gt;&#10;        &lt;!-- Background Shapes --&gt;&#10;            &lt;div class=&quot;bg-shapes&quot;&gt;&#10;            &lt;div class=&quot;shape&quot;&gt;&lt;/div&gt;&#10;            &lt;div class=&quot;shape&quot;&gt;&lt;/div&gt;&#10;            &lt;div class=&quot;shape&quot;&gt;&lt;/div&gt;&#10;            &lt;div class=&quot;shape&quot;&gt;&lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;!-- Header --&gt;&#10;        &lt;header class=&quot;header&quot;&gt;&#10;            &lt;div class=&quot;nav-container&quot;&gt;&#10;                &lt;div class=&quot;logo-section&quot;&gt;&#10;                    &lt;div class=&quot;logo-icon&quot;&gt;&#10;                        &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; fill=&quot;none&quot; viewBox=&quot;0 0 24 24&quot; stroke=&quot;currentColor&quot;&gt;&#10;                            &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z&quot; /&gt;&#10;                        &lt;/svg&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;span class=&quot;logo-text&quot;&gt;Clinique Digitale&lt;/span&gt;&#10;                &lt;/div&gt;&#10;                &lt;div class=&quot;user-section&quot;&gt;&#10;                    &lt;div class=&quot;user-menu-btn&quot; onclick=&quot;toggleUserMenu()&quot;&gt;&#10;                        &lt;div class=&quot;user-avatar&quot;&gt;&#10;                            &lt;c:choose&gt;&#10;                                &lt;c:when test=&quot;${not empty sessionScope.user.name}&quot;&gt;&#10;                                    ${fn:toUpperCase(fn:substring(sessionScope.user.name, 0, 1))}&#10;                                &lt;/c:when&gt;&#10;                                &lt;c:otherwise&gt;?&lt;/c:otherwise&gt;&#10;                            &lt;/c:choose&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div class=&quot;user-info&quot;&gt;&#10;                            &lt;div class=&quot;user-name&quot;&gt;${sessionScope.user.name}&lt;/div&gt;&#10;                            &lt;div class=&quot;user-role&quot;&gt;Patient&lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;svg class=&quot;dropdown-icon&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; fill=&quot;none&quot; viewBox=&quot;0 0 24 24&quot; stroke=&quot;currentColor&quot;&gt;&#10;                            &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M19 9l-7 7-7-7&quot; /&gt;&#10;                        &lt;/svg&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;!-- Dropdown Menu --&gt;&#10;                    &lt;div class=&quot;user-dropdown&quot; id=&quot;userDropdown&quot;&gt;&#10;                        &lt;div class=&quot;dropdown-header&quot;&gt;&#10;                            &lt;div class=&quot;dropdown-user-info&quot;&gt;&#10;                                &lt;div class=&quot;dropdown-avatar&quot;&gt;&#10;                                    &lt;c:choose&gt;&#10;                                        &lt;c:when test=&quot;${not empty sessionScope.user.name}&quot;&gt;&#10;                                            ${fn:toUpperCase(fn:substring(sessionScope.user.name, 0, 1))}&#10;                                        &lt;/c:when&gt;&#10;                                        &lt;c:otherwise&gt;?&lt;/c:otherwise&gt;&#10;                                    &lt;/c:choose&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;div class=&quot;dropdown-user-details&quot;&gt;&#10;                                    &lt;div class=&quot;user-name&quot;&gt;${sessionScope.user.name}&lt;/div&gt;&#10;                                    &lt;div class=&quot;user-email&quot;&gt;${sessionScope.user.email}&lt;/div&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;div class=&quot;dropdown-menu&quot;&gt;&#10;                            &lt;a href=&quot;${pageContext.request.contextPath}/patient/profile&quot; class=&quot;dropdown-item&quot;&gt;&#10;                                &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; fill=&quot;none&quot; viewBox=&quot;0 0 24 24&quot; stroke=&quot;currentColor&quot;&gt;&#10;                                    &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z&quot; /&gt;&#10;                                &lt;/svg&gt;&#10;                                Mon Profil&#10;                            &lt;/a&gt;&#10;&#10;                            &lt;a href=&quot;${pageContext.request.contextPath}/patient/appointments&quot; class=&quot;dropdown-item&quot;&gt;&#10;                                &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; fill=&quot;none&quot; viewBox=&quot;0 0 24 24&quot; stroke=&quot;currentColor&quot;&gt;&#10;                                    &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h4&quot;&gt;&lt;/path&gt;&#10;                                &lt;/svg&gt;&#10;                                Mes Rendez-vous&#10;                            &lt;/a&gt;&#10;&#10;                            &lt;a href=&quot;${pageContext.request.contextPath}/patient/history&quot; class=&quot;dropdown-item&quot;&gt;&#10;                                &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; fill=&quot;none&quot; viewBox=&quot;0 0 24 24&quot; stroke=&quot;currentColor&quot;&gt;&#10;                                    &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z&quot; /&gt;&#10;                                &lt;/svg&gt;&#10;                                Historique&#10;                            &lt;/a&gt;&#10;&#10;                            &lt;a href=&quot;${pageContext.request.contextPath}/patient/settings&quot; class=&quot;dropdown-item&quot;&gt;&#10;                                &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; fill=&quot;none&quot; viewBox=&quot;0 0 24 24&quot; stroke=&quot;currentColor&quot;&gt;&#10;                                    &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z&quot; /&gt;&#10;                                    &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M15 12a3 3 0 11-6 0 3 3 0 016 0z&quot; /&gt;&#10;                                &lt;/svg&gt;&#10;                                Paramètres&#10;                            &lt;/a&gt;&#10;&#10;                            &lt;div class=&quot;dropdown-divider&quot;&gt;&lt;/div&gt;&#10;&#10;                            &lt;a href=&quot;${pageContext.request.contextPath}/auth/logout&quot; class=&quot;dropdown-item danger&quot;&gt;&#10;                                &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; fill=&quot;none&quot; viewBox=&quot;0 0 24 24&quot; stroke=&quot;currentColor&quot;&gt;&#10;                                    &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1&quot; /&gt;&#10;                                &lt;/svg&gt;&#10;                                Déconnexion&#10;                            &lt;/a&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/header&gt;&#10;&#10;        &lt;!-- Main Container --&gt;&#10;        &lt;div class=&quot;main-container&quot;&gt;&#10;            &lt;!-- Welcome Section --&gt;&#10;            &lt;div class=&quot;welcome-section&quot;&gt;&#10;                &lt;div class=&quot;welcome-content&quot;&gt;&#10;                    &lt;h1&gt; Bienvenue, ${sessionScope.user.name}!&lt;/h1&gt;&#10;                    &lt;p&gt;Gérez vos rendez-vous médicaux en toute simplicité&lt;/p&gt;&#10;                &lt;/div&gt;&#10;                &lt;button class=&quot;btn btn-primary btn-large&quot; onclick=&quot;openBookingModal()&quot;&gt;&#10;                    &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;24&quot; height=&quot;24&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot;&gt;&#10;                        &lt;rect x=&quot;3&quot; y=&quot;4&quot; width=&quot;18&quot; height=&quot;18&quot; rx=&quot;2&quot; ry=&quot;2&quot;&gt;&lt;/rect&gt;&#10;                        &lt;line x1=&quot;16&quot; y1=&quot;2&quot; x2=&quot;16&quot; y2=&quot;6&quot;&gt;&lt;/line&gt;&#10;                        &lt;line x1=&quot;8&quot; y1=&quot;2&quot; x2=&quot;8&quot; y2=&quot;6&quot;&gt;&lt;/line&gt;&#10;                        &lt;line x1=&quot;3&quot; y1=&quot;10&quot; x2=&quot;21&quot; y2=&quot;10&quot;&gt;&lt;/line&gt;&#10;                        &lt;line x1=&quot;12&quot; y1=&quot;14&quot; x2=&quot;12&quot; y2=&quot;18&quot;&gt;&lt;/line&gt;&#10;                        &lt;line x1=&quot;10&quot; y1=&quot;16&quot; x2=&quot;14&quot; y2=&quot;16&quot;&gt;&lt;/line&gt;&#10;                    &lt;/svg&gt;&#10;                    Nouveau Rendez-vous&#10;                &lt;/button&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;!-- Search Doctors Section --&gt;&#10;            &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 2rem;&quot;&gt;&#10;                &lt;div class=&quot;card-header&quot;&gt;&#10;                    &lt;div class=&quot;card-icon&quot;&gt;&#10;                        &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;30&quot; height=&quot;30&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;white&quot; stroke-width=&quot;2&quot;&gt;&#10;                            &lt;circle cx=&quot;11&quot; cy=&quot;11&quot; r=&quot;8&quot;&gt;&lt;/circle&gt;&#10;                            &lt;path d=&quot;m21 21-4.35-4.35&quot;&gt;&lt;/path&gt;&#10;                        &lt;/svg&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;h2 class=&quot;card-title&quot;&gt;Rechercher un Médecin&lt;/h2&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;form action=&quot;${pageContext.request.contextPath}/patient&quot; method=&quot;get&quot; style=&quot;margin-bottom: 1.5rem;&quot;&gt;&#10;                    &lt;div style=&quot;display: flex; gap: 1rem;&quot;&gt;&#10;                        &lt;input type=&quot;text&quot;&#10;                               name=&quot;search&quot;&#10;                               class=&quot;form-input&quot;&#10;                               placeholder=&quot;Rechercher par nom de médecin ou spécialité...&quot;&#10;                               value=&quot;${searchTerm}&quot;&#10;                               style=&quot;flex: 1;&quot;&gt;&#10;                        &lt;button type=&quot;submit&quot; class=&quot;btn btn-primary&quot;&gt;&#10;                            &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;20&quot; height=&quot;20&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot;&gt;&#10;                                &lt;circle cx=&quot;11&quot; cy=&quot;11&quot; r=&quot;8&quot;&gt;&lt;/circle&gt;&#10;                                &lt;path d=&quot;m21 21-4.35-4.35&quot;&gt;&lt;/path&gt;&#10;                            &lt;/svg&gt;&#10;                            Rechercher&#10;                        &lt;/button&gt;&#10;                        &lt;c:if test=&quot;${not empty searchTerm}&quot;&gt;&#10;                            &lt;a href=&quot;${pageContext.request.contextPath}/patient&quot; class=&quot;btn btn-outline&quot;&gt;&#10;                                &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;20&quot; height=&quot;20&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot;&gt;&#10;                                    &lt;line x1=&quot;18&quot; y1=&quot;6&quot; x2=&quot;6&quot; y2=&quot;18&quot;&gt;&lt;/line&gt;&#10;                                    &lt;line x1=&quot;6&quot; y1=&quot;6&quot; x2=&quot;18&quot; y2=&quot;18&quot;&gt;&lt;/line&gt;&#10;                                &lt;/svg&gt;&#10;                                Réinitialiser&#10;                            &lt;/a&gt;&#10;                        &lt;/c:if&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/form&gt;&#10;&#10;                &lt;c:if test=&quot;${not empty searchTerm}&quot;&gt;&#10;                    &lt;div class=&quot;alert alert-success&quot; style=&quot;margin-bottom: 1rem;&quot;&gt;&#10;                        &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;24&quot; height=&quot;24&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot;&gt;&#10;                            &lt;path d=&quot;M22 11.08V12a10 10 0 1 1-5.93-9.14&quot;&gt;&lt;/path&gt;&#10;                            &lt;polyline points=&quot;22 4 12 14.01 9 11.01&quot;&gt;&lt;/polyline&gt;&#10;                        &lt;/svg&gt;&#10;                        &lt;span&gt;${doctors.size()} résultat(s) trouvé(s) pour &quot;${searchTerm}&quot;&lt;/span&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/c:if&gt;&#10;&#10;                &lt;!-- Search Doctors Section list --&gt;&#10;                &lt;div class=&quot;appointments-list&quot; style=&quot;max-height: 500px;&quot;&gt;&#10;                    &lt;c:choose&gt;&#10;                        &lt;c:when test=&quot;${empty doctors}&quot;&gt;&#10;                            &lt;div class=&quot;empty-state&quot;&gt;&#10;                                &lt;svg class=&quot;empty-icon&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; fill=&quot;none&quot; viewBox=&quot;0 0 24 24&quot; stroke=&quot;currentColor&quot;&gt;&#10;                                    &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z&quot; /&gt;&#10;                                &lt;/svg&gt;&#10;                                &lt;p class=&quot;empty-text&quot;&gt;&#10;                                    &lt;c:choose&gt;&#10;                                        &lt;c:when test=&quot;${not empty searchTerm}&quot;&gt;&#10;                                            Aucun médecin trouvé pour &quot;${searchTerm}&quot;.&lt;br&gt;Essayez avec un autre terme de recherche.&#10;                                        &lt;/c:when&gt;&#10;                                        &lt;c:otherwise&gt;&#10;                                            Aucun médecin disponible pour le moment.&#10;                                        &lt;/c:otherwise&gt;&#10;                                    &lt;/c:choose&gt;&#10;                                &lt;/p&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/c:when&gt;&#10;                        &lt;c:otherwise&gt;&#10;                            &lt;c:forEach var=&quot;doctor&quot; items=&quot;${doctors}&quot;&gt;&#10;                                &lt;div class=&quot;appointment-item&quot;&gt;&#10;                                    &lt;div style=&quot;display: flex; align-items: center; gap: 1.5rem; margin-bottom: 1rem;&quot;&gt;&#10;                                        &lt;div class=&quot;user-avatar&quot; style=&quot;width: 60px; height: 60px; font-size: 1.5rem;&quot;&gt;&#10;                                            &lt;c:choose&gt;&#10;                                                &lt;c:when test=&quot;${not empty doctor.user.name}&quot;&gt;&#10;                                                    ${fn:toUpperCase(fn:substring(doctor.user.name, 0, 1))}&#10;                                                &lt;/c:when&gt;&#10;                                                &lt;c:otherwise&gt;?&lt;/c:otherwise&gt;&#10;                                            &lt;/c:choose&gt;&#10;                                        &lt;/div&gt;&#10;                                        &lt;div style=&quot;flex: 1;&quot;&gt;&#10;                                            &lt;h3 style=&quot;font-size: 1.25rem; font-weight: 700; color: var(--text); margin-bottom: 0.25rem;&quot;&gt;&#10;                                                Dr. ${doctor.user.name}&#10;                                            &lt;/h3&gt;&#10;                                            &lt;p style=&quot;color: var(--text-light); font-size: 0.95rem;&quot;&gt;&#10;                                                ${doctor.titre != null ? doctor.titre : 'Médecin'}&#10;                                            &lt;/p&gt;&#10;                                        &lt;/div&gt;&#10;                                    &lt;/div&gt;&#10;&#10;                                    &lt;div class=&quot;appointment-info&quot; style=&quot;margin-bottom: 1rem;&quot;&gt;&#10;                                        &lt;div class=&quot;info-item&quot;&gt;&#10;                                            &lt;!-- spécialité --&gt;&#10;                                            &lt;svg class=&quot;info-icon&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; fill=&quot;none&quot; viewBox=&quot;0 0 24 24&quot; stroke=&quot;currentColor&quot;&gt;&#10;                                                &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M19.428 15.428a2 2 0 00-1.022-.547l-2.387-.477a6 6 0 00-3.86.517l-.318.158a6 6 0 01-3.86.517L6.05 15.21a2 2 0 00-1.806.547M8 4h8l-1 1v5.172a2 2 0 00.586 1.414l5 5c1.26 1.26.367 3.414-1.415 3.414H4.828c-1.782 0-2.674-2.154-1.414-3.414l5-5A2 2 0 009 10.172V5L8 4z&quot; /&gt;&#10;                                            &lt;/svg&gt;&#10;                                            &lt;span&gt;&lt;strong&gt;${doctor.specialite.name}&lt;/strong&gt;&lt;/span&gt;&#10;                                        &lt;/div&gt;&#10;                                        &lt;div class=&quot;info-item&quot;&gt;&#10;                                            &lt;!-- matricule --&gt;&#10;                                            &lt;svg class=&quot;info-icon&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; fill=&quot;none&quot; viewBox=&quot;0 0 24 24&quot; stroke=&quot;currentColor&quot;&gt;&#10;                                                &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z&quot; /&gt;&#10;                                            &lt;/svg&gt;&#10;                                            &lt;span&gt;Matricule: ${doctor.matricule}&lt;/span&gt;&#10;                                        &lt;/div&gt;&#10;                                        &lt;div class=&quot;info-item&quot;&gt;&#10;                                            &lt;!-- email --&gt;&#10;                                            &lt;svg class=&quot;info-icon&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; fill=&quot;none&quot; viewBox=&quot;0 0 24 24&quot; stroke=&quot;currentColor&quot;&gt;&#10;                                                &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h4&quot;&gt;&lt;/path&gt;&#10;                                            &lt;/svg&gt;&#10;                                            &lt;span&gt;${doctor.user.email}&lt;/span&gt;&#10;                                        &lt;/div&gt;&#10;                                        &lt;!-- Suppression du téléphone: propriété inexistante sur User --&gt;&#10;                                    &lt;/div&gt;&#10;&#10;                                    &lt;div class=&quot;appointment-actions&quot;&gt;&#10;                                        &lt;a class=&quot;btn btn-primary&quot; href=&quot;${pageContext.request.contextPath}/patient/doctor?id=${doctor.id}&quot;&gt;&#10;                                            &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;20&quot; height=&quot;20&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot;&gt;&#10;                                                &lt;rect x=&quot;3&quot; y=&quot;4&quot; width=&quot;18&quot; height=&quot;18&quot; rx=&quot;2&quot; ry=&quot;2&quot;&gt;&lt;/rect&gt;&#10;                                                &lt;line x1=&quot;16&quot; y1=&quot;2&quot; x2=&quot;16&quot; y2=&quot;6&quot;&gt;&lt;/line&gt;&#10;                                                &lt;line x1=&quot;8&quot; y1=&quot;2&quot; x2=&quot;8&quot; y2=&quot;6&quot;&gt;&lt;/line&gt;&#10;                                                &lt;line x1=&quot;3&quot; y1=&quot;10&quot; x2=&quot;21&quot; y2=&quot;10&quot;&gt;&lt;/line&gt;&#10;                                            &lt;/svg&gt;&#10;                                            Voir disponibilités&#10;                                        &lt;/a&gt;&#10;                                    &lt;/div&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/c:forEach&gt;&#10;                        &lt;/c:otherwise&gt;&#10;                    &lt;/c:choose&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;!-- Dashboard Grid --&gt;&#10;            &lt;div class=&quot;dashboard-grid&quot;&gt;&#10;                &lt;!-- Appointments List Card --&gt;&#10;                &lt;div class=&quot;card&quot; style=&quot;grid-column: 1 / -1;&quot;&gt;&#10;                    &lt;div class=&quot;card-header&quot;&gt;&#10;                        &lt;div class=&quot;card-icon&quot;&gt;&#10;                            &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;30&quot; height=&quot;30&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;white&quot; stroke-width=&quot;2&quot;&gt;&#10;                                &lt;rect x=&quot;3&quot; y=&quot;4&quot; width=&quot;18&quot; height=&quot;18&quot; rx=&quot;2&quot; ry=&quot;2&quot;&gt;&lt;/rect&gt;&#10;                                &lt;line x1=&quot;16&quot; y1=&quot;2&quot; x2=&quot;16&quot; y2=&quot;6&quot;&gt;&lt;/line&gt;&#10;                                &lt;line x1=&quot;8&quot; y1=&quot;2&quot; x2=&quot;8&quot; y2=&quot;6&quot;&gt;&lt;/line&gt;&#10;                                &lt;line x1=&quot;3&quot; y1=&quot;10&quot; x2=&quot;21&quot; y2=&quot;10&quot;&gt;&lt;/line&gt;&#10;                            &lt;/svg&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;h2 class=&quot;card-title&quot;&gt;Mes Rendez-vous&lt;/h2&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;div class=&quot;appointments-list&quot;&gt;&#10;                        &lt;c:choose&gt;&#10;                            &lt;c:when test=&quot;${empty appointments}&quot;&gt;&#10;                                &lt;div class=&quot;empty-state&quot;&gt;&#10;                                    &lt;svg class=&quot;empty-icon&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; fill=&quot;none&quot; viewBox=&quot;0 0 24 24&quot; stroke=&quot;currentColor&quot;&gt;&#10;                                        &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z&quot; /&gt;&#10;                                    &lt;/svg&gt;&#10;                                    &lt;p class=&quot;empty-text&quot;&gt;Vous n'avez aucun rendez-vous pour le moment.&lt;br&gt;Cliquez sur &quot;Nouveau Rendez-vous&quot; pour en créer un.&lt;/p&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/c:when&gt;&#10;                            &lt;c:otherwise&gt;&#10;                                &lt;c:forEach var=&quot;appointment&quot; items=&quot;${appointments}&quot;&gt;&#10;                                    &lt;div class=&quot;appointment-item&quot;&gt;&#10;                                        &lt;div class=&quot;appointment-header&quot;&gt;&#10;                                            &lt;div class=&quot;appointment-date&quot;&gt;&#10;                                                &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;24&quot; height=&quot;24&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot;&gt;&#10;                                                    &lt;rect x=&quot;3&quot; y=&quot;4&quot; width=&quot;18&quot; height=&quot;18&quot; rx=&quot;2&quot; ry=&quot;2&quot;&gt;&lt;/rect&gt;&#10;                                                    &lt;line x1=&quot;16&quot; y1=&quot;2&quot; x2=&quot;16&quot; y2=&quot;6&quot;&gt;&lt;/line&gt;&#10;                                                    &lt;line x1=&quot;8&quot; y1=&quot;2&quot; x2=&quot;8&quot; y2=&quot;6&quot;&gt;&lt;/line&gt;&#10;                                                    &lt;line x1=&quot;3&quot; y1=&quot;10&quot; x2=&quot;21&quot; y2=&quot;10&quot;&gt;&lt;/line&gt;&#10;                                                &lt;/svg&gt;&#10;                                                &lt;fmt:formatDate value=&quot;${appointment.date}&quot; pattern=&quot;dd/MM/yyyy&quot; /&gt;&#10;                                            &lt;/div&gt;&#10;                                            &lt;span class=&quot;appointment-status status-${appointment.statut.toString().toLowerCase()}&quot;&gt;&#10;                                                ${appointment.statut}&#10;                                            &lt;/span&gt;&#10;                                        &lt;/div&gt;&#10;&#10;                                        &lt;div class=&quot;appointment-info&quot;&gt;&#10;                                            &lt;div class=&quot;info-item&quot;&gt;&#10;                                                &lt;svg class=&quot;info-icon&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; fill=&quot;none&quot; viewBox=&quot;0 0 24 24&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot;&gt;&#10;                                                    &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z&quot; /&gt;&#10;                                                &lt;/svg&gt;&#10;                                                &lt;span&gt;&lt;fmt:formatDate value=&quot;${appointment.hour}&quot; pattern=&quot;HH:mm&quot; /&gt;&lt;/span&gt;&#10;                                            &lt;/div&gt;&#10;                                            &lt;div class=&quot;info-item&quot;&gt;&#10;                                                &lt;svg class=&quot;info-icon&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; fill=&quot;none&quot; viewBox=&quot;0 0 24 24&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot;&gt;&#10;                                                    &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z&quot; /&gt;&#10;                                                &lt;/svg&gt;&#10;                                                &lt;span&gt;Dr. ${appointment.doctor.user.name}&lt;/span&gt;&#10;                                            &lt;/div&gt;&#10;                                            &lt;div class=&quot;info-item&quot;&gt;&#10;                                                &lt;svg class=&quot;info-icon&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; fill=&quot;none&quot; viewBox=&quot;0 0 24 24&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot;&gt;&#10;                                                    &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M19.428 15.428a2 2 0 00-1.022-.547l-2.387-.477a6 6 0 00-3.86.517l-.318.158a6 6 0 01-3.86.517L6.05 15.21a2 2 0 00-1.806.547M8 4h8l-1 1v5.172a2 2 0 00.586 1.414l5 5c1.26 1.26.367 3.414-1.415 3.414H4.828c-1.782 0-2.674-2.154-1.414-3.414l5-5A2 2 0 009 10.172V5L8 4z&quot; /&gt;&#10;                                                &lt;/svg&gt;&#10;                                                &lt;span&gt;${appointment.doctor.specialite.name}&lt;/span&gt;&#10;                                            &lt;/div&gt;&#10;                                            &lt;div class=&quot;info-item&quot;&gt;&#10;                                                &lt;svg class=&quot;info-icon&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; fill=&quot;none&quot; viewBox=&quot;0 0 24 24&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot;&gt;&#10;                                                    &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 0 1 0 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z&quot; /&gt;&#10;                                                &lt;/svg&gt;&#10;                                                &lt;span&gt;${appointment.type}&lt;/span&gt;&#10;                                            &lt;/div&gt;&#10;                                        &lt;/div&gt;&#10;&#10;                                        &lt;c:if test=&quot;${appointment.statut == 'PLANNED'}&quot;&gt;&#10;                                            &lt;div class=&quot;appointment-actions&quot;&gt;&#10;                                                &lt;button class=&quot;btn btn-danger btn-small&quot; onclick=&quot;confirmCancel('${appointment.id}', '&lt;fmt:formatDate value=&quot;${appointment.date}&quot; pattern=&quot;dd/MM/yyyy&quot; /&gt;', '&lt;fmt:formatDate value=&quot;${appointment.hour}&quot; pattern=&quot;HH:mm&quot; /&gt;')&quot;&gt;&#10;                                                    &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot;&gt;&#10;                                                        &lt;line x1=&quot;18&quot; y1=&quot;6&quot; x2=&quot;6&quot; y2=&quot;18&quot;&gt;&lt;/line&gt;&#10;                                                        &lt;line x1=&quot;6&quot; y1=&quot;6&quot; x2=&quot;18&quot; y2=&quot;18&quot;&gt;&lt;/line&gt;&#10;                                                    &lt;/svg&gt;&#10;                                                    Annuler&#10;                                                &lt;/button&gt;&#10;                                            &lt;/div&gt;&#10;                                        &lt;/c:if&gt;&#10;                                    &lt;/div&gt;&#10;                                &lt;/c:forEach&gt;&#10;                            &lt;/c:otherwise&gt;&#10;                        &lt;/c:choose&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;!-- Booking Modal --&gt;&#10;        &lt;div id=&quot;bookingModal&quot; class=&quot;modal&quot;&gt;&#10;            &lt;div class=&quot;modal-content&quot;&gt;&#10;                &lt;div class=&quot;modal-header&quot;&gt;&#10;                    &lt;h3 class=&quot;modal-title&quot;&gt;Réserver un Rendez-vous&lt;/h3&gt;&#10;                    &lt;button class=&quot;modal-close&quot; onclick=&quot;closeBookingModal()&quot;&gt;&#10;                        &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;20&quot; height=&quot;20&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot;&gt;&#10;                            &lt;line x1=&quot;18&quot; y1=&quot;6&quot; x2=&quot;6&quot; y2=&quot;18&quot;&gt;&lt;/line&gt;&#10;                            &lt;line x1=&quot;6&quot; y1=&quot;6&quot; x2=&quot;18&quot; y2=&quot;18&quot;&gt;&lt;/line&gt;&#10;                        &lt;/svg&gt;&#10;                    &lt;/button&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;form action=&quot;${pageContext.request.contextPath}/patient/appointments/book&quot; method=&quot;post&quot;&gt;&#10;                    &lt;div class=&quot;form-group&quot;&gt;&#10;                        &lt;label class=&quot;form-label&quot; for=&quot;speciality&quot;&gt;Spécialité&lt;/label&gt;&#10;                        &lt;select class=&quot;form-select&quot; id=&quot;speciality&quot; name=&quot;specialityId&quot; required onchange=&quot;loadDoctors(this.value)&quot;&gt;&#10;                            &lt;option value=&quot;&quot;&gt;Choisir une spécialité&lt;/option&gt;&#10;                            &lt;c:forEach var=&quot;speciality&quot; items=&quot;${specialties}&quot;&gt;&#10;                                &lt;option value=&quot;${speciality.id}&quot;&gt;${speciality.name}&lt;/option&gt;&#10;                            &lt;/c:forEach&gt;&#10;                        &lt;/select&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;div class=&quot;form-group&quot;&gt;&#10;                        &lt;label class=&quot;form-label&quot; for=&quot;doctor&quot;&gt;Docteur&lt;/label&gt;&#10;                        &lt;select class=&quot;form-select&quot; id=&quot;doctor&quot; name=&quot;doctorId&quot; required disabled&gt;&#10;                            &lt;option value=&quot;&quot;&gt;Choisir d'abord une spécialité&lt;/option&gt;&#10;                        &lt;/select&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;div class=&quot;form-group&quot;&gt;&#10;                        &lt;label class=&quot;form-label&quot; for=&quot;date&quot;&gt;Date&lt;/label&gt;&#10;                        &lt;input type=&quot;date&quot; class=&quot;form-input&quot; id=&quot;date&quot; name=&quot;date&quot; required&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;div class=&quot;form-group&quot;&gt;&#10;                        &lt;label class=&quot;form-label&quot; for=&quot;time&quot;&gt;Heure&lt;/label&gt;&#10;                        &lt;select class=&quot;form-select&quot; id=&quot;time&quot; name=&quot;time&quot; required&gt;&#10;                            &lt;option value=&quot;&quot;&gt;Choisir une heure&lt;/option&gt;&#10;                            &lt;option value=&quot;09:00&quot;&gt;09:00&lt;/option&gt;&#10;                            &lt;option value=&quot;09:30&quot;&gt;09:30&lt;/option&gt;&#10;                            &lt;option value=&quot;10:00&quot;&gt;10:00&lt;/option&gt;&#10;                            &lt;option value=&quot;10:30&quot;&gt;10:30&lt;/option&gt;&#10;                            &lt;option value=&quot;11:00&quot;&gt;11:00&lt;/option&gt;&#10;                            &lt;option value=&quot;11:30&quot;&gt;11:30&lt;/option&gt;&#10;                            &lt;option value=&quot;14:00&quot;&gt;14:00&lt;/option&gt;&#10;                            &lt;option value=&quot;14:30&quot;&gt;14:30&lt;/option&gt;&#10;                            &lt;option value=&quot;15:00&quot;&gt;15:00&lt;/option&gt;&#10;                            &lt;option value=&quot;15:30&quot;&gt;15:30&lt;/option&gt;&#10;                            &lt;option value=&quot;16:00&quot;&gt;16:00&lt;/option&gt;&#10;                            &lt;option value=&quot;16:30&quot;&gt;16:30&lt;/option&gt;&#10;                            &lt;option value=&quot;17:00&quot;&gt;17:00&lt;/option&gt;&#10;                        &lt;/select&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;div class=&quot;form-group&quot;&gt;&#10;                        &lt;label class=&quot;form-label&quot; for=&quot;type&quot;&gt;Type de consultation&lt;/label&gt;&#10;                        &lt;select class=&quot;form-select&quot; id=&quot;type&quot; name=&quot;type&quot; required&gt;&#10;                            &lt;option value=&quot;&quot;&gt;Choisir un type&lt;/option&gt;&#10;                            &lt;option value=&quot;CONSULTATION&quot;&gt;Consultation&lt;/option&gt;&#10;                            &lt;option value=&quot;CONTROLE&quot;&gt;Contrôle&lt;/option&gt;&#10;                            &lt;option value=&quot;URGENCE&quot;&gt;Urgence&lt;/option&gt;&#10;                        &lt;/select&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;button type=&quot;submit&quot; class=&quot;btn btn-primary&quot; style=&quot;width: 100%;&quot;&gt;&#10;                        &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;20&quot; height=&quot;20&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot;&gt;&#10;                            &lt;path d=&quot;M22 11.08V12a10 10 0 1 1-5.93-9.14&quot;&gt;&lt;/path&gt;&#10;                            &lt;polyline points=&quot;22 4 12 14.01 9 11.01&quot;&gt;&lt;/polyline&gt;&#10;                        &lt;/svg&gt;&#10;                        Confirmer le Rendez-vous&#10;                    &lt;/button&gt;&#10;                &lt;/form&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;!-- Cancel Confirmation Modal --&gt;&#10;        &lt;div id=&quot;cancelModal&quot; class=&quot;modal&quot;&gt;&#10;            &lt;div class=&quot;modal-content&quot;&gt;&#10;                &lt;div class=&quot;modal-header&quot;&gt;&#10;                    &lt;h3 class=&quot;modal-title&quot;&gt;Annuler le Rendez-vous&lt;/h3&gt;&#10;                    &lt;button class=&quot;modal-close&quot; onclick=&quot;closeCancelModal()&quot;&gt;&#10;                        &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;20&quot; height=&quot;20&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot;&gt;&#10;                            &lt;line x1=&quot;18&quot; y1=&quot;6&quot; x2=&quot;6&quot; y2=&quot;18&quot;&gt;&lt;/line&gt;&#10;                            &lt;line x1=&quot;6&quot; y1=&quot;6&quot; x2=&quot;18&quot; y2=&quot;18&quot;&gt;&lt;/line&gt;&#10;                        &lt;/svg&gt;&#10;                    &lt;/button&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div class=&quot;alert alert-warning&quot;&gt;&#10;                    &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;24&quot; height=&quot;24&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot;&gt;&#10;                        &lt;path d=&quot;M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z&quot;&gt;&lt;/path&gt;&#10;                        &lt;line x1=&quot;12&quot; y1=&quot;9&quot; x2=&quot;12&quot; y2=&quot;13&quot;&gt;&lt;/line&gt;&#10;                        &lt;line x1=&quot;12&quot; y1=&quot;17&quot; x2=&quot;12.01&quot; y2=&quot;17&quot;&gt;&lt;/line&gt;&#10;                    &lt;/svg&gt;&#10;                    &lt;span&gt;Les annulations doivent être effectuées au moins 12h avant le rendez-vous.&lt;/span&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;p style=&quot;color: var(--text); margin-bottom: 1.5rem;&quot;&gt;&#10;                    Êtes-vous sûr de vouloir annuler votre rendez-vous du &lt;strong id=&quot;cancelDate&quot;&gt;&lt;/strong&gt; à &lt;strong id=&quot;cancelTime&quot;&gt;&lt;/strong&gt; ?&#10;                &lt;/p&gt;&#10;&#10;                &lt;form id=&quot;cancelForm&quot; method=&quot;post&quot;&gt;&#10;                    &lt;input type=&quot;hidden&quot; id=&quot;appointmentIdToCancel&quot; name=&quot;appointmentId&quot;&gt;&#10;                    &lt;div style=&quot;display: flex; gap: 1rem;&quot;&gt;&#10;                        &lt;button type=&quot;button&quot; class=&quot;btn btn-outline&quot; style=&quot;flex: 1;&quot; onclick=&quot;closeCancelModal()&quot;&gt;&#10;                            Non, garder&#10;                        &lt;/button&gt;&#10;                        &lt;button type=&quot;submit&quot; class=&quot;btn btn-danger&quot; style=&quot;flex: 1;&quot;&gt;&#10;                            &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;20&quot; height=&quot;20&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot;&gt;&#10;                                &lt;line x1=&quot;18&quot; y1=&quot;6&quot; x2=&quot;6&quot; y2=&quot;18&quot;&gt;&lt;/line&gt;&#10;                                &lt;line x1=&quot;6&quot; y1=&quot;6&quot; x2=&quot;18&quot; y2=&quot;18&quot;&gt;&lt;/line&gt;&#10;                            &lt;/svg&gt;&#10;                            Oui, annuler&#10;                        &lt;/button&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/form&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;script&gt;&#10;            // Modal Functions&#10;            function openBookingModal() {&#10;                document.getElementById('bookingModal').classList.add('active');&#10;            }&#10;&#10;            function closeBookingModal() {&#10;                document.getElementById('bookingModal').classList.remove('active');&#10;            }&#10;&#10;            function confirmCancel(id, date, time) {&#10;                document.getElementById('appointmentIdToCancel').value = id;&#10;                document.getElementById('cancelDate').textContent = date;&#10;                document.getElementById('cancelTime').textContent = time;&#10;                document.getElementById('cancelForm').action = '${pageContext.request.contextPath}/patient/appointments/cancel';&#10;                document.getElementById('cancelModal').classList.add('active');&#10;            }&#10;&#10;            function closeCancelModal() {&#10;                document.getElementById('cancelModal').classList.remove('active');&#10;            }&#10;&#10;            // Load doctors based on speciality&#10;            function loadDoctors(specialityId) {&#10;                const doctorSelect = document.getElementById('doctor');&#10;&#10;                if (!specialityId) {&#10;                    doctorSelect.disabled = true;&#10;                    doctorSelect.innerHTML = '&lt;option value=&quot;&quot;&gt;Choisir d\'abord une spécialité&lt;/option&gt;';&#10;                    return;&#10;                }&#10;&#10;                // AJAX call to get doctors by speciality&#10;                fetch('${pageContext.request.contextPath}/patient/doctors?specialityId=' + specialityId)&#10;                    .then(response =&gt; response.json())&#10;                    .then(doctors =&gt; {&#10;                        doctorSelect.disabled = false;&#10;                        doctorSelect.innerHTML = '&lt;option value=&quot;&quot;&gt;Choisir un docteur&lt;/option&gt;';&#10;                        doctors.forEach(doctor =&gt; {&#10;                            const option = document.createElement('option');&#10;                            option.value = doctor.id;&#10;                            option.textContent = 'Dr. ' + doctor.user.name;&#10;                            doctorSelect.appendChild(option);&#10;                        });&#10;                    })&#10;                    .catch(error =&gt; {&#10;                        console.error('Error loading doctors:', error);&#10;                        doctorSelect.innerHTML = '&lt;option value=&quot;&quot;&gt;Erreur de chargement&lt;/option&gt;';&#10;                    });&#10;            }&#10;&#10;            // Open booking modal with pre-selected doctor&#10;            function openBookingModalWithDoctor(doctorId, doctorName, specialityId) {&#10;                openBookingModal();&#10;&#10;                // Pre-select speciality&#10;                const specialitySelect = document.getElementById('speciality');&#10;                specialitySelect.value = specialityId;&#10;&#10;                // Load doctors for this speciality and pre-select the doctor&#10;                loadDoctors(specialityId);&#10;&#10;                // Wait a bit for doctors to load, then select the doctor&#10;                setTimeout(function() {&#10;                    const doctorSelect = document.getElementById('doctor');&#10;                    doctorSelect.value = doctorId;&#10;                }, 500);&#10;            }&#10;&#10;            // Close modals when clicking outside&#10;            window.onclick = function(event) {&#10;                const bookingModal = document.getElementById('bookingModal');&#10;                const cancelModal = document.getElementById('cancelModal');&#10;&#10;                if (event.target === bookingModal) {&#10;                    closeBookingModal();&#10;                }&#10;                if (event.target === cancelModal) {&#10;                    closeCancelModal();&#10;                }&#10;            }&#10;&#10;            // Set minimum date to today&#10;            document.addEventListener('DOMContentLoaded', function() {&#10;                const dateInput = document.getElementById('date');&#10;                if (dateInput) {&#10;                    const today = new Date().toISOString().split('T')[0];&#10;                    dateInput.setAttribute('min', today);&#10;                }&#10;            });&#10;&#10;            // Toggle user menu&#10;            function toggleUserMenu() {&#10;                const userDropdown = document.getElementById('userDropdown');&#10;                const userMenuBtn = document.querySelector('.user-menu-btn');&#10;                userDropdown.classList.toggle('active');&#10;                userMenuBtn.classList.toggle('active');&#10;            }&#10;&#10;            // Close user menu when clicking outside&#10;            document.addEventListener('click', function(event) {&#10;                const userDropdown = document.getElementById('userDropdown');&#10;                const userMenuBtn = document.querySelector('.user-menu-btn');&#10;&#10;                if (!event.target.closest('.user-section') &amp;&amp; userDropdown.classList.contains('active')) {&#10;                    userDropdown.classList.remove('active');&#10;                    userMenuBtn.classList.remove('active');&#10;                }&#10;            });&#10;        &lt;/script&gt;&#10;    &lt;/body&gt;&#10;    &lt;/html&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/webapp/WEB-INF/view/patient/doctor-availability.jsp">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/webapp/WEB-INF/view/patient/doctor-availability.jsp" />
              <option name="originalContent" value="&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;&#10;&lt;%@ taglib uri=&quot;jakarta.tags.core&quot; prefix=&quot;c&quot; %&gt;&#10;&lt;%@ taglib uri=&quot;jakarta.tags.functions&quot; prefix=&quot;fn&quot; %&gt;&#10;&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;fr&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;title&gt;Disponibilités - ${doctor.user.name}&lt;/title&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot; /&gt;&#10;    &lt;style&gt;&#10;        :root {&#10;            --primary: #6366F1;&#10;            --primary-dark: #4F46E5;&#10;            --primary-light: #818CF8;&#10;            --text: #1F2937;&#10;            --text-light: #6B7280;&#10;            --bg: #F3F4F6;&#10;            --card: #FFFFFF;&#10;            --green: #10B981;&#10;            --danger: #EF4444;&#10;        }&#10;        body { font-family: Inter, system-ui, -apple-system, Segoe UI, Roboto, Arial; background: var(--bg); margin: 0; color: var(--text); }&#10;        .container { max-width: 1100px; margin: 2rem auto; padding: 0 1rem; }&#10;        .header { display:flex; align-items:center; justify-content:space-between; margin-bottom: 1.25rem; }&#10;        .back { text-decoration:none; color: var(--primary-dark); font-weight:600; }&#10;        .card { background: var(--card); border-radius: 16px; box-shadow: 0 6px 18px rgba(0,0,0,.08); padding: 1.25rem; margin-bottom: 1rem; }&#10;        .doctor { display:flex; align-items:center; gap: 1rem; }&#10;        .avatar { width:56px; height:56px; border-radius: 50%; background: linear-gradient(135deg,var(--primary),var(--primary-light)); display:flex; align-items:center; justify-content:center; color:#fff; font-weight:800; font-size:1.2rem; }&#10;        .title { font-size:1.1rem; color: var(--text-light); }&#10;        .grid { display:grid; grid-template-columns: repeat(7, 1fr); gap: .5rem; }&#10;        .dow { text-align:center; font-weight:700; color: var(--text-light); padding:.5rem 0; }&#10;        .day { background:#fff; border: 2px solid #E5E7EB; border-radius:12px; min-height:72px; padding:.5rem; position:relative; cursor: default; }&#10;        .day .num { font-weight:700; }&#10;        .day.available { border-color: var(--green); background: #ECFDF5; cursor: pointer; }&#10;        .day.selected { outline: 3px solid var(--primary-light); }&#10;        .legend { display:flex; align-items:center; gap:.75rem; color: var(--text-light); font-size:.95rem; }&#10;        .legend .box { width:14px; height:14px; border-radius:4px; background:#ECFDF5; border:2px solid var(--green); }&#10;        .cal-header { display:flex; align-items:center; justify-content:space-between; margin-bottom:.75rem; }&#10;        .nav a { text-decoration:none; color:#fff; background: var(--primary); padding:.5rem .75rem; border-radius:8px; font-weight:600; }&#10;        .weekly ul { margin: .5rem 0 0 1rem; color: var(--text-light);}        &#10;        .badge { display:inline-block; padding:.25rem .5rem; border-radius:8px; background: #EEF2FF; color: #3730A3; font-size:.8rem; font-weight:700; }&#10;        .slots { display:flex; flex-wrap: wrap; gap: .5rem; margin-top: .75rem; }&#10;        .slot { padding: .5rem .75rem; border-radius: 10px; border: 2px solid #E5E7EB; background: #fff; cursor: pointer; font-weight: 700; }&#10;        .slot:hover { border-color: var(--primary-light); }&#10;        .slot.selected { background: var(--primary); color: #fff; border-color: var(--primary-dark); }&#10;        .muted { color: var(--text-light); }&#10;        .error { color: var(--danger); }&#10;    &lt;/style&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;&lt;div class=&quot;container&quot;&gt;&#10;    &lt;div class=&quot;header&quot;&gt;&#10;        &lt;a class=&quot;back&quot; href=&quot;${pageContext.request.contextPath}/patient&quot;&gt;&amp;larr; Retour aux recherches&lt;/a&gt;&#10;        &lt;div class=&quot;legend&quot;&gt;&lt;span class=&quot;box&quot;&gt;&lt;/span&gt; Jours disponibles&lt;/div&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;div class=&quot;card doctor&quot;&gt;&#10;        &lt;div class=&quot;avatar&quot;&gt;&#10;            &lt;c:choose&gt;&#10;                &lt;c:when test=&quot;${not empty doctor.user.name}&quot;&gt;${fn:toUpperCase(fn:substring(doctor.user.name,0,1))}&lt;/c:when&gt;&#10;                &lt;c:otherwise&gt;DR&lt;/c:otherwise&gt;&#10;            &lt;/c:choose&gt;&#10;        &lt;/div&gt;&#10;        &lt;div&gt;&#10;            &lt;div style=&quot;font-size:1.25rem; font-weight:800;&quot;&gt;Dr. ${doctor.user.name}&lt;/div&gt;&#10;            &lt;div class=&quot;title&quot;&gt;${doctor.titre != null ? doctor.titre : 'Médecin'} • &lt;strong&gt;${doctor.specialite.name}&lt;/strong&gt;&lt;/div&gt;&#10;            &lt;div style=&quot;margin-top:.35rem;&quot;&gt;&lt;span class=&quot;badge&quot;&gt;Matricule: ${doctor.matricule}&lt;/span&gt;&lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;div class=&quot;card weekly&quot;&gt;&#10;        &lt;div style=&quot;font-weight:800; margin-bottom:.5rem;&quot;&gt;Créneaux hebdomadaires&lt;/div&gt;&#10;        &lt;c:choose&gt;&#10;            &lt;c:when test=&quot;${empty weekly}&quot;&gt;&#10;                &lt;div class=&quot;muted&quot;&gt;Aucune disponibilité renseignée.&lt;/div&gt;&#10;            &lt;/c:when&gt;&#10;            &lt;c:otherwise&gt;&#10;                &lt;ul&gt;&#10;                    &lt;c:forEach var=&quot;e&quot; items=&quot;${weekly}&quot;&gt;&#10;                        &lt;li&gt;&#10;                            &lt;strong&gt;${e.key}&lt;/strong&gt;:&#10;                            &lt;c:forEach var=&quot;label&quot; items=&quot;${e.value}&quot; varStatus=&quot;s&quot;&gt;&#10;                                ${label}&lt;c:if test=&quot;${!s.last}&quot;&gt;, &lt;/c:if&gt;&#10;                            &lt;/c:forEach&gt;&#10;                        &lt;/li&gt;&#10;                    &lt;/c:forEach&gt;&#10;                &lt;/ul&gt;&#10;            &lt;/c:otherwise&gt;&#10;        &lt;/c:choose&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;div class=&quot;card&quot;&gt;&#10;        &lt;div class=&quot;cal-header&quot;&gt;&#10;            &lt;div style=&quot;font-weight:800; font-size:1.1rem;&quot;&gt;${fn:toUpperCase(monthLabel)} ${year}&lt;/div&gt;&#10;            &lt;div class=&quot;nav&quot;&gt;&#10;                &lt;a href=&quot;${pageContext.request.contextPath}/patient/doctor?id=${doctor.id}&amp;year=${prevYear}&amp;month=${prevMonth}&quot;&gt;Précédent&lt;/a&gt;&#10;                &lt;a href=&quot;${pageContext.request.contextPath}/patient/doctor?id=${doctor.id}&amp;year=${nextYear}&amp;month=${nextMonth}&quot; style=&quot;margin-left:.5rem; background: var(--primary-dark);&quot;&gt;Suivant&lt;/a&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;        &lt;div id=&quot;calendar&quot; class=&quot;grid&quot; data-year=&quot;${year}&quot; data-month=&quot;${month}&quot; data-doctor-id=&quot;${doctor.id}&quot; data-context=&quot;${pageContext.request.contextPath}&quot;&gt;&#10;            &lt;div class=&quot;dow&quot;&gt;Lun&lt;/div&gt;&#10;            &lt;div class=&quot;dow&quot;&gt;Mar&lt;/div&gt;&#10;            &lt;div class=&quot;dow&quot;&gt;Mer&lt;/div&gt;&#10;            &lt;div class=&quot;dow&quot;&gt;Jeu&lt;/div&gt;&#10;            &lt;div class=&quot;dow&quot;&gt;Ven&lt;/div&gt;&#10;            &lt;div class=&quot;dow&quot;&gt;Sam&lt;/div&gt;&#10;            &lt;div class=&quot;dow&quot;&gt;Dim&lt;/div&gt;&#10;            &lt;!-- leading blanks --&gt;&#10;            &lt;c:forEach var=&quot;i&quot; begin=&quot;1&quot; end=&quot;${firstDow - 1}&quot;&gt;&#10;                &lt;div&gt;&lt;/div&gt;&#10;            &lt;/c:forEach&gt;&#10;            &lt;!-- days --&gt;&#10;            &lt;c:forEach var=&quot;cell&quot; items=&quot;${dayCells}&quot;&gt;&#10;                &lt;div class=&quot;day ${cell.available ? 'available' : ''}&quot;&#10;                     data-day=&quot;${cell.day}&quot;&#10;                     data-available=&quot;${cell.available}&quot;&gt;&#10;                    &lt;div class=&quot;num&quot;&gt;${cell.day}&lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/c:forEach&gt;&#10;            &lt;!-- trailing blanks to complete last week (optional visual balance) --&gt;&#10;            &lt;c:set var=&quot;totalCells&quot; value=&quot;${(firstDow - 1) + daysInMonth}&quot; /&gt;&#10;            &lt;c:set var=&quot;rem&quot; value=&quot;${totalCells % 7}&quot; /&gt;&#10;            &lt;c:if test=&quot;${rem != 0}&quot;&gt;&#10;                &lt;c:forEach var=&quot;i&quot; begin=&quot;1&quot; end=&quot;${7 - rem}&quot;&gt;&#10;                    &lt;div&gt;&lt;/div&gt;&#10;                &lt;/c:forEach&gt;&#10;            &lt;/c:if&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;div class=&quot;card&quot; id=&quot;slots-card&quot;&gt;&#10;        &lt;div style=&quot;font-weight:800;&quot;&gt;Créneaux disponibles&lt;/div&gt;&#10;        &lt;div id=&quot;selected-date&quot; class=&quot;muted&quot; style=&quot;margin-top:.25rem;&quot;&gt;Sélectionnez un jour disponible pour voir les créneaux.&lt;/div&gt;&#10;        &lt;div id=&quot;slots&quot; class=&quot;slots&quot;&gt;&lt;/div&gt;&#10;        &lt;div id=&quot;slots-message&quot; class=&quot;muted&quot; style=&quot;margin-top:.25rem;&quot;&gt;&lt;/div&gt;&#10;    &lt;/div&gt;&#10;&lt;/div&gt;&#10;&lt;script&gt;&#10;(function() {&#10;    const cal = document.getElementById('calendar');&#10;    if (!cal) return;&#10;    const ctx = cal.dataset.context || '';&#10;    const year = parseInt(cal.dataset.year, 10);&#10;    const month = parseInt(cal.dataset.month, 10);&#10;    const doctorId = cal.dataset.doctorId;&#10;    const slotsEl = document.getElementById('slots');&#10;    const msgEl = document.getElementById('slots-message');&#10;    const selDateEl = document.getElementById('selected-date');&#10;&#10;    function pad(n) { return (n &lt; 10 ? '0' : '') + n; }&#10;&#10;    function setLoading(loading) {&#10;        if (loading) {&#10;            slotsEl.innerHTML = '';&#10;            msgEl.textContent = 'Chargement des créneaux...';&#10;        } else {&#10;            msgEl.textContent = '';&#10;        }&#10;    }&#10;&#10;    function renderSlots(dateIso, slots) {&#10;        slotsEl.innerHTML = '';&#10;        if (!slots || slots.length === 0) {&#10;            msgEl.textContent = 'Aucun créneau disponible pour cette date.';&#10;            return;&#10;        }&#10;        msgEl.textContent = '';&#10;        slots.forEach(time =&gt; {&#10;            const b = document.createElement('button');&#10;            b.type = 'button';&#10;            b.className = 'slot';&#10;            b.textContent = time;&#10;            b.addEventListener('click', () =&gt; {&#10;                // select visual&#10;                document.querySelectorAll('.slot.selected').forEach(el =&gt; el.classList.remove('selected'));&#10;                b.classList.add('selected');&#10;                // Ici, vous pouvez déclencher l’étape de prise de rendez-vous avec dateIso + time&#10;                // Par ex: window.location = `${ctx}/appointment?doctor=${doctorId}&amp;date=${dateIso}&amp;time=${time}`;&#10;            });&#10;            slotsEl.appendChild(b);&#10;        });&#10;    }&#10;&#10;    function selectDay(el) {&#10;        document.querySelectorAll('.day.selected').forEach(d =&gt; d.classList.remove('selected'));&#10;        el.classList.add('selected');&#10;    }&#10;&#10;    cal.addEventListener('click', async (e) =&gt; {&#10;        const dayEl = e.target.closest('.day.available');&#10;        if (!dayEl) return;&#10;        const day = parseInt(dayEl.dataset.day, 10);&#10;        const dateIso = `${year}-${pad(month)}-${pad(day)}`;&#10;        selectDay(dayEl);&#10;        selDateEl.textContent = `Créneaux pour le ${dateIso}`;&#10;        setLoading(true);&#10;        try {&#10;            const url = `${ctx}/patient/doctor?action=slots&amp;id=${doctorId}&amp;date=${dateIso}`;&#10;            const res = await fetch(url, { headers: { 'Accept': 'application/json' } });&#10;            if (!res.ok) {&#10;                const txt = await res.text().catch(()=&gt; '');&#10;                throw new Error(txt || `Erreur serveur (${res.status})`);&#10;            }&#10;            const data = await res.json();&#10;            renderSlots(dateIso, data);&#10;        } catch (err) {&#10;            slotsEl.innerHTML = '';&#10;            msgEl.classList.add('error');&#10;            msgEl.textContent = 'Erreur lors du chargement des créneaux.';&#10;            console.error(err);&#10;        } finally {&#10;            if (msgEl.textContent === 'Chargement des créneaux...') msgEl.textContent = '';&#10;        }&#10;    });&#10;})();&#10;&lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;&#10;" />
              <option name="updatedContent" value="&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;&#10;&lt;%@ taglib uri=&quot;jakarta.tags.core&quot; prefix=&quot;c&quot; %&gt;&#10;&lt;%@ taglib uri=&quot;jakarta.tags.functions&quot; prefix=&quot;fn&quot; %&gt;&#10;&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;fr&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;title&gt;Disponibilités - ${doctor.user.name}&lt;/title&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot; /&gt;&#10;    &lt;style&gt;&#10;        :root {&#10;            --primary: #6366F1;&#10;            --primary-dark: #4F46E5;&#10;            --primary-light: #818CF8;&#10;            --text: #1F2937;&#10;            --text-light: #6B7280;&#10;            --bg: #F3F4F6;&#10;            --card: #FFFFFF;&#10;            --green: #10B981;&#10;            --danger: #EF4444;&#10;        }&#10;        body { font-family: Inter, system-ui, -apple-system, Segoe UI, Roboto, Arial; background: var(--bg); margin: 0; color: var(--text); }&#10;        .container { max-width: 1100px; margin: 2rem auto; padding: 0 1rem; }&#10;        .header { display:flex; align-items:center; justify-content:space-between; margin-bottom: 1.25rem; }&#10;        .back { text-decoration:none; color: var(--primary-dark); font-weight:600; }&#10;        .card { background: var(--card); border-radius: 16px; box-shadow: 0 6px 18px rgba(0,0,0,.08); padding: 1.25rem; margin-bottom: 1rem; }&#10;        .doctor { display:flex; align-items:center; gap: 1rem; }&#10;        .avatar { width:56px; height:56px; border-radius: 50%; background: linear-gradient(135deg,var(--primary),var(--primary-light)); display:flex; align-items:center; justify-content:center; color:#fff; font-weight:800; font-size:1.2rem; }&#10;        .title { font-size:1.1rem; color: var(--text-light); }&#10;        .grid { display:grid; grid-template-columns: repeat(7, 1fr); gap: .5rem; }&#10;        .dow { text-align:center; font-weight:700; color: var(--text-light); padding:.5rem 0; }&#10;        .day { background:#fff; border: 2px solid #E5E7EB; border-radius:12px; min-height:72px; padding:.5rem; position:relative; cursor: default; }&#10;        .day .num { font-weight:700; }&#10;        .day.available { border-color: var(--green); background: #ECFDF5; cursor: pointer; }&#10;        .day.selected { outline: 3px solid var(--primary-light); }&#10;        .legend { display:flex; align-items:center; gap:.75rem; color: var(--text-light); font-size:.95rem; }&#10;        .legend .box { width:14px; height:14px; border-radius:4px; background:#ECFDF5; border:2px solid var(--green); }&#10;        .cal-header { display:flex; align-items:center; justify-content:space-between; margin-bottom:.75rem; }&#10;        .nav a { text-decoration:none; color:#fff; background: var(--primary); padding:.5rem .75rem; border-radius:8px; font-weight:600; }&#10;        .weekly ul { margin: .5rem 0 0 1rem; color: var(--text-light);}        &#10;        .badge { display:inline-block; padding:.25rem .5rem; border-radius:8px; background: #EEF2FF; color: #3730A3; font-size:.8rem; font-weight:700; }&#10;    &lt;/style&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;&lt;div class=&quot;container&quot;&gt;&#10;    &lt;div class=&quot;header&quot;&gt;&#10;        &lt;a class=&quot;back&quot; href=&quot;${pageContext.request.contextPath}/patient&quot;&gt;&amp;larr; Retour aux recherches&lt;/a&gt;&#10;        &lt;div class=&quot;legend&quot;&gt;&lt;span class=&quot;box&quot;&gt;&lt;/span&gt; Jours disponibles&lt;/div&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;div class=&quot;card doctor&quot;&gt;&#10;        &lt;div class=&quot;avatar&quot;&gt;&#10;            &lt;c:choose&gt;&#10;                &lt;c:when test=&quot;${not empty doctor.user.name}&quot;&gt;${fn:toUpperCase(fn:substring(doctor.user.name,0,1))}&lt;/c:when&gt;&#10;                &lt;c:otherwise&gt;DR&lt;/c:otherwise&gt;&#10;            &lt;/c:choose&gt;&#10;        &lt;/div&gt;&#10;        &lt;div&gt;&#10;            &lt;div style=&quot;font-size:1.25rem; font-weight:800;&quot;&gt;Dr. ${doctor.user.name}&lt;/div&gt;&#10;            &lt;div class=&quot;title&quot;&gt;${doctor.titre != null ? doctor.titre : 'Médecin'} • &lt;strong&gt;${doctor.specialite.name}&lt;/strong&gt;&lt;/div&gt;&#10;            &lt;div style=&quot;margin-top:.35rem;&quot;&gt;&lt;span class=&quot;badge&quot;&gt;Matricule: ${doctor.matricule}&lt;/span&gt;&lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;div class=&quot;card weekly&quot;&gt;&#10;        &lt;div style=&quot;font-weight:800; margin-bottom:.5rem;&quot;&gt;Créneaux hebdomadaires&lt;/div&gt;&#10;        &lt;c:choose&gt;&#10;            &lt;c:when test=&quot;${empty weekly}&quot;&gt;&#10;                &lt;div class=&quot;muted&quot;&gt;Aucune disponibilité renseignée.&lt;/div&gt;&#10;            &lt;/c:when&gt;&#10;            &lt;c:otherwise&gt;&#10;                &lt;ul&gt;&#10;                    &lt;c:forEach var=&quot;e&quot; items=&quot;${weekly}&quot;&gt;&#10;                        &lt;li&gt;&#10;                            &lt;strong&gt;${e.key}&lt;/strong&gt;:&#10;                            &lt;c:forEach var=&quot;label&quot; items=&quot;${e.value}&quot; varStatus=&quot;s&quot;&gt;&#10;                                ${label}&lt;c:if test=&quot;${!s.last}&quot;&gt;, &lt;/c:if&gt;&#10;                            &lt;/c:forEach&gt;&#10;                        &lt;/li&gt;&#10;                    &lt;/c:forEach&gt;&#10;                &lt;/ul&gt;&#10;            &lt;/c:otherwise&gt;&#10;        &lt;/c:choose&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;div class=&quot;card&quot;&gt;&#10;        &lt;div class=&quot;cal-header&quot;&gt;&#10;            &lt;div style=&quot;font-weight:800; font-size:1.1rem;&quot;&gt;${fn:toUpperCase(monthLabel)} ${year}&lt;/div&gt;&#10;            &lt;div class=&quot;nav&quot;&gt;&#10;                &lt;a href=&quot;${pageContext.request.contextPath}/patient/doctor?id=${doctor.id}&amp;year=${prevYear}&amp;month=${prevMonth}&quot;&gt;Précédent&lt;/a&gt;&#10;                &lt;a href=&quot;${pageContext.request.contextPath}/patient/doctor?id=${doctor.id}&amp;year=${nextYear}&amp;month=${nextMonth}&quot; style=&quot;margin-left:.5rem; background: var(--primary-dark);&quot;&gt;Suivant&lt;/a&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;        &lt;div id=&quot;calendar&quot; class=&quot;grid&quot; data-year=&quot;${year}&quot; data-month=&quot;${month}&quot; data-doctor-id=&quot;${doctor.id}&quot; data-context=&quot;${pageContext.request.contextPath}&quot;&gt;&#10;            &lt;div class=&quot;dow&quot;&gt;Lun&lt;/div&gt;&#10;            &lt;div class=&quot;dow&quot;&gt;Mar&lt;/div&gt;&#10;            &lt;div class=&quot;dow&quot;&gt;Mer&lt;/div&gt;&#10;            &lt;div class=&quot;dow&quot;&gt;Jeu&lt;/div&gt;&#10;            &lt;div class=&quot;dow&quot;&gt;Ven&lt;/div&gt;&#10;            &lt;div class=&quot;dow&quot;&gt;Sam&lt;/div&gt;&#10;            &lt;div class=&quot;dow&quot;&gt;Dim&lt;/div&gt;&#10;            &lt;!-- leading blanks --&gt;&#10;            &lt;c:forEach var=&quot;i&quot; begin=&quot;1&quot; end=&quot;${firstDow - 1}&quot;&gt;&#10;                &lt;div&gt;&lt;/div&gt;&#10;            &lt;/c:forEach&gt;&#10;            &lt;!-- days --&gt;&#10;            &lt;c:forEach var=&quot;cell&quot; items=&quot;${dayCells}&quot;&gt;&#10;                &lt;div class=&quot;day ${cell.available ? 'available' : ''}&quot;&#10;                     data-day=&quot;${cell.day}&quot;&#10;                     data-available=&quot;${cell.available}&quot;&gt;&#10;                    &lt;div class=&quot;num&quot;&gt;${cell.day}&lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/c:forEach&gt;&#10;            &lt;!-- trailing blanks to complete last week (optional visual balance) --&gt;&#10;            &lt;c:set var=&quot;totalCells&quot; value=&quot;${(firstDow - 1) + daysInMonth}&quot; /&gt;&#10;            &lt;c:set var=&quot;rem&quot; value=&quot;${totalCells % 7}&quot; /&gt;&#10;            &lt;c:if test=&quot;${rem != 0}&quot;&gt;&#10;                &lt;c:forEach var=&quot;i&quot; begin=&quot;1&quot; end=&quot;${7 - rem}&quot;&gt;&#10;                    &lt;div&gt;&lt;/div&gt;&#10;                &lt;/c:forEach&gt;&#10;            &lt;/c:if&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&lt;/div&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>